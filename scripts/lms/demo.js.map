{"version":3,"sources":["scripts/lms/demo.js"],"names":["dtpsLMS","name","shortName","description","url","logo","source","genericGradebook","isDemoLMS","fetchUser","Promise","resolve","reject","id","photoURL","fetchClasses","userID","subject","homepage","numStudents","modules","discussions","pages","color","grade","letter","previousLetter","image","teacher","fetchAssignments","classID","title","body","dueAt","Date","getTime","turnedIn","locked","category","value","publishedAt","rubric","gradedAt","score","scoreName","late","fetchModules","items","type","fetchAnnouncements","postedAt","getDate","fetchHomepage","fetchDiscussionThreads","fetchDiscussionPosts","threadID","requireInitialPost","posts","author","fetchPages","fetchPageContent","pageID","updatedAt","content","baseURL","document","currentScript","src","split","jQuery","getScript"],"mappings":"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","sourceRoot":"/","sourcesContent":["/**\r\n * @file DTPS Demo LMS\r\n * @author jottocraft\r\n * \r\n * @copyright Copyright (c) 2018-2021 jottocraft. All rights reserved.\r\n * @license GPL-2.0-only\r\n * \r\n * This LMS script is for demonstrating Power+ and doesn't fetch actual data\r\n * JSDoc documentation for these LMS functions can be found near the end of core.js\r\n */\r\n\r\n//DTPS LMS configuration\r\nvar dtpsLMS = {\r\n    name: \"Demo LMS\",\r\n    shortName: \"Demo\",\r\n    description: \"All content in this LMS is not real and is for demonstration purposes only\",\r\n    url: \"https://powerplus.app\",\r\n    logo: \"https://powerplus.app/logo.png\",\r\n    source: \"https://github.com/jottocraft/dtps/blob/main/scripts/lms/demo.js\",\r\n    genericGradebook: true,\r\n    isDemoLMS: true\r\n};\r\n\r\n//Return sample user data\r\ndtpsLMS.fetchUser = function () {\r\n    return new Promise(function (resolve, reject) {\r\n        resolve({\r\n            name: \"Demo User\",\r\n            id: \"1\",\r\n            photoURL: \"https://powerplus.app/logo.png\"\r\n        });\r\n    })\r\n}\r\n\r\n//Fetch class data from Canvas\r\ndtpsLMS.fetchClasses = function (userID) {\r\n    return new Promise(function (resolve, reject) {\r\n        resolve([{\r\n            name: \"Demo Class\",\r\n            id: \"1\",\r\n            subject: \"Demo Class\",\r\n            description: `<p>This class is for demonstration purposes only and is not a real class</p>`,\r\n            homepage: true,\r\n            numStudents: 1337,\r\n            modules: true,\r\n            discussions: true,\r\n            pages: true,\r\n            color: \"#8800ff\",\r\n            grade: 81,\r\n            letter: \"B-\",\r\n            previousLetter: \"A\",\r\n            image: \"https://powerplus.app/wallpaper.png\",\r\n            teacher: {\r\n                name: \"Demo Teacher\",\r\n                id: \"2\",\r\n                photoURL: \"https://powerplus.app/logo.png\"\r\n            }\r\n        }]);\r\n    })\r\n}\r\n\r\n//Fetches assignment data from Canvas\r\ndtpsLMS.fetchAssignments = function (userID, classID) {\r\n    return new Promise(function (resolve, reject) {\r\n        if (classID == \"1\") {\r\n            resolve([\r\n                {\r\n                    title: \"Demo assignment 1\",\r\n                    id: \"191\",\r\n                    body: \"<p>This assignment is for demonstration purposes only</p>\",\r\n                    dueAt: new Date().getTime() + 3000000,\r\n                    turnedIn: true,\r\n                    locked: false,\r\n                    category: \"Demo assignments\",\r\n                    value: 12,\r\n                    publishedAt: new Date().getTime() - 100000000,\r\n                    rubric: [\r\n                        {\r\n                            title: \"Demo outcome 1\",\r\n                            id: \"1\",\r\n                            value: 4,\r\n                            description: \"This outcome is for demonstration purposes only\"\r\n                        },\r\n                        {\r\n                            title: \"Demo outcome 2\",\r\n                            id: \"2\",\r\n                            value: 4,\r\n                            description: \"This outcome is for demonstration purposes only\"\r\n                        },\r\n                        {\r\n                            title: \"Demo outcome 3\",\r\n                            id: \"3\",\r\n                            value: 4,\r\n                            description: \"This outcome is for demonstration purposes only\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"Demo assignment 2\",\r\n                    id: \"192\",\r\n                    body: \"<p>This assignment is for demonstration purposes only</p>\",\r\n                    dueAt: new Date().getTime() - 100000000,\r\n                    turnedIn: true,\r\n                    locked: true,\r\n                    gradedAt: new Date(),\r\n                    grade: 8,\r\n                    value: 8,\r\n                    letter: \"A\",\r\n                    category: \"Demo assignments\",\r\n                    publishedAt: new Date().getTime() - 1000000000,\r\n                    rubric: [\r\n                        {\r\n                            title: \"Demo outcome 1\",\r\n                            id: \"1\",\r\n                            value: 4,\r\n                            description: \"This outcome is for demonstration purposes only\",\r\n                            score: 4,\r\n                            scoreName: \"Beyond Innovation++\",\r\n                            color: \"#4f9e59\"\r\n                        },\r\n                        {\r\n                            title: \"Demo outcome 2\",\r\n                            id: \"2\",\r\n                            value: 4,\r\n                            description: \"This outcome is for demonstration purposes only\",\r\n                            score: 4,\r\n                            scoreName: \"Beyond Innovation++\",\r\n                            color: \"#4f9e59\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"Demo assignment 3\",\r\n                    id: \"193\",\r\n                    body: \"<p>This assignment is for demonstration purposes only</p>\",\r\n                    dueAt: new Date().getTime() - 100000000,\r\n                    turnedIn: true,\r\n                    late: true,\r\n                    locked: true,\r\n                    grade: 5,\r\n                    gradedAt: new Date(),\r\n                    value: 8,\r\n                    letter: \"B\",\r\n                    category: \"Demo assignments\",\r\n                    publishedAt: new Date().getTime() - 1000000000,\r\n                    rubric: [\r\n                        {\r\n                            title: \"Demo outcome 1\",\r\n                            id: \"1\",\r\n                            value: 4,\r\n                            description: \"This outcome is for demonstration purposes only\",\r\n                            score: 2,\r\n                            scoreName: \"Developing\",\r\n                            color: \"#c26d44\"\r\n                        },\r\n                        {\r\n                            title: \"Demo outcome 2\",\r\n                            id: \"2\",\r\n                            value: 4,\r\n                            description: \"This outcome is for demonstration purposes only\",\r\n                            score: 3,\r\n                            scoreName: \"Proficient\",\r\n                            color: \"#a1b553\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"Demo assignment 4\",\r\n                    id: \"194\",\r\n                    body: \"<p>This assignment is for demonstration purposes only</p>\",\r\n                    dueAt: new Date().getTime() + 10000000,\r\n                    value: 4,\r\n                    category: \"Demo assignments\",\r\n                    publishedAt: new Date().getTime() - 1000000000,\r\n                    rubric: [\r\n                        {\r\n                            title: \"Demo outcome 1\",\r\n                            id: \"1\",\r\n                            value: 4,\r\n                            description: \"This outcome is for demonstration purposes only\"\r\n                        }\r\n                    ]\r\n                }\r\n            ])\r\n        }\r\n    })\r\n}\r\n\r\n//Fetches modules data from Canvas\r\ndtpsLMS.fetchModules = function (userID, classID) {\r\n    return new Promise(function (resolve, reject) {\r\n        resolve([\r\n            {\r\n                title: \"Demo module\",\r\n                id: \"1\",\r\n                items: [\r\n                    {\r\n                        type: \"url\",\r\n                        title: \"google.com\",\r\n                        url: \"https://www.google.com\"\r\n                    },\r\n                    {\r\n                        type: \"page\",\r\n                        title: \"Demo Page\",\r\n                        id: \"1\"\r\n                    },\r\n                    {\r\n                        type: \"discussion\",\r\n                        title: \"Demo Discussion\",\r\n                        id: \"1\"\r\n                    },\r\n                    {\r\n                        type: \"assignment\",\r\n                        title: \"Demo Assignment 1\",\r\n                        id: \"191\"\r\n                    },\r\n                    {\r\n                        type: \"assignment\",\r\n                        title: \"Demo Assignment 2\",\r\n                        id: \"192\"\r\n                    }\r\n                ]\r\n            }\r\n        ]);\r\n    });\r\n}\r\n\r\n//Fetches announcement data from Canvas\r\ndtpsLMS.fetchAnnouncements = function (classID) {\r\n    return new Promise(function (resolve, reject) {\r\n        resolve([{\r\n            title: \"Demo Announcement\",\r\n            postedAt: new Date().getDate(),\r\n            body: \"<p>This announcement is for demonstration purposes only</p>\"\r\n        }]);\r\n    });\r\n}\r\n\r\n//Fetches homepage data from Canvas\r\ndtpsLMS.fetchHomepage = function (classID) {\r\n    return new Promise(function (resolve, reject) {\r\n        resolve(`<p>This homepage is for demonstration purposes only</p>`);\r\n    });\r\n}\r\n\r\n//Fetches discussion thread data from Canvas\r\ndtpsLMS.fetchDiscussionThreads = function (classID) {\r\n    return new Promise(function (resolve, reject) {\r\n        resolve([\r\n            {\r\n                title: \"Demo Discussion\",\r\n                id: \"1\",\r\n                locked: true\r\n            }\r\n        ])\r\n    })\r\n}\r\n\r\n//Fetches discussion thread posts from Canvas\r\ndtpsLMS.fetchDiscussionPosts = function (classID, threadID) {\r\n    return new Promise(function (resolve, reject) {\r\n        resolve({\r\n            title: \"Demo Discussion\",\r\n            id: \"1\",\r\n            locked: true,\r\n            requireInitialPost: false,\r\n            posts: [\r\n                {\r\n                    id: \"1\",\r\n                    body: `<p>This discussion is for demonstration purposes only</p>`,\r\n                    postedAt: new Date(),\r\n                    author: {\r\n                        name: \"Demo Teacher\",\r\n                        id: \"2\",\r\n                        photoURL: \"https://powerplus.app/logo.png\"\r\n                    }\r\n                }\r\n            ]\r\n        })\r\n    })\r\n}\r\n\r\n//Fetches pages list data from Canvas\r\ndtpsLMS.fetchPages = function (classID) {\r\n    return new Promise(function (resolve, reject) {\r\n        resolve([\r\n            {\r\n                title: \"Demo Page\",\r\n                id: \"1\"\r\n            }\r\n        ])\r\n    })\r\n}\r\n\r\n//Fetches pages list data from Canvas\r\ndtpsLMS.fetchPageContent = function (classID, pageID) {\r\n    return new Promise(function (resolve, reject) {\r\n        resolve({\r\n            title: \"Demo Page\",\r\n            id: \"1\",\r\n            updatedAt: new Date(),\r\n            content: `<p>This page is for demonstration purposes only</p>`,\r\n            author: {\r\n                name: \"Demo Teacher\",\r\n                id: \"2\",\r\n                photoURL: \"https://powerplus.app/logo.png\"\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\n//Get baseURL from the URL of this script\r\nvar baseURL = document.currentScript.src.split(\"/scripts/lms/demo.js\")[0];\r\n\r\n//Load Power+\r\njQuery.getScript(baseURL + \"/scripts/core.js\");"]}