{"version":3,"sources":["scripts/lms/demo.js"],"names":["dtpsLMS","name","shortName","description","url","logo","source","genericGradebook","isDemoLMS","fetchUser","Promise","resolve","reject","id","photoURL","fetchClasses","subject","homepage","numStudents","modules","discussions","pages","color","grade","letter","previousLetter","image","teacher","fetchAssignments","classID","title","body","dueAt","Date","getTime","turnedIn","locked","category","value","publishedAt","rubric","gradedAt","score","scoreName","late","fetchModules","items","type","fetchAnnouncements","postedAt","getDate","fetchHomepage","fetchDiscussionThreads","fetchDiscussionPosts","threadID","requireInitialPost","posts","author","fetchPages","fetchPageContent","pageID","updatedAt","content","baseURL","document","currentScript","src","split","jQuery","getScript"],"mappings":"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","sourceRoot":"/","sourcesContent":["/**\n * @file DTPS Demo LMS\n * @author jottocraft\n * \n * @copyright Copyright (c) 2018-2020 jottocraft. All rights reserved.\n * @license GPL-2.0-only\n * \n * This LMS script is for demonstrating Power+ and doesn't fetch actual data\n * JSDoc documentation for these LMS functions can be found near the end of core.js\n */\n\n//DTPS LMS configuration\nvar dtpsLMS = {\n    name: \"Demo LMS\",\n    shortName: \"Demo\",\n    description: \"All content in this LMS is not real and is for demonstration purposes only\",\n    url: \"https://powerplus.app\",\n    logo: \"https://powerplus.app/logo.png\",\n    source: \"https://github.com/jottocraft/dtps/blob/master/scripts/lms/demo.js\",\n    genericGradebook: true,\n    isDemoLMS: true\n};\n\n//Return sample user data\ndtpsLMS.fetchUser = function () {\n    return new Promise(function (resolve, reject) {\n        resolve({\n            name: \"Demo User\",\n            id: \"1\",\n            photoURL: \"https://powerplus.app/logo.png\"\n        });\n    })\n}\n\n//Fetch class data from Canvas\ndtpsLMS.fetchClasses = function () {\n    return new Promise(function (resolve, reject) {\n        resolve([{\n            name: \"Demo Class\",\n            id: \"1\",\n            subject: \"Demo Class\",\n            description: `<p>This class is for demonstration purposes only and is not a real class</p>`,\n            homepage: true,\n            numStudents: 1337,\n            modules: true,\n            discussions: true,\n            pages: true,\n            color: \"#8800ff\",\n            grade: 81,\n            letter: \"B-\",\n            previousLetter: \"A\",\n            image: \"https://powerplus.app/wallpaper.png\",\n            teacher: {\n                name: \"Demo Teacher\",\n                id: \"2\",\n                photoURL: \"https://powerplus.app/logo.png\"\n            }\n        }]);\n    })\n}\n\n//Fetches assignment data from Canvas\ndtpsLMS.fetchAssignments = function (classID) {\n    return new Promise(function (resolve, reject) {\n        if (classID == \"1\") {\n            resolve([\n                {\n                    title: \"Demo assignment 1\",\n                    id: \"191\",\n                    body: \"<p>This assignment is for demonstration purposes only</p>\",\n                    dueAt: new Date().getTime() + 3000000,\n                    turnedIn: true,\n                    locked: false,\n                    category: \"Demo assignments\",\n                    value: 12,\n                    publishedAt: new Date().getTime() - 100000000,\n                    rubric: [\n                        {\n                            title: \"Demo outcome 1\",\n                            id: \"1\",\n                            value: 4,\n                            description: \"This outcome is for demonstration purposes only\"\n                        },\n                        {\n                            title: \"Demo outcome 2\",\n                            id: \"2\",\n                            value: 4,\n                            description: \"This outcome is for demonstration purposes only\"\n                        },\n                        {\n                            title: \"Demo outcome 3\",\n                            id: \"3\",\n                            value: 4,\n                            description: \"This outcome is for demonstration purposes only\"\n                        }\n                    ]\n                },\n                {\n                    title: \"Demo assignment 2\",\n                    id: \"192\",\n                    body: \"<p>This assignment is for demonstration purposes only</p>\",\n                    dueAt: new Date().getTime() - 100000000,\n                    turnedIn: true,\n                    locked: true,\n                    gradedAt: new Date(),\n                    grade: 8,\n                    value: 8,\n                    letter: \"A\",\n                    category: \"Demo assignments\",\n                    publishedAt: new Date().getTime() - 1000000000,\n                    rubric: [\n                        {\n                            title: \"Demo outcome 1\",\n                            id: \"1\",\n                            value: 4,\n                            description: \"This outcome is for demonstration purposes only\",\n                            score: 4,\n                            scoreName: \"Beyond Innovation++\",\n                            color: \"#4f9e59\"\n                        },\n                        {\n                            title: \"Demo outcome 2\",\n                            id: \"2\",\n                            value: 4,\n                            description: \"This outcome is for demonstration purposes only\",\n                            score: 4,\n                            scoreName: \"Beyond Innovation++\",\n                            color: \"#4f9e59\"\n                        }\n                    ]\n                },\n                {\n                    title: \"Demo assignment 3\",\n                    id: \"193\",\n                    body: \"<p>This assignment is for demonstration purposes only</p>\",\n                    dueAt: new Date().getTime() - 100000000,\n                    turnedIn: true,\n                    late: true,\n                    locked: true,\n                    grade: 5,\n                    gradedAt: new Date(),\n                    value: 8,\n                    letter: \"B\",\n                    category: \"Demo assignments\",\n                    publishedAt: new Date().getTime() - 1000000000,\n                    rubric: [\n                        {\n                            title: \"Demo outcome 1\",\n                            id: \"1\",\n                            value: 4,\n                            description: \"This outcome is for demonstration purposes only\",\n                            score: 2,\n                            scoreName: \"Developing\",\n                            color: \"#c26d44\"\n                        },\n                        {\n                            title: \"Demo outcome 2\",\n                            id: \"2\",\n                            value: 4,\n                            description: \"This outcome is for demonstration purposes only\",\n                            score: 3,\n                            scoreName: \"Proficient\",\n                            color: \"#a1b553\"\n                        }\n                    ]\n                },\n                {\n                    title: \"Demo assignment 4\",\n                    id: \"194\",\n                    body: \"<p>This assignment is for demonstration purposes only</p>\",\n                    dueAt: new Date().getTime() + 10000000,\n                    value: 4,\n                    category: \"Demo assignments\",\n                    publishedAt: new Date().getTime() - 1000000000,\n                    rubric: [\n                        {\n                            title: \"Demo outcome 1\",\n                            id: \"1\",\n                            value: 4,\n                            description: \"This outcome is for demonstration purposes only\"\n                        }\n                    ]\n                }\n            ])\n        }\n    })\n}\n\n//Fetches modules data from Canvas\ndtpsLMS.fetchModules = function (classID) {\n    return new Promise(function (resolve, reject) {\n        resolve([\n            {\n                title: \"Demo module\",\n                id: \"1\",\n                items: [\n                    {\n                        type: \"url\",\n                        title: \"google.com\",\n                        url: \"https://www.google.com\"\n                    },\n                    {\n                        type: \"page\",\n                        title: \"Demo Page\",\n                        id: \"1\"\n                    },\n                    {\n                        type: \"discussion\",\n                        title: \"Demo Discussion\",\n                        id: \"1\"\n                    },\n                    {\n                        type: \"assignment\",\n                        title: \"Demo Assignment 1\",\n                        id: \"191\"\n                    },\n                    {\n                        type: \"assignment\",\n                        title: \"Demo Assignment 2\",\n                        id: \"192\"\n                    }\n                ]\n            }\n        ]);\n    });\n}\n\n//Fetches announcement data from Canvas\ndtpsLMS.fetchAnnouncements = function (classID) {\n    return new Promise(function (resolve, reject) {\n        resolve([{\n            title: \"Demo Announcement\",\n            postedAt: new Date().getDate(),\n            body: \"<p>This announcement is for demonstration purposes only</p>\"\n        }]);\n    });\n}\n\n//Fetches homepage data from Canvas\ndtpsLMS.fetchHomepage = function (classID) {\n    return new Promise(function (resolve, reject) {\n        resolve(`<p>This homepage is for demonstration purposes only</p>`);\n    });\n}\n\n//Fetches discussion thread data from Canvas\ndtpsLMS.fetchDiscussionThreads = function (classID) {\n    return new Promise(function (resolve, reject) {\n        resolve([\n            {\n                title: \"Demo Discussion\",\n                id: \"1\",\n                locked: true\n            }\n        ])\n    })\n}\n\n//Fetches discussion thread posts from Canvas\ndtpsLMS.fetchDiscussionPosts = function (classID, threadID) {\n    return new Promise(function (resolve, reject) {\n        resolve({\n            title: \"Demo Discussion\",\n            id: \"1\",\n            locked: true,\n            requireInitialPost: false,\n            posts: [\n                {\n                    id: \"1\",\n                    body: `<p>This discussion is for demonstration purposes only</p>`,\n                    postedAt: new Date(),\n                    author: {\n                        name: \"Demo Teacher\",\n                        id: \"2\",\n                        photoURL: \"https://powerplus.app/logo.png\"\n                    }\n                }\n            ]\n        })\n    })\n}\n\n//Fetches pages list data from Canvas\ndtpsLMS.fetchPages = function (classID) {\n    return new Promise(function (resolve, reject) {\n        resolve([\n            {\n                title: \"Demo Page\",\n                id: \"1\"\n            }\n        ])\n    })\n}\n\n//Fetches pages list data from Canvas\ndtpsLMS.fetchPageContent = function (classID, pageID) {\n    return new Promise(function (resolve, reject) {\n        resolve({\n            title: \"Demo Page\",\n            id: \"1\",\n            updatedAt: new Date(),\n            content: `<p>This page is for demonstration purposes only</p>`,\n            author: {\n                name: \"Demo Teacher\",\n                id: \"2\",\n                photoURL: \"https://powerplus.app/logo.png\"\n            }\n        });\n    })\n}\n\n//Get baseURL from the URL of this script\nvar baseURL = document.currentScript.src.split(\"/scripts/lms/demo.js\")[0];\n\n//Load Power+\njQuery.getScript(baseURL + \"/scripts/core.js\");"]}