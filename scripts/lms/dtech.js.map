{"version":3,"sources":["scripts/lms/dtech.js"],"names":["baseURL","document","currentScript","src","split","jQuery","getScript","dtpsLMS","name","legalName","description","logo","source","useRubricGrades","institutionSpecific","genericGradebook","dtech","isUsualDueDate","date","Date","getHours","getMinutes","updateAssignments","rawAssignments","Promise","resolve","reject","map","assignment","rubric","forEach","rubricItem","scoreName","shortenDtechRubricScoreName","undefined","score","color","dtechRubricColor","updateClasses","classes","tmpNewArray","course","i","term","dtps","remoteConfig","dtechCurrentTerm","id","debugClassID","endDate","push","showVideoMeetingButton","user","parent","homepage","videoMeetingURL","matches","period","match","Number","test","subject","Infinity","window","localStorage","getItem","group","icon","sort","a","b","fetchMeetingURL","classID","find","fetchHomepage","then","meetingURL","$","length","link","children","attr","toUpperCase","includes","calculateGrade","assignments","formula","String","dtechResults","dtechGradeCalc","run","letter","results","rating","letters","params","2020-21","percentage","A","A-","B+","B","B-","C","I","lowest","average","array","sum","item","outcomesOverride","gradeVariations","outcomes","outcome","scores","title","Object","keys","values","outcomeScores","RubricItem","filter","this","lowestScore","Math","min","droppedArray","slice","splice","indexOf","droppedAverage","scoreType","droppedScore","outcomeAvgs","getLetter","bestVariation","variation","parameters","numOutcomesRequired","floor","number75","number75thresh","bestLetter","letterIndexes","lowestLetterIndex","max","gradebook","gradeCalculation","gradeCalcSummary","previousLetter","toFixed","gradebookExpanded","join","outcomeHTML","dividerAdded","keyA","keyB","outcomeID","divider","assessment","aIndex","allowWhatIfGrades","assignmentID","num","assignmentTitle","scrollListenerAdded","gradebookDidRender","toArray","ele","listenForWhatIf","click","addWhatIf","sticky","getElementById","offsetTop","parseFloat","css","onscroll","pageYOffset","selectedClass","selectedContent","addClass","removeClass","addEventListener","initWhatIf","typedScore","text","isNaN","whatIfOutcomes","whatIfGrade","calcWhatIf","hasClass","remove","e","placeCaretAtEnd","el","focus","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","body","createTextRange","textRange","moveToElementText","select","key","preventDefault","JSON","parse","stringify","html","after","value","append"],"mappings":";;;;;;;;;AAWA,IAAIA,QAAUC,SAASC,cAAcC,IAAIC,MAAM,yBAAyB,GAGxEC,OAAOC,UAAUN,QAAU,0BAA0B,WAEjDO,QAAQC,KAAO,SACfD,QAAQE,UAAY,0DACpBF,QAAQG,YAAc,2DACtBH,QAAQI,KAAO,kCACfJ,QAAQK,OAAS,oEACjBL,QAAQM,iBAAkB,EAC1BN,QAAQO,qBAAsB,EAC9BP,QAAQQ,kBAAmB,EAC3BR,QAAQS,OAAQ,EAGhBT,QAAQU,eAAiB,SAAUC,GAG/B,OAFIA,EAAO,IAAIC,KAAKD,IAEXE,YAAc,KAEQ,IAAnBF,EAAKE,YAAsBF,EAAKG,aAAe,IAEhDH,EAAKE,WAAa,IASjCb,QAAQe,kBAAoB,SAAUC,GAClC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAkBzBD,EAjByBF,EAAeI,KAAIC,IAEpCA,EAAWC,QAEXD,EAAWC,OAAOC,SAAQC,IACtBA,EAAWC,UAAYC,EAA4BF,EAAWC,gBAErCE,IAArBH,EAAWI,QACXJ,EAAWK,MAAQC,EAAiBN,EAAWI,WAMpDP,UAQnBrB,QAAQ+B,cAAgB,SAAUC,GAC9B,OAAO,IAAIf,SAAQ,CAACC,EAASC,KACzB,IAAIc,EAAc,GAClBD,EAAQT,SAAQ,CAACW,EAAQC,MACjBD,EAAOE,MAAQC,KAAKC,aAAaC,kBAE1BL,EAAOM,IAAMH,KAAKC,aAAaG,eAE9BP,EAAOQ,SAAY,IAAI9B,KAAS,IAAIA,KAAKsB,EAAOQ,WAHxDT,EAAYU,KAAKT,GAQhBG,KAAKC,aAAaM,yBAA0BP,KAAKQ,KAAKC,QAAWZ,EAAOa,UAAab,EAAOE,OAASC,KAAKC,aAAaC,mBACxHL,EAAOc,gBAAkB,MAI7B,IAAIC,EAAUf,EAAOgB,OAAOC,MAAM,gBAC9BF,GAAWA,EAAQ,GACnBf,EAAOgB,OAAuB,KAAdD,EAAQ,GAAY,EAAIG,OAAOH,EAAQ,IAChD,2BAA2BI,KAAKnB,EAAOoB,SAC9CpB,EAAOgB,OAAS,GACT,gBAAgBG,KAAKnB,EAAOoB,SACnCpB,EAAOgB,OAAS,GAEhBhB,EAAOgB,OAASK,EAAAA,EAIflB,KAAKQ,KAAKC,QAAoE,UAAzDU,OAAOC,aAAaC,QAAQ,2BAK/B,SAAfxB,EAAOE,KACPF,EAAOyB,MAAQ,aACO,MAAfzB,EAAOE,KACdF,EAAOyB,MAAQ,aACU,IAAjBzB,EAAOgB,QAAmC,IAAjBhB,EAAOgB,SACxChB,EAAOyB,MAAQ,eACfzB,EAAOE,KAAO,QAKlBF,EAAOM,IAAMH,KAAKC,aAAaG,aAC/BP,EAAO0B,KAAO,aACP,SAASP,KAAKnB,EAAOoB,SAC5BpB,EAAO0B,KAAO,QACP,iBAAiBP,KAAKnB,EAAOoB,SACpCpB,EAAO0B,KAAO,eACP,YAAYP,KAAKnB,EAAOoB,SAC/BpB,EAAO0B,KAAO,cACP,YAAYP,KAAKnB,EAAOoB,SAC/BpB,EAAO0B,KAAO,UACP,8BAA8BP,KAAKnB,EAAOoB,SACjDpB,EAAO0B,KAAO,UACP,8CAA8CP,KAAKnB,EAAOoB,SACjEpB,EAAO0B,KAAO,YACP,oBAAoBP,KAAKnB,EAAOoB,SACvCpB,EAAO0B,KAAO,cACP,yCAAyCP,KAAKnB,EAAOoB,SAC5DpB,EAAO0B,KAAO,kBACP,gBAAgBP,KAAKnB,EAAOoB,SACnCpB,EAAO0B,KAAO,UACP,aAAaP,KAAKnB,EAAOoB,SAChCpB,EAAO0B,KAAO,SACP,YAAYP,KAAKnB,EAAOoB,SAC/BpB,EAAO0B,KAAO,cACP,mCAAmCP,KAAKnB,EAAOoB,SACtDpB,EAAO0B,KAAO,SACP,qBAAqBP,KAAKnB,EAAOoB,SACxCpB,EAAO0B,KAAO,YACP,eAAeP,KAAKnB,EAAOoB,SAClCpB,EAAO0B,KAAO,QACP,2BAA2BP,KAAKnB,EAAOoB,SAC9CpB,EAAO0B,KAAO,UACP,SAASP,KAAKnB,EAAOoB,SAC5BpB,EAAO0B,KAAO,cACP,eAAeP,KAAKnB,EAAOoB,SAClCpB,EAAO0B,KAAO,QACP,cAAcP,KAAKnB,EAAOoB,WACjCpB,EAAO0B,KAAO,sBAGtB5B,EAAUC,EAGLI,KAAKQ,KAAKC,QAAoE,UAAzDU,OAAOC,aAAaC,QAAQ,0BAClD1B,EAAQ6B,MAAK,CAACC,EAAGC,KACS,SAAVD,EAAE1B,KAAkB,EAAc,MAAV0B,EAAE1B,KAAe,EAAc,OAAV0B,EAAE1B,KAAgB,EAAI,IACzD,SAAV2B,EAAE3B,KAAkB,EAAc,MAAV2B,EAAE3B,KAAe,EAAc,OAAV2B,EAAE3B,KAAgB,EAAI,KAMvFlB,EAAQc,OAKhBhC,QAAQgE,gBAAkB,SAAUC,GAChC,OAAO,IAAIhD,SAAQ,CAACC,EAASC,KACzB,IAAIe,EAASG,KAAKL,QAAQkC,MAAKhC,GAAUA,EAAOM,IAAMyB,IAElD/B,EAAOa,UAAab,EAAOE,MAAQC,KAAKC,aAAaC,kBACrDvC,QAAQmE,cAAcF,GAASG,MAAKrB,IAIhC,IAFA,IAAIsB,EAAa,KAERlC,EAAI,EAAGA,EAAImC,EAAEvB,GAAUmB,KAAK,KAAKK,OAAQpC,IAAK,CACnD,IAAIqC,EAAOF,EAAEA,EAAEvB,GAAUmB,KAAK,KAAK/B,IAC/BqC,EAAKC,SAAS,OAAOC,KAAK,QAAUF,EAAKC,SAAS,OAAOC,KAAK,OAAOC,cAAcC,SAAS,gBAAkBJ,EAAKE,KAAK,QAExHL,EAAaG,EAAKE,KAAK,QAChBF,EAAKE,KAAK,SAAWF,EAAKE,KAAK,QAAQE,SAAS,WAW/D1D,EAAQmD,UAOxBrE,QAAQ6E,eAAiB,SAAU3C,EAAQ4C,GACvC,IAAIC,EAAU,KAYd,IATmB,SAAf7C,EAAOE,MAEe,MAAfF,EAAOE,MAEP4C,OAAO9C,EAAOM,IAAIoC,SAASvC,KAAKC,aAAaG,iBAHpDsC,EAAU,WAQTA,EAAL,CAGA,IAAIE,EAAeC,EAAeC,IAAIL,EAAaC,GAEnD,OAAIE,EAEO,CACHG,OAAQH,EAAaI,QAAQD,OAC7B3E,MAAOwE,QAIX,IAOR,IAAIvD,EAA8B,SAAU4D,GACxC,OAAIN,OAAOM,GAAQX,cAAcC,SAAS,cAAsB,aAC5DI,OAAOM,GAAQX,cAAcC,SAAS,cAAsB,aAC5DI,OAAOM,GAAQX,cAAcC,SAAS,cAAsB,aAC5DI,OAAOM,GAAQX,cAAcC,SAAS,YAAoB,YACzDI,OAAOM,GAAQV,SAAS,MAASI,OAAOM,GAAQf,QAAU,GAAYe,EACpE,IAIPxD,EAAmB,SAAUF,GAC7B,OAAIA,EAAQ,EAAY,UACX,GAATA,EAAqB,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,EAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,EAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,IAAY,UACrBA,GAAS,EAAY,UACrBA,GAAS,EAAY,UACrBA,EAAQ,EAAY,eAAxB,GASAsD,EAAiB,CACjBK,QAAS,CAAC,IAAK,KAAM,KAAM,IAAK,KAAM,IAAK,KAC3CC,OAAQ,CAMJC,UAAW,CACPC,WAAY,CACRC,EAAK,IACLC,KAAM,IACNC,KAAM,IACNC,EAAK,IACLC,KAAM,IACNC,EAAK,IACLC,EAAK,GAETC,OAAQ,CACJP,EAAK,EACLC,KAAM,IACNC,KAAM,IACNC,EAAK,IACLC,KAAM,IACNC,EAAK,IACLC,EAAK,KAUjBE,QAAS,SAAUC,GACf,IAAIC,EAAM,EAEV,OADAD,EAAM7E,SAAQ+E,GAAQD,GAAOC,IACtBD,EAAMD,EAAM7B,QAWvBY,IAAK,SAAUL,EAAaC,EAASwB,GAGjC,IAAIC,EAAkB,GAIlBC,EAAWF,GAAoB,GAEnC,GAAe,WAAXxB,EAAsB,CAmCtB,GA9BKwB,GACDzB,EAAYvD,SAAQF,IACZA,EAAWC,QAGXD,EAAWC,OAAOC,SAAQC,SACIG,IAArBH,EAAWI,OAAwBJ,EAAWkF,UAG1CD,EAASjF,EAAWkF,WAErBD,EAASjF,EAAWkF,SAAW,CAC3BC,OAAQ,KAKhBF,EAASjF,EAAWkF,SAASC,OAAOhE,KAAKnB,GAGrCA,EAAWoF,QAAOH,EAASjF,EAAWkF,SAASE,MAAQpF,EAAWoF,cAUtD,GAAhCC,OAAOC,KAAKL,GAAUlC,OAAa,OAGvCsC,OAAOE,OAAON,GAAUlF,SAAQmF,IAE5B,IAAIM,EAAgBN,EAAQC,OAAOvF,KAAI6F,GAAcA,EAAWrF,QAAOsF,QAAOtF,GAAmB,OAAVA,IAGnFuE,EAAUgB,KAAKhB,QAAQa,GAGvBI,EAAcC,KAAKC,OAAON,GAG1BO,EAAeP,EAAcQ,QACjCD,EAAaE,OAAOF,EAAaG,QAAQN,GAAc,GAEvD,IAAIO,EAAiBR,KAAKhB,QAAQoB,GAG9BI,EAAiBxB,GAEjBO,EAAQkB,UAAY,UACpBlB,EAAQmB,aAAenB,EAAQC,OAAOvF,KAAI6F,GAAcA,EAAWrF,QAAO8F,QAAQN,GAClFV,EAAQP,QAAUwB,IAGlBjB,EAAQkB,UAAY,MACpBlB,EAAQP,QAAUA,SACXO,EAAQmB,iBAQvB,IAAIC,EAAcjB,OAAOE,OAAON,GAAUrF,KAAIsF,GAAWA,EAAQP,UACjEK,EAAgB7D,KAAKwE,KAAKY,UAAUD,EAAa/C,EAAS,QAK9D,IAAIiD,EAAgB,KASpB,OARAxB,EAAgBjF,SAAQ0G,MACfD,GAAkBb,KAAK5B,QAAQmC,QAAQO,EAAU7C,QAAU+B,KAAK5B,QAAQmC,QAAQM,EAAc5C,WAE/F4C,EAAgBC,MAKjB,CACH5C,QAAS2C,EACTjD,QAASA,EACT0B,SAAUA,IAYlBsB,UAAW,SAAUD,EAAa/C,EAASkD,GAGvC,IAAIC,EAAa,GAKjB,GAFAJ,EAAYjE,MAAK,CAACC,EAAGC,IAAMA,EAAID,IAEhB,WAAXiB,EAAsB,CAItB,IAAIQ,EAAU,GAIV4C,EAAsBd,KAAKe,MADd,IACoBN,EAAYvD,QAGvB,GAAtBuD,EAAYvD,OACZ2D,EAAWG,SAAWP,EAAY,GAElCI,EAAWG,SAAWP,EAAYK,EAAsB,GAE5DD,EAAWI,eAAiBH,EAM5B,IAHA,IAAII,EAAa,KAGRpG,EAAI,EAAGA,EAAIgF,KAAK5B,QAAQhB,OAAQpC,IAAK,CAC1C,IAAIiD,EAAS+B,KAAK5B,QAAQpD,GAE1B,GAAI+F,EAAWG,UAAYlB,KAAK3B,OAAOT,GAASW,WAAWN,GAAS,CAEhEmD,EAAanD,EAGb,OAKRG,EAAQ5C,KAAK4F,GAKTA,EAAa,KAGjBL,EAAWd,YAAcU,EAAYA,EAAYvD,OAAS,GAG1D,IAASpC,EAAI,EAAGA,EAAIgF,KAAK5B,QAAQhB,OAAQpC,IAAK,CAC1C,IAAIiD,EAAS+B,KAAK5B,QAAQpD,GAE1B,GAAI+F,EAAWd,aAAeD,KAAK3B,OAAOT,GAASmB,OAAOd,GAAS,CAE/DmD,EAAanD,EAGb,OAKRG,EAAQ5C,KAAK4F,GAIjB,IAAIC,EAAgBjD,EAAQnE,KAAIgE,GAAU+B,KAAK5B,QAAQmC,QAAQtC,KAC3DqD,EAAoBpB,KAAKqB,OAAOF,GAGpC,MAAO,CACHpD,OAHS+B,KAAK5B,QAAQkD,GAItBP,WAAYA,EACZD,UAAWA,KAKvBjI,QAAQ2I,UAAY,SAAUzG,GAC1B,OAAO,IAAIjB,SAAQ,CAACC,EAASC,KACzB,GAAIe,EAAO0G,kBAAoB1G,EAAO0G,iBAAiBnI,MAAO,CAE1D,GAA6C,WAAzCyB,EAAO0G,iBAAiBnI,MAAMsE,QAC9B,IAAI8D,EAA2B,sGACgD3G,EAAOL,sMAE/DK,EAAOkD,wCACxBlD,EAAO4G,eAAiB,6CAA6C5G,EAAO4G,sBAAwB,wOAI3E5G,EAAO0G,iBAAiBnI,MAAM4E,QAAQ6C,WAAWG,SAASU,QAAQ,4GACnB7G,EAAO0G,iBAAiBnI,MAAM4E,QAAQ6C,WAAWI,wKAGhGpG,EAAO0G,iBAAiBnI,MAAM4E,QAAQ6C,WAAWd,YAAY2B,QAAQ,4NAKxE7G,EAAOL,SAASQ,KAAK2G,kBAAoB,GAAK,8lBAYxD9D,EAAeK,QAAQnE,KAAIgE,GAC1B,kEACwBA,KAAUlD,EAAOkD,QAAUA,EAAS,SAAW,yEAC5CA,+DACZF,EAAeM,OAAOtD,EAAO0G,iBAAiBnI,MAAMsE,SAASW,WAAWN,gEACxEF,EAAeM,OAAOtD,EAAO0G,iBAAiBnI,MAAMsE,SAASmB,OAAOd,yGAGnG6D,KAAK,giBAMF5G,KAAK2G,kBAAoB,qEAAuE,4HAIlGH,EAAmB,GAI3B,IAAIK,EAAc,GACdC,GAAe,EACnBtC,OAAOC,KAAK5E,EAAO0G,iBAAiBnI,MAAMgG,UAAU5C,MAAK,SAAUC,EAAGC,GAClE,IAAIqF,EAAOlH,EAAO0G,iBAAiBnI,MAAMgG,SAAS3C,GAAGqC,QACjDkD,EAAOnH,EAAO0G,iBAAiBnI,MAAMgG,SAAS1C,GAAGoC,QAIrD,OAHYxE,MAARyH,IAAqBA,EAAO,OAASlH,EAAO0G,iBAAiBnI,MAAMgG,SAAS3C,GAAG6C,OAAOpC,QAC9E5C,MAAR0H,IAAqBA,EAAO,OAASnH,EAAO0G,iBAAiBnI,MAAMgG,SAAS1C,GAAG4C,OAAOpC,QAEtF6E,EAAOC,EAAa,EACpBD,EAAOC,GAAc,EAClB,KACR9H,SAAS+H,IACR,IAAI5C,EAAUxE,EAAO0G,iBAAiBnI,MAAMgG,SAAS6C,GAEjDC,GAAWJ,IAAiBzC,EAAQC,OAAOpC,OAC3CgF,IAASJ,GAAe,GAE5BD,EAAYvG,KAAa,yBACvB4G,EAAU,qFAAuF,sIAEQD,8MACyE5C,EAAQE,8CAElKjF,IAApB+E,EAAQP,QAAwB,sDACPmD,2IAAmJxH,EAAiB4E,EAAQP,aAAaO,EAAQP,QAAQ4C,QAAQ,qCACxO,gHAG2B,GAAzBrC,EAAQC,OAAOpC,OAAc,oOAG/BmC,EAAQC,OAAOvF,KAAI,CAACoI,EAAYC,IACb,2EACyBA,GAAU/C,EAAQmB,aAAe,UAAY,kBAAkB2B,EAAW9C,oBAAoB+C,gKACrGD,EAAW3H,mBAAmB4H,iBAAsBH,4BAAoCjH,KAAKC,aAAaoH,kBAAoB,kBAAoB,MAAMF,EAAW5H,6IACrG4H,EAAWG,kBAAkBzH,EAAO0H,UAAUJ,EAAWK,iHAGzJZ,KAAK,kEAIV5G,KAAKC,aAAaoH,kBAA4B,iEACVJ,iWAIlC,uDAqBZpI,EAf4B,mDACIgB,EAAOL,6rBAcfgH,EAAmB,SAAWK,EAAYD,KAAK,UAEvE/H,QAMZ,IAAI4I,GAAsB,EAC1B9J,QAAQ+J,mBAAqB,SAAU7H,GAYnC,GAVAoC,EAAE,oDAAoD0F,UAAUzI,SAAQ0I,IACpEC,EAAgBD,EAAK/H,MAIzBoC,EAAE,eAAe6F,OAAM,WACnBC,EAAUlI,EAAQoC,EAAE6C,MAAMzC,KAAK,kBAI9BoF,EAAqB,CACtBA,GAAsB,EACtB,IACIO,EADe3K,SAAS4K,eAAe,gBACjBC,UAAYC,WAAWlG,EAAE,QAAQmG,IAAI,gBAAkB,GACjFjH,OAAOkH,SAAW,WACTlH,OAAOmH,aAAeN,GAAahI,KAAKL,QAAQK,KAAKuI,gBAA4C,UAAxBvI,KAAKwI,gBAC/EvG,EAAE,iBAAiBwG,SAAS,qBAE5BxG,EAAE,iBAAiByG,YAAY,wBAO/C,IAAIb,EAAkB,SAAUD,EAAK/H,GACjC+H,EAAIe,iBAAiB,SAAS,WAE1BC,EAAW/I,GAGX,IAAIgJ,EAAa9H,OAAOkB,EAAE2F,GAAKkB,QAG3B7G,EAAE2F,GAAKkB,QAAW7G,EAAE2F,GAAKkB,OAAO5G,OAAS,IAAO6G,MAAMF,IAAgBA,GAAc,GAAOA,GAAc,GAEzG5G,EAAE2F,GAAKQ,IAAI,QAAS3I,EAAiBoJ,IAGtBhJ,EAAO0G,iBAAiBnI,MAAM4K,eAAejI,OAAOkB,EAAE2F,GAAKvF,KAAK,eAAeiC,OAAOvD,OAAOkB,EAAE2F,GAAKvF,KAAK,YAAY4G,aACnHJ,IAAehJ,EAAO0G,iBAAiBnI,MAAMgG,SAASrD,OAAOkB,EAAE2F,GAAKvF,KAAK,eAAeiC,OAAOvD,OAAOkB,EAAE2F,GAAKvF,KAAK,YAAY9C,MAC3I0C,EAAE2F,GAAKa,SAAS,YAEhBxG,EAAE2F,GAAKc,YAAY,YAIvB7I,EAAO0G,iBAAiBnI,MAAM4K,eAAejI,OAAOkB,EAAE2F,GAAKvF,KAAK,eAAeiC,OAAOvD,OAAOkB,EAAE2F,GAAKvF,KAAK,YAAY9C,MAAQsJ,EAG7HK,EAAWrJ,KAGXoC,EAAE2F,GAAKQ,IAAI,QAAS,kBACpBnG,EAAE2F,GAAKa,SAAS,YAGhB5I,EAAO0G,iBAAiBnI,MAAM4K,eAAejI,OAAOkB,EAAE2F,GAAKvF,KAAK,eAAeiC,OAAOvD,OAAOkB,EAAE2F,GAAKvF,KAAK,YAAY9C,MAAQ,KAG7H2J,EAAWrJ,OAGhB,GAEH+H,EAAIe,iBAAiB,SAAS,WAC1B1G,EAAE2F,GAAKa,SAAS,cACjB,GAEHb,EAAIe,iBAAiB,QAAQ,WACrB1G,EAAE2F,GAAKuB,SAAS,WAA+B,IAAjBlH,EAAE2F,GAAKkB,QACrC7G,EAAE2F,GAAKnH,SAAS2I,SAChBvJ,EAAO0G,iBAAiBnI,MAAM4K,eAAejI,OAAOkB,EAAE2F,GAAKvF,KAAK,eAAeiC,OAAOvD,OAAOkB,EAAE2F,GAAKvF,KAAK,YAAY9C,MAAQ,MAE7H0C,EAAE2F,GAAKc,YAAY,cAExB,GAEHd,EAAIe,iBAAiB,WAAW,SAAUU,GACtC,SAASC,EAAgBC,GAErB,GADAA,EAAGC,aAC+B,IAAvBrI,OAAOsI,mBACoB,IAAxBpM,SAASqM,YAA4B,CAC/C,IAAIC,EAAQtM,SAASqM,cACrBC,EAAMC,mBAAmBL,GACzBI,EAAME,UAAS,GACf,IAAIC,EAAM3I,OAAOsI,eACjBK,EAAIC,kBACJD,EAAIE,SAASL,QACV,QAA4C,IAAjCtM,SAAS4M,KAAKC,gBAAgC,CAC5D,IAAIC,EAAY9M,SAAS4M,KAAKC,kBAC9BC,EAAUC,kBAAkBb,GAC5BY,EAAUN,UAAS,GACnBM,EAAUE,UAIlB,GAAa,aAAThB,EAAEiB,IACFjB,EAAEkB,kBACEjG,EAASrC,EAAE,kBAAkB0F,WACtBrD,EAAOe,QAAQuC,GAAO,IAC7B0B,EAAgBhF,EAAOA,EAAOe,QAAQuC,GAAO,SAE9C,GAAa,WAATyB,EAAEiB,IAAkB,CAE3B,IAAIhG,EADJ+E,EAAEkB,kBACEjG,EAASrC,EAAE,kBAAkB0F,WACtBrD,EAAOe,QAAQuC,GAAO,IAC7B0B,EAAgBhF,EAAOA,EAAOe,QAAQuC,GAAO,QAGtD,IAIHgB,EAAa,SAAU/I,GAClBoC,EAAE,iBAAiBkH,SAAS,YAI7BtJ,EAAO0G,iBAAiBnI,MAAM4K,eAAiBwB,KAAKC,MAAMD,KAAKE,UAAU7K,EAAO0G,iBAAiBnI,MAAMgG,WAGvGnC,EAAE,6BAA6BmG,IAAI,mBAAoB,IACvDnG,EAAE,6BAA6BmG,IAAI,QAAS,qBAC5CnG,EAAE,uCAAuC0I,KAAK,qDAC9C1I,EAAE,4CAA4CmH,SAC9CnH,EAAE,qCAAqC2I,MAAM,kFAE7C3I,EAAE,iBAAiBwG,SAAS,UAC5BxG,EAAE,mBAAmBwG,SAAS,YAKlCS,EAAa,SAAUrJ,GACvB,GAAIA,EAAO0G,iBAAiBnI,MAAM4K,eAAgB,CAI9C,IAAIhG,EAAUH,EAAeC,IAAIjD,EAAO4C,YAAa5C,EAAO0G,iBAAiBnI,MAAMsE,QAAS7C,EAAO0G,iBAAiBnI,MAAM4K,gBAG1HnJ,EAAO0G,iBAAiBnI,MAAM4K,eAAiBhG,EAAQoB,SAGvDnC,EAAE,4CAA4C0I,KAAK3H,EAAQA,QAAQD,QACnEd,EAAE,yCAAyC0I,KAAK3H,EAAQA,QAAQ6C,WAAWG,SAASU,QAAQ,IAC5FzE,EAAE,4CAA4C0I,KAAK3H,EAAQA,QAAQ6C,WAAWd,YAAY2B,QAAQ,IAClGzE,EAAE,6BAA6ByG,YAAY,UAC3CzG,EAAE,mCAAqCe,EAAQA,QAAQD,QAAQ0F,SAAS,UAGxExG,EAAE,iCAAiCyG,YAAY,WAE/ClE,OAAOC,KAAK5E,EAAO0G,iBAAiBnI,MAAM4K,gBAAgB9J,SAAQ+H,IAC9D,IAAI5C,EAAUxE,EAAO0G,iBAAiBnI,MAAM4K,eAAe/B,QAGnC3H,IAApB+E,EAAQP,UACR7B,EAAE,gBAAkBgF,GAAW0D,KAAKtG,EAAQP,QAAQ4C,QAAQ,IAC5DzE,EAAE,gBAAkBgF,GAAWmB,IAAI,QAAS3I,EAAiB4E,EAAQP,gBAI5CxE,IAAzB+E,EAAQmB,cACRvD,EAAE,WAAagF,EAAY,aAAe5C,EAAQmB,cAAciD,SAAS,gBAOrFV,EAAY,SAAUlI,EAAQoH,GAE9B2B,EAAW/I,GAGX,IAAIuH,EAASvH,EAAO0G,iBAAiBnI,MAAM4K,eAAe/B,GAAW3C,OAAOpC,OAG5ErC,EAAO0G,iBAAiBnI,MAAM4K,eAAe/B,GAAW3C,OAAOhE,KAAK,CAChEH,GAAI,SAAWiH,EACf7H,MAAO,KACPsL,MAAO,EACP5B,aAAa,EACb5E,QAAS4C,EACTzH,MAAO,iBACPgI,gBAAiB,gBACjB1J,YAAa,kBACbyG,MAAO1E,EAAO0G,iBAAiBnI,MAAM4K,eAAe/B,GAAW1C,MAC/D+C,aAAc,OAIlBrF,EAAE,gCAAkCgF,EAAY,iBAAiB6D,OAAe,2DAChC7D,cAAsBG,6JAChBA,iBAAsBH,qKAM5EY,EAAgB5F,EAAE,WAAWgF,cAAsBG,oBAAyB,GAAIvH","sourceRoot":"/","sourcesContent":["/**\r\n * @file d.tech-specific features, CBL & grade calculation\r\n * @author jottocraft\r\n * \r\n * @copyright Copyright (c) 2018-2021 jottocraft. All rights reserved.\r\n * @license GPL-2.0-only\r\n * \r\n * JSDoc documentation for these LMS functions can be found near the end of core.js\r\n */\r\n\r\n//Get baseURL from the URL of this script\r\nvar baseURL = document.currentScript.src.split(\"/scripts/lms/dtech.js\")[0];\r\n\r\n//Load Canvas integration\r\njQuery.getScript(baseURL + \"/scripts/lms/canvas.js\", function () {\r\n    //Add d.tech-specific items to dtpsLMS\r\n    dtpsLMS.name = \"d.tech\";\r\n    dtpsLMS.legalName = \"Canvas LMS, Design Tech High School, or Instructure Inc\";\r\n    dtpsLMS.description = \"Power+ integration for Canvas LMS, customized for d.tech\";\r\n    dtpsLMS.logo = \"https://i.imgur.com/efGrLq3.png\";\r\n    dtpsLMS.source = \"https://github.com/jottocraft/dtps/blob/main/scripts/lms/dtech.js\";\r\n    dtpsLMS.useRubricGrades = true;\r\n    dtpsLMS.institutionSpecific = true;\r\n    dtpsLMS.genericGradebook = false;\r\n    dtpsLMS.dtech = true;\r\n\r\n    //Check if due date is usual\r\n    dtpsLMS.isUsualDueDate = function (date) {\r\n        var date = new Date(date);\r\n\r\n        if (date.getHours() >= 22) {\r\n            return true;\r\n        } else if ((date.getHours() == 21) && (date.getMinutes() > 50)) {\r\n            return true;\r\n        } else if (date.getHours() < 8) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    //Update assignments\r\n    //This is for customizing rubric names and colors to match d.tech CBL\r\n    dtpsLMS.updateAssignments = function (rawAssignments) {\r\n        return new Promise((resolve, reject) => {\r\n            var updatedAssignments = rawAssignments.map(assignment => {\r\n                //Check if assignment has rubric\r\n                if (assignment.rubric) {\r\n                    //Update assignment rubric\r\n                    assignment.rubric.forEach(rubricItem => {\r\n                        rubricItem.scoreName = shortenDtechRubricScoreName(rubricItem.scoreName);\r\n\r\n                        if (rubricItem.score !== undefined) {\r\n                            rubricItem.color = dtechRubricColor(rubricItem.score);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                //Return updated assignment to the Array.map function\r\n                return assignment;\r\n            });\r\n\r\n            resolve(updatedAssignments);\r\n        })\r\n    }\r\n\r\n    //Update classes\r\n    dtpsLMS.updateClasses = function (classes) {\r\n        return new Promise((resolve, reject) => {\r\n            var tmpNewArray = [];\r\n            classes.forEach((course, i) => {\r\n                if (course.term == dtps.remoteConfig.dtechCurrentTerm) {\r\n                    tmpNewArray.push(course);\r\n                } else if (course.id == dtps.remoteConfig.debugClassID) {\r\n                    tmpNewArray.push(course);\r\n                } else if (!course.endDate || (new Date() < new Date(course.endDate))) {\r\n                    tmpNewArray.push(course);\r\n                }\r\n\r\n                //Check if course is ineligible for videoMeetingURL\r\n                if (!dtps.remoteConfig.showVideoMeetingButton || dtps.user.parent || !course.homepage || (course.term !== dtps.remoteConfig.dtechCurrentTerm)) {\r\n                    course.videoMeetingURL = null;\r\n                }\r\n\r\n                //Get course period\r\n                var matches = course.period.match(/[0-9](?=\\(A)/);\r\n                if (matches && matches[0]) {\r\n                    course.period = matches[0] == \"7\" ? 0 : Number(matches[0]);\r\n                } else if (/(d|design)(\\.| |-)?lab/gi.test(course.subject)) {\r\n                    course.period = 11;\r\n                } else if (/exploration/gi.test(course.subject)) {\r\n                    course.period = 12;\r\n                } else {\r\n                    course.period = Infinity;\r\n                }\r\n\r\n                //Get course cycle\r\n                if (!dtps.user.parent && (window.localStorage.getItem(\"pref-autoGroupClasses\") !== \"false\")) {\r\n                    /*if ((course.period >= 1) && (course.period <= 3)) {\r\n                        course.group = \"Cycle 1/3\";\r\n                    } else if ((course.period >= 4) && (course.period <= 6)) {\r\n                        course.group = \"Cycle 2/4\";*/\r\n                    if (course.term == \"20-21\") {\r\n                        course.group = \"Semester 1\";\r\n                    } else if (course.term == \"S2\") {\r\n                        course.group = \"Semester 2\";\r\n                    } else if ((course.period == 11) || (course.period == 12)) {\r\n                        course.group = \"Intersession\";\r\n                        course.term = \"int\";\r\n                    }\r\n                }\r\n\r\n                //Add course icon\r\n                if (course.id == dtps.remoteConfig.debugClassID) {\r\n                    course.icon = \"bug_report\";\r\n                } else if (/Game/gi.test(course.subject)) {\r\n                    course.icon = \"games\";\r\n                } else if (/Architecture/gi.test(course.subject)) {\r\n                    course.icon = \"architecture\";\r\n                } else if (/History/gi.test(course.subject)) {\r\n                    course.icon = \"history_edu\";\r\n                } else if (/Biology/gi.test(course.subject)) {\r\n                    course.icon = \"biotech\";\r\n                } else if (/Physics|Science|Chemistry/gi.test(course.subject)) {\r\n                    course.icon = \"science\";\r\n                } else if (/Math|Algebra|Geometry|Calculus|Statistics/gi.test(course.subject)) {\r\n                    course.icon = \"calculate\";\r\n                } else if (/Engineering|DRG/gi.test(course.subject)) {\r\n                    course.icon = \"engineering\";\r\n                } else if (/((d|design)(\\.| |-)?lab)|Prototyping/gi.test(course.subject)) {\r\n                    course.icon = \"design_services\";\r\n                } else if (/Exploration/gi.test(course.subject)) {\r\n                    course.icon = \"explore\";\r\n                } else if (/@d.?tech/gi.test(course.subject)) {\r\n                    course.icon = \"school\";\r\n                } else if (/English/gi.test(course.subject)) {\r\n                    course.icon = \"description\";\r\n                } else if (/Model( |-|)(United Nations|UN)/gi.test(course.subject)) {\r\n                    course.icon = \"public\";\r\n                } else if (/Spanish|Language/gi.test(course.subject)) {\r\n                    course.icon = \"translate\";\r\n                } else if (/Government/gi.test(course.subject)) {\r\n                    course.icon = \"gavel\";\r\n                } else if (/(Koi|Live)( |-|)Stream/gi.test(course.subject)) {\r\n                    course.icon = \"live_tv\";\r\n                } else if (/Film/gi.test(course.subject)) {\r\n                    course.icon = \"camera_roll\";\r\n                } else if (/Leadership/gi.test(course.subject)) {\r\n                    course.icon = \"stars\";\r\n                } else if (/Athletics/gi.test(course.subject)) {\r\n                    course.icon = \"sports_handball\";\r\n                }\r\n            });\r\n            classes = tmpNewArray;\r\n\r\n            //Automatically sort and group classes if enabled\r\n            if (!dtps.user.parent && (window.localStorage.getItem(\"pref-autoGroupClasses\") !== \"false\")) {\r\n                classes.sort((a, b) => {\r\n                    var termA = a.term == \"20-21\" ? 1 : a.term == \"S2\" ? 2 : a.term == \"int\" ? 3 : 4;\r\n                    var termB = b.term == \"20-21\" ? 1 : b.term == \"S2\" ? 2 : b.term == \"int\" ? 3 : 4;\r\n                    return termA - termB;\r\n                    //return a.period - b.period;\r\n                });\r\n            }\r\n\r\n            resolve(classes);\r\n        });\r\n    }\r\n\r\n    //Fetch videoMeetingURL for a class\r\n    dtpsLMS.fetchMeetingURL = function (classID) {\r\n        return new Promise((resolve, reject) => {\r\n            var course = dtps.classes.find(course => course.id == classID);\r\n\r\n            if (course.homepage && (course.term == dtps.remoteConfig.dtechCurrentTerm)) {\r\n                dtpsLMS.fetchHomepage(classID).then(homepage => {\r\n                    //get zoom link\r\n                    var meetingURL = null;\r\n                    var matches = 0;\r\n                    for (var i = 0; i < $(homepage).find(\"a\").length; i++) {\r\n                        var link = $($(homepage).find(\"a\")[i]);\r\n                        if (link.children(\"img\").attr(\"alt\") && link.children(\"img\").attr(\"alt\").toUpperCase().includes(\"ZOOM BUTTON\") && link.attr(\"href\")) {\r\n                            //Button labelled as zoom button\r\n                            meetingURL = link.attr(\"href\");\r\n                        } else if (link.attr(\"href\") && link.attr(\"href\").includes(\"zoom.us\")) {\r\n                            //Button link goes to a zoom meeting, only use this if there is no other zoom link\r\n                            //if (!meetingURL) meetingURL = link.attr(\"href\");\r\n                        }\r\n                    }\r\n\r\n                    if (matches > 1) {\r\n                        //Multiple zoom links found\r\n                        meetingURL = null;\r\n                    }\r\n\r\n                    resolve(meetingURL);\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    //Run d.tech grade calculation algorithm (defined below)\r\n    dtpsLMS.calculateGrade = function (course, assignments) {\r\n        var formula = null;\r\n\r\n        //Get d.tech grade calculation formula\r\n        if (course.term == \"20-21\") {\r\n            formula = \"2020-21\";\r\n        } else if (course.term == \"S2\") {\r\n            formula = \"2020-21\";\r\n        } else if (String(course.id).includes(dtps.remoteConfig.debugClassID)) {\r\n            formula = \"2020-21\";\r\n        }\r\n\r\n        //If there is no grade calculation formula, don't run grade calc\r\n        if (!formula) return;\r\n\r\n        //Run d.tech grade calculation\r\n        var dtechResults = dtechGradeCalc.run(assignments, formula);\r\n\r\n        if (dtechResults) {\r\n            //Class has a grade\r\n            return {\r\n                letter: dtechResults.results.letter,\r\n                dtech: dtechResults //Return dtech results for gradebook\r\n            };\r\n        } else {\r\n            //No grade for this class\r\n            return;\r\n        }\r\n    }\r\n\r\n    //Local functions & variables, not part of the dtpsLMS specification ----------------------------------------------\r\n\r\n    //Shortens rubric name for d.tech CBL rubrics\r\n    var shortenDtechRubricScoreName = function (rating) {\r\n        if (String(rating).toUpperCase().includes(\"PIONEERING\")) return \"Pioneering\";\r\n        if (String(rating).toUpperCase().includes(\"PROFICIENT\")) return \"Proficient\";\r\n        if (String(rating).toUpperCase().includes(\"DEVELOPING\")) return \"Developing\";\r\n        if (String(rating).toUpperCase().includes(\"EMERGING\")) return \"Emerging\";\r\n        if (!String(rating).includes(\" \") && (String(rating).length <= 20)) return rating;\r\n        return \"\";\r\n    }\r\n\r\n    //Get score color from rubric percentage\r\n    var dtechRubricColor = function (score) {\r\n        if (score > 4.0) return \"#20D684\";\r\n        if (score == 4.0) return \"#41BA35\";\r\n        if (score >= 3.9) return \"#50BC39\";\r\n        if (score >= 3.8) return \"#5FBD3D\";\r\n        if (score >= 3.7) return \"#6EBF40\";\r\n        if (score >= 3.6) return \"#7DC044\";\r\n        if (score >= 3.5) return \"#8CC248\";\r\n        if (score >= 3.4) return \"#9AC44C\";\r\n        if (score >= 3.3) return \"#A9C550\";\r\n        if (score >= 3.2) return \"#B8C753\";\r\n        if (score >= 3.1) return \"#C7C857\";\r\n        if (score >= 3.0) return \"#D6CA5B\";\r\n        if (score >= 2.9) return \"#D8C35A\";\r\n        if (score >= 2.8) return \"#DABB59\";\r\n        if (score >= 2.7) return \"#DCB458\";\r\n        if (score >= 2.6) return \"#DEAC57\";\r\n        if (score >= 2.5) return \"#E1A556\";\r\n        if (score >= 2.4) return \"#E39E55\";\r\n        if (score >= 2.3) return \"#E59654\";\r\n        if (score >= 2.2) return \"#E78F53\";\r\n        if (score >= 2.1) return \"#E98752\";\r\n        if (score >= 2.0) return \"#EB8051\";\r\n        if (score >= 1.9) return \"#E97A50\";\r\n        if (score >= 1.8) return \"#E7744F\";\r\n        if (score >= 1.7) return \"#E56F4E\";\r\n        if (score >= 1.6) return \"#E3694D\";\r\n        if (score >= 1.5) return \"#E1634C\";\r\n        if (score >= 1.4) return \"#DE5D4A\";\r\n        if (score >= 1.3) return \"#DC5749\";\r\n        if (score >= 1.2) return \"#DA5248\";\r\n        if (score >= 1.1) return \"#D84C47\";\r\n        if (score >= 1.0) return \"#D64646\";\r\n        if (score >= 0.0) return \"#D72727\";\r\n        if (score < 0.0) return \"#BF0000\";\r\n    }\r\n\r\n    /**\r\n     * d.tech CBL grade calculation algorithm\r\n     * \r\n     * @property {string[]} letters An array of letters that can be returned from highest -> lowest\r\n     * @property {object} params Parameters for each type of grade calculation, such as requirements for each criteria\r\n     */\r\n    var dtechGradeCalc = {\r\n        letters: [\"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C\", \"I\"],\r\n        params: {\r\n            /**\r\n             * @description 2020-21 grade calculation parameters\r\n             * @property {{string, number}} percentage Percentage criteria parameters. The key of each item in the object is the letter and the value is the percentage needed to meet the criteria\r\n             * @property {{string, number}} lowest Lowest average criteria perameters. The key of each item in the object is the letter and the value is the lowest average needed to meet the criteria\r\n             */\r\n            \"2020-21\": {\r\n                percentage: {\r\n                    \"A\": 3.3,\r\n                    \"A-\": 3.3,\r\n                    \"B+\": 2.6,\r\n                    \"B\": 2.6,\r\n                    \"B-\": 2.6,\r\n                    \"C\": 2.2,\r\n                    \"I\": 0\r\n                },\r\n                lowest: {\r\n                    \"A\": 3,\r\n                    \"A-\": 2.5,\r\n                    \"B+\": 2.2,\r\n                    \"B\": 1.8,\r\n                    \"B-\": 1.5,\r\n                    \"C\": 1.5,\r\n                    \"I\": 0\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * A simple average function\r\n         * \r\n         * @param {number[]} array Array of numbers to average\r\n         * @return {number} Average of the numbers in the array\r\n         */\r\n        average: function (array) {\r\n            var sum = 0;\r\n            array.forEach(item => sum += item);\r\n            return sum / array.length;\r\n        },\r\n        /**\r\n         * Runs grade calculation. Takes assignments, gets outcome averages, then calls getLetter to get the final letter.\r\n         * This function returns undefined if there is no grade.\r\n         * \r\n         * @param {Assignment[]} assignments Array of assignments to use for grade calculation\r\n         * @param {string} formula Formula to use for grade calculation. Can be one of the following: 2020-21\r\n         * @param {object} outcomesOverride An outcome object to use instead of using assignments. Used for what-if grades.\r\n         * @return {object} Grade calculation results\r\n         */\r\n        run: function (assignments, formula, outcomesOverride) {\r\n\r\n            //Array of grade variations\r\n            var gradeVariations = [];\r\n\r\n            //Outcomes object\r\n            //This doesn't have to be used by the grade calculation formula. Can be overridden for What-If grades.\r\n            var outcomes = outcomesOverride || {};\r\n\r\n            if (formula == \"2020-21\") {\r\n                //2020-21 SEMESTER 1 OUTCOME AVERAGE FORMULA (2020-21)\r\n\r\n                // ------- [2020-21] Step 1: Get rubric assessments by outcome -------\r\n\r\n                if (!outcomesOverride) {\r\n                    assignments.forEach(assignment => {\r\n                        if (assignment.rubric) {\r\n                            //Assignment has a rubric\r\n\r\n                            assignment.rubric.forEach(rubricItem => {\r\n                                if ((rubricItem.score !== undefined) && rubricItem.outcome) {\r\n                                    //Rubric item is assessed and is linked with an outcome\r\n\r\n                                    if (!outcomes[rubricItem.outcome]) {\r\n                                        //Outcome object doesn't exist yet\r\n                                        outcomes[rubricItem.outcome] = {\r\n                                            scores: []\r\n                                        };\r\n                                    }\r\n\r\n                                    //Add RubricItem to outcome array\r\n                                    outcomes[rubricItem.outcome].scores.push(rubricItem);\r\n\r\n                                    //Save outcome name as rubric title\r\n                                    if (rubricItem.title) outcomes[rubricItem.outcome].title = rubricItem.title;\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // ------- [2020-21] Step 2: Calculate outcome averages -------\r\n\r\n                //If there are no outcomes, this class doesn't have a grade\r\n                if (Object.keys(outcomes).length == 0) return;\r\n\r\n                //Loop over the values of each item in the outcomes object\r\n                Object.values(outcomes).forEach(outcome => {\r\n                    //Get array of scores for the outcome, remove null scores\r\n                    var outcomeScores = outcome.scores.map(RubricItem => RubricItem.score).filter(score => score !== null);\r\n\r\n                    //Calculate outcome average with all outcome scores\r\n                    var average = this.average(outcomeScores);\r\n\r\n                    //Get the lowest score\r\n                    var lowestScore = Math.min(...outcomeScores);\r\n\r\n                    //Drop the lowest score to see what happens\r\n                    var droppedArray = outcomeScores.slice(); //copy of outcomeScores array\r\n                    droppedArray.splice(droppedArray.indexOf(lowestScore), 1); //remove lowest score from array\r\n\r\n                    var droppedAverage = this.average(droppedArray); //calculate average from droppedArray\r\n\r\n                    //Choose the higher score\r\n                    if (droppedAverage > average) {\r\n                        //The dropped score was higher\r\n                        outcome.scoreType = \"dropped\";\r\n                        outcome.droppedScore = outcome.scores.map(RubricItem => RubricItem.score).indexOf(lowestScore);\r\n                        outcome.average = droppedAverage;\r\n                    } else {\r\n                        //Calculating with all outcome scores was the same or higher\r\n                        outcome.scoreType = \"all\";\r\n                        outcome.average = average;\r\n                        delete outcome.droppedScore;\r\n                    }\r\n                });\r\n\r\n\r\n                // ------- [2020-21] Step 3: Calculate letter grade variations -------\r\n\r\n                //All outcomes variation\r\n                var outcomeAvgs = Object.values(outcomes).map(outcome => outcome.average);\r\n                gradeVariations.push(this.getLetter(outcomeAvgs, formula, \"all\"));\r\n\r\n            }\r\n\r\n            //Get the highest grade variation from the results\r\n            var bestVariation = null;\r\n            gradeVariations.forEach(variation => {\r\n                if (!bestVariation || (this.letters.indexOf(variation.letter) < this.letters.indexOf(bestVariation.letter))) {\r\n                    //variation.letter is a higher letter than bestVariation.letter, or there is no best variation yet\r\n                    bestVariation = variation;\r\n                }\r\n            });\r\n\r\n            //Return grade calculation results\r\n            return {\r\n                results: bestVariation, //Results for the best variation\r\n                formula: formula, //Formula used to calculate this grade\r\n                outcomes: outcomes //Calculated outcome scores\r\n            };\r\n        },\r\n        /**\r\n         * Calculates a letter grade from an array of outcome averages. Called by gradeCalc.run.\r\n         * Gets the best possible letter from each criteria, then the lowest letter from that array.\r\n         * \r\n         * @param {number[]} outcomeAvgs Array of outcome averages to use for letter grade calculation\r\n         * @param {string} formula Formula to use for grade calculation. See gradeCalc.run.\r\n         * @param {string} [variation] Name of the letter grade variation (e.g. withSS, withoutSS, etc.). Only used for formulas with multiple variations.\r\n         * @return {object} Letter grade calculation results\r\n         */\r\n        getLetter: function (outcomeAvgs, formula, variation) {\r\n            //Grade calculation results object\r\n            //This includes any properties that need to be passed to the gradebook. The properties set depend on the formula.\r\n            var parameters = {};\r\n\r\n            //Sort outcome averages highest -> lowest\r\n            outcomeAvgs.sort((a, b) => b - a);\r\n\r\n            if (formula == \"2020-21\") {\r\n                //2020-21 SEMESTER 1 LETTER GRADE FORMULA (2020-21)\r\n\r\n                //Array of letters from each criteria\r\n                var letters = [];\r\n\r\n                // ------- [2020-21] Step 1: Get highest letter for Criteria 1 (percentage of outcomes criteria) -------\r\n                var percentage = .75;\r\n                var numOutcomesRequired = Math.floor(outcomeAvgs.length * percentage); //Minimum number of outcomes required\r\n\r\n                //Calculate the value 75% of outcomes >= to (number75) and the number of outcomes needed to meet criteria 1\r\n                if (outcomeAvgs.length == 1) {\r\n                    parameters.number75 = outcomeAvgs[0]; //if there is only 1 outcome, that outcome is number75\r\n                } else {\r\n                    parameters.number75 = outcomeAvgs[numOutcomesRequired - 1]; //number75 = the outcome 75% through the array (since its sorted)\r\n                }\r\n                parameters.number75thresh = numOutcomesRequired; //number75thresh = number of outcomes needed to meet the criteria\r\n\r\n                //Get the best letter\r\n                var bestLetter = null;\r\n\r\n                //Test each letter and add the highest to the letters array\r\n                for (var i = 0; i < this.letters.length; i++) {\r\n                    let letter = this.letters[i];\r\n\r\n                    if (parameters.number75 >= this.params[formula].percentage[letter]) {\r\n                        //Able to get this letter\r\n                        bestLetter = letter;\r\n\r\n                        //Stop checking for matches since all letters after this are lower\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                //Add highest criteria 1 letter to the letters array\r\n                letters.push(bestLetter);\r\n\r\n                // ------- [2020-21] Step 2: Get highest letter for Criteria 2 (lowest outcome criteria) -------\r\n\r\n                //Reset best letter\r\n                var bestLetter = null;\r\n\r\n                //Since the array is highest -> lowest, the lowest score is the last item in the array\r\n                parameters.lowestScore = outcomeAvgs[outcomeAvgs.length - 1];\r\n\r\n                //Test each letter and add the highest to the letters array\r\n                for (var i = 0; i < this.letters.length; i++) {\r\n                    let letter = this.letters[i];\r\n\r\n                    if (parameters.lowestScore >= this.params[formula].lowest[letter]) {\r\n                        //Able to get this letter\r\n                        bestLetter = letter;\r\n\r\n                        //Stop checking for matches since all letters after this are lower\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                //Add highest criteria 2 letter to the letters array\r\n                letters.push(bestLetter);\r\n            }\r\n\r\n            //Get the final letter, the lowest letter from the array\r\n            var letterIndexes = letters.map(letter => this.letters.indexOf(letter)); //Array of letter indexes in this.letters\r\n            var lowestLetterIndex = Math.max(...letterIndexes); //Lowest letter = highest index in this.letters\r\n            var letter = this.letters[lowestLetterIndex]; //Get final letter\r\n\r\n            return {\r\n                letter: letter,\r\n                parameters: parameters,\r\n                variation: variation\r\n            };\r\n        }\r\n    };\r\n\r\n    dtpsLMS.gradebook = function (course) {\r\n        return new Promise((resolve, reject) => {\r\n            if (course.gradeCalculation && course.gradeCalculation.dtech) {\r\n                //RENDERER: RENDER GRADE CALCULATION SUMMARY ------------------------------------\r\n                if (course.gradeCalculation.dtech.formula == \"2020-21\") {\r\n                    var gradeCalcSummary = /*html*/`\r\n                    <div id=\"gradeSummary\" style=\"--size: 250px; margin: 0px 20px; --classColor: ${course.color};\" class=\"grid flex\">\r\n                      <div style=\"background-color: var(--classColor); color: white;\" class=\"block status letterGrade card\">\r\n                        <h2 class=\"main\">${course.letter}</h2>\r\n                        ${course.previousLetter ? `<h5 class=\"previousGrade\">Previous grade: ${course.previousLetter}</h5>` : \"\"}\r\n                        <h5 class=\"bottom\"><i class=\"fluid-icon\">grade</i> Grade</h5>\r\n                      </div>\r\n                      <div class=\"block status number75\">\r\n                        <h2 class=\"main numFont\">${course.gradeCalculation.dtech.results.parameters.number75.toFixed(2)}</h2>\r\n                        <h5 class=\"bottom\"><i class=\"fluid-icon\">functions</i> 75% of outcomes (${course.gradeCalculation.dtech.results.parameters.number75thresh}) ≥</h5>\r\n                      </div>\r\n                      <div class=\"block status lowestScore\">\r\n                        <h2 class=\"main numFont\">${course.gradeCalculation.dtech.results.parameters.lowestScore.toFixed(2)}</h2>\r\n                        <h5 class=\"bottom\"><i class=\"fluid-icon\">leaderboard</i> Lowest outcome</h5>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div style=\"--classColor: ${course.color};${dtps.gradebookExpanded ? \"\" : \"display: none;\"}\" id=\"classGradeMore\">\r\n                            <br />\r\n                            <table class=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th>&nbsp;&nbsp;Final Letter</th>\r\n                                    <th>75% (rounded down) of outcome scores is ≥</th>\r\n                                    <th>No outcome scores below</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    ${dtechGradeCalc.letters.map(letter => {\r\n                        return /*html*/`\r\n                                            <tr class=\"letter${letter} ${course.letter == letter ? `active` : ``}\">\r\n                                                <td>&nbsp;&nbsp;${letter}</td>\r\n                                                <td>${dtechGradeCalc.params[course.gradeCalculation.dtech.formula].percentage[letter]}</td>\r\n                                                <td>${dtechGradeCalc.params[course.gradeCalculation.dtech.formula].lowest[letter]}</td>\r\n                                            </tr>\r\n                                        `\r\n                    }).join(\"\")}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                    <div onclick=\"$('#classGradeMore').toggle(); if ($('#classGradeMore').is(':visible')) {$(this).children('i').text('keyboard_arrow_up'); $(this).children('span').text('Show less'); dtps.gradebookExpanded = true;} else {$(this).children('i').text('keyboard_arrow_down'); $(this).children('span').text('Show more'); dtps.gradebookExpanded = false;}\" class=\"gradeSummaryShowHide\">\r\n                        ${dtps.gradebookExpanded ? `<i class=\"fluid-icon\">keyboard_arrow_up</i> <span>Show less</span>` : `<i class=\"fluid-icon\">keyboard_arrow_down</i> <span>Show more</span>`}\r\n                    </div>\r\n                `;\r\n                } else {\r\n                    var gradeCalcSummary = \"\"; //no grade calculation for this class\r\n                }\r\n\r\n                //RENDERER: RENDER EACH OUTCOME ------------------------------------\r\n                var outcomeHTML = []; //array of outcome html to be rendered\r\n                var dividerAdded = false; //used for determining if the unassessed outcome divided has been added\r\n                Object.keys(course.gradeCalculation.dtech.outcomes).sort(function (a, b) {\r\n                    var keyA = course.gradeCalculation.dtech.outcomes[a].average,//sort by score lowest -> highest\r\n                        keyB = course.gradeCalculation.dtech.outcomes[b].average;\r\n                    if (keyA == undefined) { keyA = 999999 - course.gradeCalculation.dtech.outcomes[a].scores.length; } //put outcomes with no assessments at the bottom\r\n                    if (keyB == undefined) { keyB = 999999 - course.gradeCalculation.dtech.outcomes[b].scores.length; }\r\n                    // Compare the 2 scores\r\n                    if (keyA > keyB) return 1;\r\n                    if (keyA < keyB) return -1;\r\n                    return 0;\r\n                }).forEach((outcomeID) => {\r\n                    var outcome = course.gradeCalculation.dtech.outcomes[outcomeID];\r\n\r\n                    var divider = !dividerAdded && !outcome.scores.length; //render divider\r\n                    if (divider) dividerAdded = true; //remember that divider is already rendered\r\n\r\n                    outcomeHTML.push(/*html*/`\r\n                    ${divider ? `<h5 style=\"font-weight: bold;margin: 75px 75px 10px 75px;\">Unassesed outcomes</h5>` : \"\"}\r\n\r\n                    <div style=\"border-radius: 20px;padding: 22px; padding-bottom: 20px;\" class=\"card outcomeResults outcome-${outcomeID}\">\r\n                        <h5 style=\"max-width: calc(100% - 50px); font-size: 24px; margin: 0px; margin-bottom: 20px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; cursor: pointer;\">${outcome.title}</h5>\r\n\r\n                        ${outcome.average !== undefined ? `\r\n                            <div id=\"outcomeScore${outcomeID}\" class=\"numFont\" style=\"position: absolute; top: 20px; right: 20px; font-size: 26px; font-weight: bold; display: inline-block; color: ${dtechRubricColor(outcome.average)}\">${outcome.average.toFixed(2)}</div>\r\n                        ` : ``}\r\n                        \r\n                        <div class=\"assessments\">\r\n                            ${outcome.scores.length == 0 ? `\r\n                                    <p style=\"white-space: nowrap; overflow: hidden; text-overflow: ellipsis; margin: 6px 0px; color: var(--secText);\">This outcome has not been assessed yet</p>\r\n                            ` :\r\n                            outcome.scores.map((assessment, aIndex) => {\r\n                                return /*html*/`\r\n                                        <div class=\"assessmentWrapper ${aIndex == outcome.droppedScore ? \"dropped\" : \"\"}\" id=\"outcome${assessment.outcome}assessment${aIndex}\" style=\"white-space: nowrap; overflow: hidden; text-overflow: ellipsis; margin: 6px 0px;\">\r\n                                            <div style=\"color: ${assessment.color};\" aIndex=\"${aIndex}\" outcomeID=\"${outcomeID}\" class=\"editableScore\" ${dtps.remoteConfig.allowWhatIfGrades ? `contenteditable` : \"\"}>${assessment.score}</div>\r\n                                            <span class=\"assessmentTitle\" style=\"cursor: pointer;\" onclick=\"dtps.assignment('${assessment.assignmentID}', ${course.num});\">${assessment.assignmentTitle}</span>\r\n                                        </div>\r\n                                    `;\r\n                            }).join(\"\")\r\n                        }\r\n                        </div>\r\n\r\n                        ${dtps.remoteConfig.allowWhatIfGrades ? /*html*/`\r\n                            <p class=\"addWhatIf\" outcomeID=\"${outcomeID}\" style=\"font-size: 14px; color: var(--secText); margin: 0px; margin-top: 16px; cursor: pointer;\">\r\n                                <i style=\"cursor: pointer; vertical-align: middle; font-size: 16px;\" class=\"fluid-icon down\">add_box</i>\r\n                                Add a What-If grade\r\n                            </p>\r\n                        ` : \"\"}\r\n                    </div>\r\n                `);\r\n                })\r\n\r\n                //RENDERER: RENDER WHAT-IF RESULTS\r\n                var whatIfResults = /*html*/`\r\n                    <div style=\"--classColor: ${course.color}\" class=\"card\" id=\"whatIfResults\">\r\n                        <div style=\"display: inline-block;\">\r\n                           <h5>\r\n                              What-If Grade\r\n                              <div class=\"resultLetter\">--</div>\r\n                           </h5>\r\n                           <p style=\"color: var(--lightText);\" class=\"resultPercentage\"></p>\r\n                           <p>This grade is hypothetical and does not represent your actual grade for this class.</p>\r\n                           <p onclick=\"fluid.screen();\" style=\"color: var(--secText); cursor: pointer;\">Show actual grades</p>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n\r\n                //RESOLVE WITH HTML\r\n                resolve(whatIfResults + gradeCalcSummary + `<br />` + outcomeHTML.join(\"\"));\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    //Enable What-If grades\r\n    var scrollListenerAdded = false;\r\n    dtpsLMS.gradebookDidRender = function (course) {\r\n        //Add event listeners for every editable score in the gradebook\r\n        $(\".card.outcomeResults .assessments .editableScore\").toArray().forEach(ele => {\r\n            listenForWhatIf(ele, course);\r\n        });\r\n\r\n        //Add event listeners for the \"Add a What-If grade\" buttons\r\n        $(\"p.addWhatIf\").click(function () {\r\n            addWhatIf(course, $(this).attr(\"outcomeID\"));\r\n        });\r\n\r\n        //Keep the grade summary on top\r\n        if (!scrollListenerAdded) {\r\n            scrollListenerAdded = true;\r\n            var gradeSummary = document.getElementById(\"gradeSummary\");\r\n            var sticky = gradeSummary.offsetTop - parseFloat($(\"body\").css(\"padding-top\")) - 10;\r\n            window.onscroll = function () {\r\n                if ((window.pageYOffset >= sticky) && ((dtps.classes[dtps.selectedClass]) && (dtps.selectedContent == \"grades\"))) {\r\n                    $(\".classContent\").addClass(\"fixedGradeSummary\");\r\n                } else {\r\n                    $(\".classContent\").removeClass(\"fixedGradeSummary\");\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    //Adds a What-If grade listener to the provided element\r\n    var listenForWhatIf = function (ele, course) {\r\n        ele.addEventListener(\"input\", function () {\r\n            //Prepare what-if grades if it's not already prepared\r\n            initWhatIf(course);\r\n\r\n            //Get new outcome score\r\n            var typedScore = Number($(ele).text());\r\n\r\n            //Check if score is valid\r\n            if ($(ele).text() && ($(ele).text().length < 4) && !isNaN(typedScore) && (typedScore >= 0) && (typedScore <= 4)) {\r\n                //Valid outcome score, update color to match\r\n                $(ele).css(\"color\", dtechRubricColor(typedScore));\r\n\r\n                //Check if score is modified\r\n                var isWhatIf = course.gradeCalculation.dtech.whatIfOutcomes[Number($(ele).attr(\"outcomeID\"))].scores[Number($(ele).attr(\"aIndex\"))].whatIfGrade;\r\n                if (isWhatIf || (typedScore !== course.gradeCalculation.dtech.outcomes[Number($(ele).attr(\"outcomeID\"))].scores[Number($(ele).attr(\"aIndex\"))].score)) {\r\n                    $(ele).addClass(\"modified\");\r\n                } else {\r\n                    $(ele).removeClass(\"modified\");\r\n                }\r\n\r\n                //Update score in the what-if outcomes\r\n                course.gradeCalculation.dtech.whatIfOutcomes[Number($(ele).attr(\"outcomeID\"))].scores[Number($(ele).attr(\"aIndex\"))].score = typedScore;\r\n\r\n                //Calculate what-if grade\r\n                calcWhatIf(course);\r\n            } else {\r\n                //Invalid outcome score, gray out and calculate without this score\r\n                $(ele).css(\"color\", \"var(--secText)\");\r\n                $(ele).addClass(\"modified\");\r\n\r\n                //Update score in the what-if outcomes\r\n                course.gradeCalculation.dtech.whatIfOutcomes[Number($(ele).attr(\"outcomeID\"))].scores[Number($(ele).attr(\"aIndex\"))].score = null;\r\n\r\n                //Calculate what-if grade\r\n                calcWhatIf(course);\r\n            }\r\n\r\n        }, false);\r\n\r\n        ele.addEventListener(\"focus\", function () {\r\n            $(ele).addClass(\"focused\");\r\n        }, false);\r\n\r\n        ele.addEventListener(\"blur\", function () {\r\n            if ($(ele).hasClass(\"whatIf\") && ($(ele).text() == \"\")) {\r\n                $(ele).parent().remove();\r\n                course.gradeCalculation.dtech.whatIfOutcomes[Number($(ele).attr(\"outcomeID\"))].scores[Number($(ele).attr(\"aIndex\"))].score = null;\r\n            } else {\r\n                $(ele).removeClass(\"focused\");\r\n            }\r\n        }, false);\r\n\r\n        ele.addEventListener(\"keydown\", function (e) {\r\n            function placeCaretAtEnd(el) {\r\n                el.focus();\r\n                if (typeof window.getSelection != \"undefined\"\r\n                    && typeof document.createRange != \"undefined\") {\r\n                    var range = document.createRange();\r\n                    range.selectNodeContents(el);\r\n                    range.collapse(false);\r\n                    var sel = window.getSelection();\r\n                    sel.removeAllRanges();\r\n                    sel.addRange(range);\r\n                } else if (typeof document.body.createTextRange != \"undefined\") {\r\n                    var textRange = document.body.createTextRange();\r\n                    textRange.moveToElementText(el);\r\n                    textRange.collapse(false);\r\n                    textRange.select();\r\n                }\r\n            }\r\n\r\n            if (e.key == \"ArrowDown\") {\r\n                e.preventDefault();\r\n                var scores = $(\".editableScore\").toArray();\r\n                if (scores[scores.indexOf(ele) + 1]) {\r\n                    placeCaretAtEnd(scores[scores.indexOf(ele) + 1]);\r\n                }\r\n            } else if (e.key == \"ArrowUp\") {\r\n                e.preventDefault();\r\n                var scores = $(\".editableScore\").toArray();\r\n                if (scores[scores.indexOf(ele) - 1]) {\r\n                    placeCaretAtEnd(scores[scores.indexOf(ele) - 1]);\r\n                }\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    //Copies outcomes for modification, shows what-if UI\r\n    var initWhatIf = function (course) {\r\n        if (!$(\"#gradeSummary\").hasClass(\"whatIf\")) {\r\n            //Initialize what-if grades\r\n\r\n            //Copy outcomes for modification\r\n            course.gradeCalculation.dtech.whatIfOutcomes = JSON.parse(JSON.stringify(course.gradeCalculation.dtech.outcomes));\r\n\r\n            //Show what-if mode for grade summary\r\n            $(\"#gradeSummary .block.card\").css(\"background-color\", \"\");\r\n            $(\"#gradeSummary .block.card\").css(\"color\", \"var(--classColor)\");\r\n            $(\"#gradeSummary .block.card h5.bottom\").html(`<i class=\"fluid-icon\">analytics</i> What-If Grade`);\r\n            $(\"#gradeSummary .block.card .previousGrade\").remove();\r\n            $(\"#gradeSummary .block.card h2.main\").after(`<h5 onclick=\"fluid.screen();\" class=\"showActualGrades\">Show actual grades</h5>`);\r\n\r\n            $(\"#gradeSummary\").addClass(\"whatIf\");\r\n            $(\"#classGradeMore\").addClass(\"whatIf\");\r\n        }\r\n    }\r\n\r\n    //Calculates what-if grade and updates the UI based on the results\r\n    var calcWhatIf = function (course) {\r\n        if (course.gradeCalculation.dtech.whatIfOutcomes) {\r\n            //Class has what-if outcomes\r\n\r\n            //Run grade calculation with modified outcomes object\r\n            var results = dtechGradeCalc.run(course.assignments, course.gradeCalculation.dtech.formula, course.gradeCalculation.dtech.whatIfOutcomes);\r\n\r\n            //Update whatIfOutcomes object with new scores\r\n            course.gradeCalculation.dtech.whatIfOutcomes = results.outcomes;\r\n\r\n            //Update what-if results card with the grade calculation results\r\n            $(\"#gradeSummary .block.letterGrade h2.main\").html(results.results.letter);\r\n            $(\"#gradeSummary .block.number75 h2.main\").html(results.results.parameters.number75.toFixed(2));\r\n            $(\"#gradeSummary .block.lowestScore h2.main\").html(results.results.parameters.lowestScore.toFixed(2));\r\n            $(\"#classGradeMore .table tr\").removeClass(\"active\");\r\n            $(\"#classGradeMore .table tr.letter\" + results.results.letter).addClass(\"active\");\r\n\r\n            //Remove dropped state\r\n            $(\".card.outcomeResults .dropped\").removeClass(\"dropped\");\r\n\r\n            Object.keys(course.gradeCalculation.dtech.whatIfOutcomes).forEach(outcomeID => {\r\n                var outcome = course.gradeCalculation.dtech.whatIfOutcomes[outcomeID];\r\n\r\n                //Update outcome average\r\n                if (outcome.average !== undefined) {\r\n                    $(\"#outcomeScore\" + outcomeID).html(outcome.average.toFixed(2));\r\n                    $(\"#outcomeScore\" + outcomeID).css(\"color\", dtechRubricColor(outcome.average));\r\n                }\r\n\r\n                //Add dropped state if the score is dropped\r\n                if (outcome.droppedScore !== undefined) {\r\n                    $(\"#outcome\" + outcomeID + \"assessment\" + outcome.droppedScore).addClass(\"dropped\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    //Adds a new score to an outcome\r\n    var addWhatIf = function (course, outcomeID) {\r\n        //Prepare what-if grades if it's not already prepared\r\n        initWhatIf(course);\r\n\r\n        //Get new assessment index\r\n        var aIndex = course.gradeCalculation.dtech.whatIfOutcomes[outcomeID].scores.length;\r\n\r\n        //Add new assessment to the outcome\r\n        course.gradeCalculation.dtech.whatIfOutcomes[outcomeID].scores.push({ //most of the stuff in this object is optional but I'm adding it anyways\r\n            id: \"whatIf\" + aIndex, //if changing this, update the id for the rendered what-if grade assessment as well\r\n            score: null,\r\n            value: 4,\r\n            whatIfGrade: true,\r\n            outcome: outcomeID,\r\n            color: \"var(--secText)\",\r\n            assignmentTitle: \"What-If Grade\",\r\n            description: \"A What-If grade\",\r\n            title: course.gradeCalculation.dtech.whatIfOutcomes[outcomeID].title,\r\n            assignmentID: null\r\n        });\r\n\r\n        //Add a new What-If assessment to the UI\r\n        $(\".card.outcomeResults.outcome-\" + outcomeID + \" .assessments\").append(/*html*/`\r\n            <div class=\"assessmentWrapper\" id=\"outcome${outcomeID}assessment${aIndex}\" style=\"white-space: nowrap; overflow: hidden; text-overflow: ellipsis; margin: 6px 0px;\">\r\n                <div style=\"color: var(--secText);\" aIndex=\"${aIndex}\" outcomeID=\"${outcomeID}\" class=\"editableScore modified whatIf\" contenteditable></div>\r\n                <span class=\"assessmentTitle\">What-If Grade</span>\r\n            </div>\r\n        `);\r\n\r\n        //Add an event listener for the new score\r\n        listenForWhatIf($(`#outcome${outcomeID}assessment${aIndex} .editableScore`)[0], course);\r\n    }\r\n});\r\n"]}