/**
 * @file d.tech-specific features, CBL & grade calculation
 * @author jottocraft
 * 
 * @copyright Copyright (c) 2018-2020 jottocraft. All rights reserved.
 * @license GPL-2.0-only
 * 
 * JSDoc documentation for these LMS functions can be found near the end of core.js
 */
var baseURL=document.currentScript.src.split("/")[0]+"//"+document.currentScript.src.split("/")[2];jQuery.getScript(baseURL+"/scripts/lms/canvas.js",(function(){dtpsLMS.name="d.tech";dtpsLMS.legalName="Canvas LMS, Design Tech High School, and Instructure Inc";dtpsLMS.description="Power+ integration for Canvas LMS, customized for d.tech";dtpsLMS.logo="https://i.imgur.com/efGrLq3.png";dtpsLMS.source="https://github.com/jottocraft/dtps/tree/master/lms";dtpsLMS.preferRubricGrades=true;dtpsLMS.institutionSpecific=true;dtpsLMS.genericGradebook=false;dtpsLMS.updateAssignments=function(rawAssignments){return rawAssignments.map(assignment=>{if(assignment.rubric){assignment.rubric.forEach(rubricItem=>{rubricItem.scoreName=shortenDtechRubricScoreName(rubricItem.scoreName);if(rubricItem.score){rubricItem.color=dtechRubricColor(rubricItem.score/rubricItem.value)}})}return assignment})};dtpsLMS.calculateGrade=function(course,assignments){var formula="sem2";var dtechResults=dtechGradeCalc.run(assignments,formula);if(dtechResults){return{letter:dtechResults.results.letter,grade:98,dtech:dtechResults}}else{return}};var shortenDtechRubricScoreName=function(rating){if(String(rating).toUpperCase().includes("PIONEERING"))return"Pioneering";if(String(rating).toUpperCase().includes("PROFICIENT"))return"Proficient";if(String(rating).toUpperCase().includes("DEVELOPING"))return"Developing";if(String(rating).toUpperCase().includes("EMERGING"))return"Emerging";if(!String(rating).includes(" ")&&String(rating).length<=20)return rating;return""};var dtechRubricColor=function(percentage){if(percentage>=1)return"#4f9e59";if(percentage>=.75)return"#a1b553";if(percentage>=.5)return"#c26d44";if(percentage>=.25)return"#c4474e";if(percentage>=0)return"#bd3139"};var dtechGradeCalc={letters:["A","A-","B+","B","B-","C","I"],params:{sem2:{percentage:{A:3.3,"A-":3.3,"B+":2.6,B:2.6,"B-":2.6,C:2.2,I:0},lowest:{A:3,"A-":2.5,"B+":2.2,B:1.8,"B-":1.5,C:1.5,I:0}}},average:function(array){var sum=0;array.forEach(item=>sum+=item);return sum/array.length},run:function(assignments,formula="sem2"){var gradeVariations=[];var outcomes={};if(formula=="sem2"){assignments.forEach(assignment=>{if(assignment.rubric){assignment.rubric.forEach(rubricItem=>{if(rubricItem.score&&rubricItem.outcome){if(!outcomes[rubricItem.outcome]){outcomes[rubricItem.outcome]={scores:[]}}outcomes[rubricItem.outcome].scores.push(rubricItem)}})}});if(Object.keys(outcomes).length==0)return;Object.values(outcomes).forEach(outcome=>{var outcomeScores=outcome.scores.map(RubricItem=>RubricItem.score);var average=this.average(outcomeScores);var lowestScore=Math.min(...outcomeScores);var droppedArray=outcomeScores.slice();droppedArray.splice(droppedArray.indexOf(lowestScore),1);var droppedAverage=this.average(droppedArray);if(droppedAverage>average){outcome.scoreType="dropped";outcome.droppedScore=lowestScore;outcome.average=droppedAverage}else{outcome.scoreType="all";outcome.average=average}});var outcomeAvgs=Object.values(outcomes).map(outcome=>outcome.average);gradeVariations.push(this.getLetter(outcomeAvgs,formula,"all"))}var bestVariation=null;gradeVariations.forEach(variation=>{if(!bestVariation||this.letters.indexOf(variation.letter)<this.letters.indexOf(bestVariation.letter)){bestVariation=variation}});return{results:bestVariation,formula:formula,outcomes:outcomes}},getLetter:function(outcomeAvgs,formula,variation){var parameters={};outcomeAvgs.sort((a,b)=>b-a);if(formula=="sem2"){var letters=[];var percentage=.75;var numOutcomesRequired=Math.floor(outcomeAvgs.length*percentage);if(outcomeAvgs.length==1){parameters.number75=outcomeAvgs[0]}else{parameters.number75=outcomeAvgs[numOutcomesRequired-1]}parameters.number75thresh=numOutcomesRequired;var bestLetter=null;for(var i=0;i<this.letters.length;i++){let letter=this.letters[i];if(parameters.number75>=this.params[formula].percentage[letter]){bestLetter=letter;break}}letters.push(bestLetter);parameters.lowestScore=outcomeAvgs[outcomeAvgs.length-1];for(var i=0;i<this.letters.length;i++){let letter=this.letters[i];if(parameters.lowestScore>=this.params[formula].lowest[letter]){bestLetter=letter;break}}letters.push(bestLetter)}var letterIndexes=letters.map(letter=>this.letters.indexOf(letter));var lowestLetterIndex=Math.max(...letterIndexes);var letter=this.letters[lowestLetterIndex];return{letter:letter,parameters:parameters,variation:variation}}}}));