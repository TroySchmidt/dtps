{"version":3,"sources":["scripts/people.js"],"names":["dtps","usersList","courseID","classNum","classes","map","course","id","indexOf","selectedClass","selectedContent","$","removeClass","addClass","presentClass","showClasses","error","jQuery","html","dtpsLMS","fetchUsers","then","sections","length","section","title","users","user","photoURL","url","name","join","catch","err","fluid","externalScreens","people"],"mappings":";;;;;;;AAcAA,KAAKC,UAAY,SAAUC,GAEvB,IAAIC,EAAWH,KAAKI,QAAQC,KAAIC,GAAUA,EAAOC,KAAIC,QAAQN,GAC7DF,KAAKS,cAAgBN,EAGrBH,KAAKU,gBAAkB,SACvBC,EAAE,oBAAoBC,YAAY,UAClCD,EAAE,2BAA2BE,SAAS,UAGtCb,KAAKc,aAAaX,GAGlBH,KAAKe,eAEY,GAAbZ,GAEAH,KAAKgB,MAAM,mCAAoC,0CAG9ChB,KAAKS,eAAiBN,GAAsC,UAAxBH,KAAKU,iBAC1CO,OAAO,iBAAiBC,KAAK,+BAIjCC,QAAQC,WAAWpB,KAAKI,QAAQD,GAAUI,IAAIc,MAAK,SAAUC,GACpDtB,KAAKS,eAAiBN,GAAsC,UAAxBH,KAAKU,kBACrCY,GAAgC,GAAnBA,EAASC,OASvBN,OAAO,iBAAiBC,KAAKI,EAASjB,KAAImB,GAAW,oFAGhCA,EAAQC,+CACfD,EAAQE,MAAMrB,KAAIsB,GAAQ,uOAIoFA,EAAKC,sEAC1FD,EAAKE,4DAA4DF,EAAKG,yIAI9FC,KAAK,8DAGjBA,KAAK,KAvBRd,OAAO,iBAAiBC,KAAa,8PA0B9Cc,OAAM,SAAUC,GACfjC,KAAKgB,MAAM,uBAAwB,4CAA6CiB,OAKxFC,MAAMC,gBAAgBC,OAAUlC,IAC5BF,KAAKC,UAAUC","sourceRoot":"/","sourcesContent":["/**\n * @file DTPS course user list screen\n * @author jottocraft\n * \n * @copyright Copyright (c) 2018-2020 jottocraft. All rights reserved.\n * @license GPL-2.0-only\n */\n\n\n/**\n * Renders the people tab for a class\n * \n * @param {string} courseID The course ID to render the people tab for\n */\ndtps.usersList = function (courseID) {\n    //Get class index and set as selected class\n    var classNum = dtps.classes.map(course => course.id).indexOf(courseID);\n    dtps.selectedClass = classNum;\n\n    //Set people as the selected content\n    dtps.selectedContent = \"people\";\n    $(\"#dtpsTabBar .btn\").removeClass(\"active\");\n    $(\"#dtpsTabBar .btn.people\").addClass(\"active\");\n\n    //Load class color and things\n    dtps.presentClass(classNum);\n\n    //Ensure classes are shown in the sidebar\n    dtps.showClasses();\n\n    if (classNum == -1) {\n        //Class does not exist\n        dtps.error(\"The selected class doesn't exist\", \"classNum check failed @ dtps.usersList\");\n    }\n\n    if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"people\")) {\n        jQuery(\".classContent\").html(`<div class=\"spinner\"></div>`);\n    }\n\n    //Fetch users list\n    dtpsLMS.fetchUsers(dtps.classes[classNum].id).then(function (sections) {\n        if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"people\")) {\n            if (!sections || (sections.length == 0)) {\n                //No people in this class? (this shouldn't be possible)\n                jQuery(\".classContent\").html(/*html*/`\n                    <div style=\"cursor: auto;\" class=\"card assignment\">\n                        <h4>Error</h4>\n                        <p>Power+ could not get the list of people in this course</p>\n                    </div>\n                `);\n            } else {\n                jQuery(\".classContent\").html(sections.map(section => (\n                    /*html*/`\n                        <div class=\"card\">\n                            <h5><b>${section.title}</b></h5>\n                            ${section.users.map(user => (\n                                /*html*/`\n                                    <div>\n                                        <p>\n                                            <img style=\"width: 30px; border-radius: 50%; vertical-align: middle; margin-right: 5px;\" src=\"${user.photoURL}\" />\n                                            <a href=\"${user.url}\" style=\"color: var(--text); vertical-align: middle;\">${user.name}</a>\n                                        </p>\n                                    </div>\n                                `\n                            )).join(\"\")}\n                        </div>\n                    `\n                )).join(\"\"));\n            }\n        }\n    }).catch(function (err) {\n        dtps.error(\"Couldn't fetch users\", \"Caught promise rejection @ dtps.usersList\", err);\n    });\n}\n\n//Fluid UI screen definitions\nfluid.externalScreens.people = (courseID) => {\n    dtps.usersList(courseID);\n}\n\n/**\n* @typedef {Object} ClassSection\n* @description Defines a class section in DTPS\n* @property {string} title Name of the section\n* @property {string} id Section ID\n* @property {User[]} users Students in this section\n*/"]}