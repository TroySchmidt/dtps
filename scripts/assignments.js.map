{"version":3,"sources":["assignments.js"],"names":["dtps","renderAssignment","assignment","scoreHTML","renderAssignmentScore","HTML","id","class","classes","color","title","dueAt","formatDate","outcomes","length","category","turnedIn","missing","late","locked","pending","dtpsLMS","useRubricGrades","rubric","rubricHTML","forEach","rubricItem","score","push","join","grade","value","letter","replace","Math","round","masterStream","presentClass","showClasses","$","removeClass","ready","course","assignments","doneLoading","dashboardContainerHTML","dashboardItem","fullCalendar","undefined","selectedClass","jQuery","html","leftDashboard","map","rightDashboard","renderUpdates","renderUpcoming","calendar","renderDueToday","combinedStream","isToday","sort","a","b","keyA","Date","getTime","keyB","combinedHTML","updatesHTML","updates","update","type","body","gradedAt","calEvents","courseIndex","start","moment","toISOString","allDay","classNum","assignmentID","events","header","left","right","eventClick","calEvent","jsEvent","view","eventAfterAllRender","classStream","classID","searchResults","searchText","indexOf","selectedContent","addClass","error","renderClassTools","now","prevAssignment","streamHTML","divider","assignmentIDs","assignmentBodyURL","computedBackgroundColor","getComputedStyle","getPropertyValue","computedTextColor","blob","Blob","window","URL","createObjectURL","assignmentRubricHTML","scoreName","assignmentFeedbackHTML","feedback","author","photoURL","name","comment","publishedAt","subject","env","url","shortName","fluid","cards","close","modal","search","val","screen","input","Fuse","keys","moduleStream","Promise","resolve","modules","fetchModules","then","data","modulesHTML","module","moduleItemHTML","items","item","icon","action","pages","discussions","indent","collapsed","catch","err","moduleCollapse","ele","modID","parents","toggleClass","hasClass","collapseModule","num","modulesSelector","teacher","homepage","videoMeetingURL","classInfo","syllabus","syllabusURL","description","numStudents","classHome","fetchHomepage","homepageURL","e","gradebook","zeros","totalPoints","earnedPoints","gradedAssignments","assignmentHTML","gradeCalcSummary","gradebookExpanded","previousLetter","externalScreens","dashboard","stream","courseID"],"mappings":";;;;;;;AAcAA,KAAKC,iBAAmB,SAAUC,YAE9B,IAAIC,UAAYH,KAAKI,sBAAsBF,YAE3C,IAAIG,KAAe,yCAEA,oBAAsBH,WAAWI,GAAK,MAAQJ,WAAWK,MAAQ,kCAC9DJ,UAAY,oBAAsB,qCACvC,iBAAmBH,KAAKQ,QAAQN,WAAWK,OAAOE,4NAQ/CP,WAAWQ,kFAGjBP,UAAY,uBAAuBA,kBAAoB,6JAKvDD,WAAWS,MAAQ,2FAA6FX,KAAKY,WAAWV,WAAWS,OAAS,SAAW,uBAC/JT,WAAWW,SAAW,sEAAwEX,WAAWW,SAASC,OAAS,SAAW,uBACtIZ,WAAWa,SAAW,yEAA2Eb,WAAWa,SAAW,SAAW,sEAGlIb,WAAWc,SAAW,qHAAuH,uBAC7Id,WAAWe,QAAU,uHAAyH,uBAC9If,WAAWgB,KAAO,8GAAgH,uBAClIhB,WAAWiB,OAAS,+KAAiL,uBACrMjB,WAAWkB,QAAU,+GAAiH,8CAKpJ,OAAOf,MASXL,KAAKI,sBAAwB,SAAUF,YACnC,IAAIC,UAAY,GAGhB,GAAIkB,QAAQC,iBAAmBpB,WAAWqB,OAAQ,CAC9C,IAAIC,WAAa,GAEjBtB,WAAWqB,OAAOE,QAAQC,aACtB,GAAIA,WAAWC,MAAO,CAClBH,WAAWI,KAAa,qCACNF,WAAWhB,wBAAwBgB,WAAWjB,OAAS,6CAC/DiB,WAAWC,0DAM7B,GAAIH,WAAWV,OAAQX,UAAY,gCAAgCqB,WAAWK,KAAK,iBAEhF,IAAKR,QAAQC,kBAAoBpB,WAAW4B,OAAU5B,WAAW4B,OAAS,GAAK,CAClF3B,UAAoB,mFAESD,WAAW4B,oDACV5B,WAAW6B,gCAC/B7B,WAAW8B,OAAS,uBAAuB9B,WAAW8B,OAAOC,QAAQ,aAAc,wCAAwCA,QAAQ,WAAY,8CAAgD,+CACvKC,KAAKC,MAAOjC,WAAW4B,MAAQ5B,WAAW6B,MAAS,4CAKzF,OAAO5B,WAMXH,KAAKoC,aAAe,WAEhBpC,KAAKqC,aAAa,QAClBrC,KAAKsC,cAGLC,EAAE,oBAAoBC,YAAY,UAGlC,IAAIC,MAAQ,EACZzC,KAAKQ,QAAQiB,QAAQiB,SACjB,GAAIA,OAAOC,YAAaF,UAI5B,IAAIG,YAAcH,OAASzC,KAAKQ,QAAQM,OAGxC,SAAS+B,uBAAuBC,eAC5B,GAAIA,cAAcxC,IAAM,gBAAiB,CACrC,OAAOiC,EAAEQ,eAAiBC,UAAY,gEAAkE,QACrG,GAAIF,cAAcxC,IAAM,eAAgB,CAC3C,MAAO,sEACJ,GAAIwC,cAAcxC,IAAM,gBAAiB,CAC5C,MAAO,+DACJ,GAAIwC,cAAcxC,IAAM,gBAAiB,CAC5C,MAAO,mEAKf,GAAIN,KAAKiD,eAAiB,OAAQ,CAC9BC,OAAO,iBAAiBC,KAAa,wHAE3BnD,KAAKoD,cAAcC,IAAIP,eACtBD,uBAAuBC,gBAC/BjB,KAAK,iIAIGe,YAAc,8EAAgF,uBAC/F5C,KAAKsD,eAAeD,IAAIP,eACvBD,uBAAuBC,gBAC/BjB,KAAK,qCAMZ7B,KAAKuD,gBAGLvD,KAAKwD,eAAeZ,aAGpB5C,KAAKyD,WAGLzD,KAAK0D,eAAed,cAQxB5C,KAAK0D,eAAiB,SAAUd,aAE5B,IAAIe,eAAiB,GACrB,GAAI3D,KAAKQ,QAAS,CACdR,KAAKQ,QAAQiB,QAAQiB,SACjB,GAAIA,OAAOC,YAAa,CAEpBD,OAAOC,YAAYlB,QAAQvB,aAEvB,GAAIF,KAAK4D,QAAQ1D,WAAWS,OAAQ,CAChCgD,eAAe/B,KAAK1B,kBAQxCyD,eAAeE,MAAK,SAAUC,EAAGC,GAC7B,IAAIC,KAAO,IAAIC,KAAKH,EAAEnD,OAAOuD,UACzBC,KAAO,IAAIF,KAAKF,EAAEpD,OAAOuD,UAG7B,GAAIF,KAAOG,KAAM,OAAO,EACxB,GAAIH,KAAOG,KAAM,OAAQ,EACzB,OAAO,KAIX,IAAIC,aAAeT,eAAeN,IAAInD,YAC3BF,KAAKC,iBAAiBC,aAC9B2B,KAAK,IAER,GAAI8B,eAAe7C,QAAU,EAAG,CAE5B,GAAI8B,YAAa,CACbwB,aAAe,2IACZ,CACHA,aAAe,QAEhB,CAEHA,aAAuB,yHAEnBA,aAGR,GAAIpE,KAAKiD,eAAiB,OAAQ,CAC9BC,OAAO,iCAAiCC,KAAKiB,gBAOrDpE,KAAKwD,eAAiB,WAElB,IAAIG,eAAiB,GACrB,GAAI3D,KAAKQ,QAAS,CACdR,KAAKQ,QAAQiB,QAAQiB,SACjB,GAAIA,OAAOC,YAAa,CAEpBD,OAAOC,YAAYlB,QAAQvB,aAEvB,GAAK,IAAI+D,KAAK/D,WAAWS,OAAS,IAAIsD,OAAYjE,KAAK4D,QAAQ1D,WAAWS,OAAQ,CAC9EgD,eAAe/B,KAAK1B,kBAQxCyD,eAAeE,MAAK,SAAUC,EAAGC,GAC7B,IAAIC,KAAO,IAAIC,KAAKH,EAAEnD,OAAOuD,UACzBC,KAAO,IAAIF,KAAKF,EAAEpD,OAAOuD,UAG7B,GAAIF,KAAOG,KAAM,OAAO,EACxB,GAAIH,KAAOG,KAAM,OAAQ,EACzB,OAAO,KAIX,IAAIC,aAAeT,eAAeN,IAAInD,YAC3BF,KAAKC,iBAAiBC,aAC9B2B,KAAK,IAGR,GAAI8B,eAAe7C,QAAU,EAAG,CAC5BsD,aAAe,GAGnB,GAAIpE,KAAKiD,eAAiB,OAAQ,CAC9BC,OAAO,yCAAyCC,KAAKiB,gBAO7DpE,KAAKuD,cAAgB,WAEjB,IAAIc,YAAc,GAElBrE,KAAKsE,QAAQ7C,QAAQ8C,SACjB,GAAIA,OAAOC,MAAQ,eAAgB,CAC/BH,aAAuB,sHACgFrE,KAAKQ,QAAQ+D,OAAOhE,OAAOE,kFACjG8D,OAAO7D,oCAC9B6D,OAAOE,kDAGd,GAAIF,OAAOC,MAAQ,aAAc,CACpC,IAAIrE,UAAYH,KAAKI,sBAAsBmE,QAC3CF,aAAuB,oDACcE,OAAOjE,QAAQiE,OAAOhE,gCAAgCP,KAAKQ,QAAQ+D,OAAOhE,OAAOE,8FAElG8D,OAAO7D,kGAGbP,UAAY,uBAAuBA,kBAAoB,qEAG9CH,KAAKY,WAAW2D,OAAOG,yDAMtD,GAAI1E,KAAKiD,eAAiB,OAAQ,CAC9BC,OAAO,sCAAsCC,KAAKkB,eAQ1DrE,KAAKyD,SAAW,WACZ,GAAIzD,KAAKiD,eAAiB,OAAQ,CAE9B,IAAI0B,UAAY,GAGhB3E,KAAKQ,QAAQiB,QAAQ,CAACiB,OAAQkC,eAC1B,GAAIlC,OAAOC,YAAa,CAEpBD,OAAOC,YAAYlB,QAAQvB,aACvByE,UAAU/C,KAAK,CACXlB,MAAOR,WAAWQ,MAClBmE,MAAOC,OAAO,IAAIb,KAAK/D,WAAWS,QAAQoE,YAAY,MACtDC,OAAQ,MACRvE,MAAOiC,OAAOjC,MACdwE,SAAUL,YACVM,aAAchF,WAAWI,UAOzC,GAAIiC,EAAEQ,eAAiBC,UAAW,CAC9BT,EAAE,aAAaQ,aAAa,CACxBoC,OAAQR,UACRS,OAAQ,CACJC,KAAM,QACNC,MAAO,aAEXC,WAAY,SAAUC,SAAUC,QAASC,MACrC1F,KAAKE,WAAWsF,SAASN,aAAcM,SAASP,WAEpDU,oBAAqB,WACjBpD,EAAE,mBAAmBY,KAAK,qDAC1BZ,EAAE,mBAAmBY,KAAK,yDAItCZ,EAAE,mBAAmBY,KAAK,qDAC1BZ,EAAE,mBAAmBY,KAAK,wDAYlCnD,KAAK4F,YAAc,SAAUC,QAASC,cAAeC,YAEjD,IAAId,SAAWjF,KAAKQ,QAAQ6C,IAAIX,QAAUA,OAAOpC,IAAI0F,QAAQH,SAC7D7F,KAAKiD,cAAgBgC,SAGrBjF,KAAKiG,gBAAkB,SACvB1D,EAAE,oBAAoBC,YAAY,UAClCD,EAAE,2BAA2B2D,SAAS,UAGtClG,KAAKqC,aAAa4C,UAGlBjF,KAAKsC,cAEL,GAAI2C,WAAa,EAAG,CAEhBjF,KAAKmG,MAAM,mCAAoC,4CAInD,IAAIxD,YAAcmD,eAAiB9F,KAAKQ,QAAQyE,UAAUtC,YAG1D,IAAKA,YAAa,CAEd,GAAK3C,KAAKiD,eAAiBgC,UAAcjF,KAAKiG,iBAAmB,SAAW,CACxE/C,OAAO,iBAAiBC,KAAKnD,KAAKoG,iBAAiBnB,SAAU,SAAUc,YAAc,qCAEtF,GAAIpD,YAAY7B,QAAU,EAAG,CAChC,GAAIiF,WAAY,CAEZ,GAAK/F,KAAKiD,eAAiBgC,UAAcjF,KAAKiG,iBAAmB,SAAW,CACxE1D,EAAE,iBAAiBY,KAAcnD,KAAKoG,iBAAiBnB,SAAU,SAAUc,YAAc,2WAQ1F,CAEH,GAAK/F,KAAKiD,eAAiBgC,UAAcjF,KAAKiG,iBAAmB,SAAW,CACxE1D,EAAE,iBAAiBY,KAAKnD,KAAKoG,iBAAiBnB,SAAU,SAAUc,YAAc,+IAGrF,CAEHpD,YAAYkB,MAAK,SAAUC,EAAGC,GAC1B,IAAIC,KAAO,IAAIC,KAAKH,EAAEnD,OAAOuD,UACzBC,KAAO,IAAIF,KAAKF,EAAEpD,OAAOuD,UAE7B,IAAImC,KAAM,IAAIpC,MAAOC,UAGrB,IAAKJ,EAAEnD,MAAO,CAAEqD,KAAO,EACvB,IAAKD,EAAEpD,MAAO,CAAEwD,KAAO,EAGvB,GAAKH,KAAOqC,KAASlC,KAAOkC,IAAM,CAE9B,GAAIrC,KAAOG,KAAM,OAAO,EACxB,GAAIH,KAAOG,KAAM,OAAQ,EACzB,OAAO,MACJ,CAEH,GAAIH,KAAOG,KAAM,OAAO,EACxB,GAAIH,KAAOG,KAAM,OAAQ,EACzB,OAAO,MAKf,IAAImC,eAAiB,KACrB,IAAIC,WAAa5D,YAAYU,IAAInD,aAC7B,IAAIsG,QAAU,GAEd,IAAKtG,WAAWS,MAAO,CACnB,GAAI2F,gBAAmBA,iBAAmB,UAAY,CAClDE,QAAU,sFAGdF,eAAiB,eACd,GAAI,IAAIrC,KAAK/D,WAAWS,OAAS,IAAIsD,KAAQ,CAChD,GAAIqC,gBAAmBA,iBAAmB,MAAQ,CAC9CE,QAAU,kFAGdF,eAAiB,UACd,CACHA,eAAiB,WAGrB,OAAOE,QAAUxG,KAAKC,iBAAiBC,cACxC2B,KAAK,IAGR0E,WAAavG,KAAKoG,iBAAiBnB,SAAU,SAAUc,YAAcQ,WAErE,GAAKvG,KAAKiD,eAAiBgC,UAAcjF,KAAKiG,iBAAmB,SAAW,CACxE1D,EAAE,iBAAiBY,KAAKoD,eAWpCvG,KAAKE,WAAa,SAAUI,GAAI2E,UAE5B,IAAIwB,cAAgBzG,KAAKQ,QAAQyE,UAAUtC,YAAYU,IAAInD,YAAcA,WAAWI,IACpF,IAAIJ,WAAaF,KAAKQ,QAAQyE,UAAUtC,YAAY8D,cAAcT,QAAQ1F,KAG1E,IAAIoG,kBAAoB,KACxB,GAAIxG,WAAWuE,KAAM,CAEjB,IAAIkC,wBAA0BC,iBAAiBrE,EAAE,iBAAiB,IAAIsE,iBAAiB,WACvF,IAAIC,kBAAoBF,iBAAiBrE,EAAE,iBAAiB,IAAIsE,iBAAiB,UAGjF,IAAIE,KAAO,IAAIC,KAAK,CAAC,mOAGoBL,mCAAmCG,+CAClE5G,WAAWuE,sBACb,CAAED,KAAM,cAChBkC,kBAAoBO,OAAOC,IAAIC,gBAAgBJ,MAInD,IAAIK,qBAAuB,GAC3B,GAAIlH,WAAWqB,OAAQ,CACnB,IAAI6F,qBAAuBlH,WAAWqB,OAAO8B,KAAI,SAAU3B,YACvD,MAAe,6FAEGA,WAAWhB,yGAEMgB,WAAWjB,MAAQiB,WAAWjB,MAAQ,0EACnDiB,WAAWC,MAAQD,WAAW2F,WAAa,GAAK,iIAG1B3F,WAAWC,OAAS,oEAClB,IAAMD,WAAWK,uKAMhEF,KAAK,IAIZ,IAAIyF,uBAAyB,GAC7B,GAAIpH,WAAWqH,SAAU,CACrB,IAAID,uBAAyBpH,WAAWqH,SAASlE,IAAIkE,UAClC,sFAEDA,SAASC,OAAiB,2CACZD,SAASC,OAAOC,iDACtBF,SAASC,OAAOE,sCACtB,oCAECH,SAASI,6DAG3B9F,KAAK,IAIZ,IAAI1B,UAAYH,KAAKI,sBAAsBF,YAG3CqC,EAAE,iBAAiBY,KAAa,oLAGSjD,WAAWQ,oDAGtCR,WAAWS,MAAQ,4EAA4EX,KAAKY,WAAWV,WAAWS,sBAAwB,uBAClJT,WAAWc,SAAW,2IAA6I,uBACnKd,WAAWe,QAAU,8IAAgJ,uBACrKf,WAAWgB,KAAO,oIAAsI,uBACxJhB,WAAWiB,OAAS,8MAAgN,uBACpOhB,wHAIAD,WAAWuE,KAAO,uJAAuJiC,wBAA0B,yCAGvMxG,WAAWuE,KAAO,kHAAoH,4JAGlIvE,WAAW0H,YAAc,uIAAuI5H,KAAKY,WAAWV,WAAW0H,mBAAqB,uBAChN1H,WAAWS,MAAQ,+HAA+HX,KAAKY,WAAWV,WAAWS,aAAe,uBAC5LT,WAAW6B,MAAQ,2IAA2I7B,WAAW6B,YAAc,uBACtL7B,WAAW4B,OAAU5B,WAAW4B,OAAS,EAAM,8IAA8I5B,WAAW4B,YAAc,uBACvN5B,WAAW8B,OAAS,gJAAgJ9B,WAAW8B,aAAe,uBAC9L9B,WAAWa,SAAW,uIAAuIb,WAAWa,eAAiB,uBACzLb,WAAWqB,OAASrB,WAAWqB,OAAO8B,KAAI,SAAU3B,YAAc,MAAO,2HAA2HA,WAAWhB,eAAgBmB,KAAK,IAAM,qJAC5G7B,KAAKQ,QAAQN,WAAWK,OAAOsH,gCAC7J7H,KAAK8H,KAAO,MAAQ,wIAAwI5H,WAAWI,SAAW,wFAI9KJ,WAAW6H,IAAM,wDAAwD7H,WAAW6H,4DAA4D1G,QAAQ2G,WAAa3G,QAAQqG,aAAe,6NAKhMJ,6CAEAF,sDAKda,MAAMC,MAAMC,MAAM,eAClBF,MAAMG,MAAM,kBAMhBpI,KAAKqI,OAAS,WACV,GAAI9F,EAAE,gBAAgB+F,OAAS,GAAI,CAC/BL,MAAMM,aACH,CACH,IAAIC,MAAQjG,EAAE,gBAAgB+F,MAC9B,IAAID,OAAS,IAAII,KAAKzI,KAAKQ,QAAQR,KAAKiD,eAAeN,YAAa,CAChE+F,KAAM,CAAC,QAAS,UAEpB1I,KAAK4F,YAAY5F,KAAKQ,QAAQR,KAAKiD,eAAe3C,GAAI+H,OAAOA,OAAOG,OAAQA,SASpFxI,KAAK2I,aAAe,SAAU9C,SAE1B,IAAIZ,SAAWjF,KAAKQ,QAAQ6C,IAAIX,QAAUA,OAAOpC,IAAI0F,QAAQH,SAC7D7F,KAAKiD,cAAgBgC,SAGrBjF,KAAKiG,gBAAkB,eACvB1D,EAAE,oBAAoBC,YAAY,UAClCD,EAAE,2BAA2B2D,SAAS,UAGtClG,KAAKqC,aAAa4C,UAGlBjF,KAAKsC,cAEL,GAAI2C,WAAa,EAAG,CAEhBjF,KAAKmG,MAAM,mCAAoC,6CAInD,GAAKnG,KAAKiD,eAAiBgC,UAAcjF,KAAKiG,iBAAmB,eAAiB,CAC9E/C,OAAO,iBAAiBC,KAAKnD,KAAKoG,iBAAiBnB,SAAU,WAAa,+BAG9E,IAAI2D,QAAQC,UACR,GAAI7I,KAAKQ,QAAQyE,UAAU6D,SAAY9I,KAAKQ,QAAQyE,UAAU6D,UAAY,KAAO,CAC7ED,QAAQ7I,KAAKQ,QAAQyE,UAAU6D,aAC5B,CACHzH,QAAQ0H,aAAa/I,KAAKQ,QAAQyE,UAAU3E,IAAI0I,KAAKC,MAAQJ,QAAQI,UAE1ED,KAAKC,OAEJjJ,KAAKQ,QAAQyE,UAAU6D,QAAUG,KAEjC,IAAIC,YAAclJ,KAAKoG,iBAAiBnB,SAAU,WAElDgE,KAAKxH,QAAQ0H,SACT,IAAIC,eAAiB,GAGrBD,OAAOE,MAAM5H,QAAQ6H,OAEjB,IAAIC,KAAO,OACX,GAAID,KAAK9E,MAAQ,aAAc+E,KAAO,aACtC,GAAID,KAAK9E,MAAQ,OAAQ+E,KAAO,oBAChC,GAAID,KAAK9E,MAAQ,aAAc+E,KAAO,QACtC,GAAID,KAAK9E,MAAQ,MAAO+E,KAAO,cAC/B,GAAID,KAAK9E,MAAQ,SAAU+E,KAAO,cAClC,GAAID,KAAK9E,MAAQ,QAAS+E,KAAO,MAGjC,IAAIC,OAAS,GACb,GAAIF,KAAK9E,MAAQ,aAAcgF,OAAS,oBAAsBF,KAAKhJ,GAAK,MAAQ2E,SAAW,IAC3F,GAAIqE,KAAK9E,MAAQ,OAAQ,CACrB,GAAIxE,KAAKQ,QAAQyE,UAAUwE,MAAO,CAC9BD,OAAS,0BAA4B3D,QAAU,IAAMyD,KAAKhJ,GAAK,SAC5D,CACHkJ,OAAS,gBAAkBF,KAAKvB,IAAM,MAG9C,GAAIuB,KAAK9E,MAAQ,aAAc,CAC3B,GAAIxE,KAAKQ,QAAQyE,UAAUyE,YAAa,CACpCF,OAAS,gCAAkC3D,QAAU,IAAMyD,KAAKhJ,GAAK,SAClE,CACHkJ,OAAS,gBAAkBF,KAAKvB,IAAM,MAG9C,GAAIuB,KAAK9E,MAAQ,MAAOgF,OAAS,gBAAkBF,KAAKvB,IAAM,KAC9D,GAAIuB,KAAK9E,MAAQ,SAAUgF,OAAS,GACpC,GAAIF,KAAK9E,MAAQ,QAASgF,OAAS,wBAA0BF,KAAKvB,IAAM,KAGxE,GAAIuB,KAAK9E,MAAQ,SAAU,CACvB4E,gBAAkB,kDAAkDE,KAAK5I,iBACtE,CACH0I,gBAAkB,8DACqBI,+BAA+BF,KAAKK,OAAS,kEAChDJ,yCAC1BD,KAAK5I,iEAOvBwI,aAAuB,6CACOC,OAAOS,UAAY,YAAc,kGAEV5J,KAAKQ,QAAQyE,UAAU3E,SAAS6I,OAAO7I,4EACtC6I,OAAOS,UAAY,uBAAyB,sDACpFT,OAAOzI,4IAIP0I,qFAMlB,GAAIH,KAAKnI,QAAU,EAAG,CAClBoI,aAAe,gIAInB,GAAKlJ,KAAKiD,eAAiBgC,UAAcjF,KAAKiG,iBAAmB,eAAiB,CAC9E/C,OAAO,iBAAiBC,KAAK+F,gBAElCW,MAAMC,MACL9J,KAAKmG,MAAM,yBAA0B,+CAAgD2D,QAW7F9J,KAAK+J,eAAiB,SAAUC,IAAKnE,QAASoE,OAE1C1H,EAAEyH,KAAKE,QAAQ,SAASC,YAAY,aAGpC,GAAI5H,EAAEyH,KAAKE,QAAQ,SAASE,SAAS,aAAc,CAC/C,GAAI/I,QAAQgJ,eAAgBhJ,QAAQgJ,eAAexE,QAASoE,MAAO,MACnE1H,EAAEyH,KAAK7G,KAAK,4BACT,CACH,GAAI9B,QAAQgJ,eAAgBhJ,QAAQgJ,eAAexE,QAASoE,MAAO,OACnE1H,EAAEyH,KAAK7G,KAAK,yBAapBnD,KAAKoG,iBAAmB,SAAUkE,IAAK9F,KAAMuB,YACzC,IAAIwE,gBAAkBvK,KAAKQ,QAAQ8J,KAAKxB,QACxC,MAAe,yEACmDyB,gBAAkB,OAAS,iCAEnFvK,KAAKQ,QAAQ8J,KAAKE,QAAkB,yJAElBxK,KAAKQ,QAAQ8J,KAAKE,QAAQ/C,8MACwDzH,KAAKQ,QAAQ8J,KAAKE,QAAQ9C,qCAClH,kDAGiB4C,kTAI7BtK,KAAKQ,QAAQ8J,KAAKG,SAAmB,kDACJH,0SAErB,iBAGhBtK,KAAKQ,QAAQ8J,KAAKI,gBAA0B,gDACT1K,KAAKQ,QAAQ8J,KAAKI,2TAErC,2CAKflG,MAAQ,WAAeA,MAAQ,SAAoB,+CAClB+F,gBAAkB,GAAK,4CAEjD/F,MAAQ,SAAW,wDAAwDuB,WAAa,UAAUA,cAAgB,uHAAyH,iDAG3OwE,gBAA0B,qGACsD/F,MAAQ,SAAW,gCAAkC,kFAC1GA,MAAQ,SAAW,SAAW,uLAC9BA,MAAQ,UAAY,SAAW,2LAExD,2CAEE,YAUtBxE,KAAK2K,UAAY,SAAUL,KAEvB,GAAKtK,KAAKQ,QAAQ8J,KAAKM,WAAa,IAAO5K,KAAKQ,QAAQ8J,KAAKM,WAAa,KAAM,CAE5E,IAAIjE,wBAA0BC,iBAAiBrE,EAAE,iBAAiB,IAAIsE,iBAAiB,WACvF,IAAIC,kBAAoBF,iBAAiBrE,EAAE,iBAAiB,IAAIsE,iBAAiB,UAGjF,IAAIE,KAAO,IAAIC,KAAK,CAAC,uNAGgBL,mCAAmCG,2CAClE9G,KAAKQ,QAAQ8J,KAAKM,sBACpB,CAAEpG,KAAM,cACZ,IAAIqG,YAAc5D,OAAOC,IAAIC,gBAAgBJ,MAIjDxE,EAAE,iBAAiBY,KAAa,8IAGKnD,KAAKQ,QAAQ8J,KAAK5C,uDAChB1H,KAAKQ,QAAQ8J,KAAKQ,aAAe,qBAElE9K,KAAKQ,QAAQ8J,KAAKS,YAAc,wEAAwE/K,KAAKQ,QAAQ8J,KAAKS,oCAAsC,eAChK/K,KAAK8H,KAAO,MAAQ,iFAAiF9H,KAAKQ,QAAQ8J,KAAKhK,kBAAoB,yGAKvIN,KAAKQ,QAAQ8J,KAAKM,SAAW,qKACuHC,kBAAoB,4BAKlL5C,MAAMG,MAAM,kBAQhBpI,KAAKgL,UAAY,SAAUV,KAEvB/H,EAAE,iBAAiBY,KAAa,4IAEKnD,KAAKQ,QAAQ8J,KAAKzC,4EAOvDxG,QAAQ4J,cAAcjL,KAAKQ,QAAQ8J,KAAKhK,IAAI0I,KAAKyB,WAC7C,GAAIA,SAAU,CAEV,IAAI9D,wBAA0BC,iBAAiBrE,EAAE,iBAAiB,IAAIsE,iBAAiB,WACvF,IAAIC,kBAAoBF,iBAAiBrE,EAAE,iBAAiB,IAAIsE,iBAAiB,UAGjF,IAAIE,KAAO,IAAIC,KAAK,CAAC,mOAGgBL,mCAAmCG,+CAClE2D,0BACF,CAAEjG,KAAM,cACZ,IAAI0G,YAAcjE,OAAOC,IAAIC,gBAAgBJ,MAE7CxE,EAAE,iBAAiBY,KAAa,8JAGKnD,KAAKQ,QAAQ8J,KAAKzC,8RAImGqD,yDAI1JjD,MAAMG,MAAM,qBACT,CACHH,MAAMC,MAAMC,MAAM,iBAClBnI,KAAKmG,MAAM,uBAAwB,6DAExC0D,MAAMsB,IACLnL,KAAKmG,MAAM,yBAA0B,8CAA+CgF,MAS5FnL,KAAKoL,UAAY,SAAUvF,SAEvB,IAAIZ,SAAWjF,KAAKQ,QAAQ6C,IAAIX,QAAUA,OAAOpC,IAAI0F,QAAQH,SAC7D7F,KAAKiD,cAAgBgC,SAGrBjF,KAAKiG,gBAAkB,SACvB1D,EAAE,oBAAoBC,YAAY,UAClCD,EAAE,2BAA2B2D,SAAS,UAGtClG,KAAKqC,aAAa4C,UAGlBjF,KAAKsC,cAEL,GAAI2C,WAAa,EAAG,CAEhBjF,KAAKmG,MAAM,mCAAoC,0CAInD,GAAKnG,KAAKiD,eAAiBgC,UAAcjF,KAAKiG,iBAAmB,SAAW,CACxE/C,OAAO,iBAAiBC,KAAK,+BAIjC,IAAKnD,KAAKQ,QAAQyE,UAAUjD,SAAWhC,KAAKQ,QAAQyE,UAAUtC,YAAa,CACvE,OAIJ,IAAI0I,MAAQ,EACZ,IAAIC,YAAc,EAClB,IAAIC,aAAe,EACnB,IAAIC,kBAAoB,EAGxB,IAAIC,eAAiB,GAGrBzL,KAAKQ,QAAQyE,UAAUtC,YAAYlB,QAAQvB,aACvC,GAAIA,WAAW4B,OAAU5B,WAAW4B,OAAS,EAAI,CAC7CyJ,cAAgBrL,WAAW4B,MAC3B0J,oBAEAC,gBAA0B,oDACWvL,WAAWI,QAAQ2E,mGAE1C/E,WAAWQ,qFAGPR,WAAW8B,OAAS,gCAAgC9B,WAAW8B,eAAiB,+DACpD9B,WAAW4B,yEACV5B,WAAW6B,6EACPG,KAAKC,MAAOjC,WAAW4B,MAAQ5B,WAAW6B,MAAS,+GAO1G,GAAI7B,WAAW6B,MAAO,CAClBuJ,aAAepL,WAAW6B,MAG9B,GAAK7B,WAAW4B,OAAS,GAAM5B,WAAW6B,MAAO,CAC7CsJ,WAKR,IAAIK,iBAA2B,uCACC1L,KAAKQ,QAAQyE,UAAUxE,iKAIrCT,KAAKQ,QAAQyE,UAAUnD,MAAQ,4BAA4B9B,KAAKQ,QAAQyE,UAAUnD,gBAAkB,+CAChF9B,KAAKQ,QAAQyE,UAAUjD,QAAU,sEAI7DqJ,MAAgB,iKAGqCA,mDAEnD,iCAEUrL,KAAK2L,kBAAoB,GAAK,qFAGtC3L,KAAKQ,QAAQyE,UAAU2G,eAAyB,sIAGnB5L,KAAKQ,QAAQyE,UAAU2G,oEAElD,8KAK2BL,qEACAD,qMAMJE,uZAMiDxL,KAAK2L,kBAAoB,YAAc,0DAQ/H,GAAK3L,KAAKiD,eAAiBgC,UAAcjF,KAAKiG,iBAAmB,SAAW,CACxE1D,EAAE,iBAAiBY,KAAKuI,iBAAmBD,kBAKnDxD,MAAM4D,gBAAgBC,UAAY,KAC9B9L,KAAKoC,gBAGT6F,MAAM4D,gBAAgBE,OAAUC,WAC5BhM,KAAK4F,YAAYoG,WAGrB/D,MAAM4D,gBAAgBlD,aAAgBqD,WAClChM,KAAK2I,aAAaqD,WAGtB/D,MAAM4D,gBAAgBT,UAAaY,WAC/BhM,KAAKoL,UAAUY","sourcesContent":["/**\r\n * @file DTPS assignment functions\r\n * @author jottocraft\r\n * \r\n * @copyright Copyright (c) 2018-2020 jottocraft. All rights reserved.\r\n * @license GPL-2.0-only\r\n */\r\n\r\n/**\r\n * Renders HTML for an assignment item in a list\r\n * \r\n * @param {Assignment} assignment The assignment object to render\r\n * @return {string} Assignment HTML for use in a list\r\n */\r\ndtps.renderAssignment = function (assignment) {\r\n    //Render points/letter score\r\n    var scoreHTML = dtps.renderAssignmentScore(assignment);\r\n\r\n    var HTML = /*html*/`\r\n        <div \r\n            onclick=\"${`dtps.assignment('` + assignment.id + `', ` + assignment.class + `)`}\" \r\n            class=\"card ${scoreHTML ? \"graded assignment\" : \"assignment\"}\"\r\n            style=\"${'--classColor: ' + dtps.classes[assignment.class].color}\"\r\n        >\r\n\r\n            <!-- Color bar for the dashboard -->\r\n            <div class=\"colorBar\"></div>\r\n\r\n            <!-- Assignment title and points -->\r\n            <h4>\r\n                <span>${assignment.title}</span>\r\n\r\n                <!-- Points display -->\r\n                ${scoreHTML ? `<div class=\"points\">${scoreHTML}</div>` : ``}\r\n            </h4>\r\n\r\n            <h5 style=\"white-space: nowrap; overflow: hidden;\">\r\n                <!-- Assignment info -->\r\n                ${assignment.dueAt ? `<div class=\"infoChip\"><i style=\"margin-top: -2px;\" class=\"material-icons\">alarm</i> Due ` + dtps.formatDate(assignment.dueAt) + `</div>` : \"\"}\r\n                ${assignment.outcomes ? `<div class=\"infoChip weighted\"><i class=\"material-icons\">adjust</i>` + assignment.outcomes.length + `</div>` : \"\"}\r\n                ${assignment.category ? `<div class=\"infoChip weighted\"><i class=\"material-icons\">category</i> ` + assignment.category + `</div>` : \"\"}\r\n\r\n                <!-- Status icons -->\r\n                ${assignment.turnedIn ? `<i title=\"Assignment submitted\" class=\"material-icons statusIcon\" style=\"color: #0bb75b;\">assignment_turned_in</i>` : ``}\r\n                ${assignment.missing ? `<i title=\"Assignment is missing\" class=\"material-icons statusIcon\" style=\"color: #c44848;\">remove_circle_outline</i>` : ``}\r\n                ${assignment.late ? `<i title=\"Assignment is late\" class=\"material-icons statusIcon\" style=\"color: #c44848;\">assignment_late</i>` : ``}\r\n                ${assignment.locked ? `<i title=\"Assignment submissions are locked\" class=\"material-icons statusIcon\" style=\"font-family: 'Material Icons Extended'; color: var(--secText, gray);\">lock_outline</i>` : ``}\r\n                ${assignment.pending ? `<i title=\"Grade is pending review\" class=\"material-icons statusIcon\" style=\"color: #b3b70b;\">rate_review</i>` : ``}\r\n            </h5>\r\n        </div>\r\n    `;\r\n\r\n    return HTML;\r\n}\r\n\r\n/**\r\n* Renders HTML for an assignment score if the assignment is graded\r\n* \r\n* @param {Assignment} assignment The assignment object to render a score for\r\n* @return {string} Assignment score HTML\r\n*/\r\ndtps.renderAssignmentScore = function (assignment) {\r\n    var scoreHTML = \"\";\r\n\r\n    //Use rubric score over points score if possible\r\n    if (dtpsLMS.useRubricGrades && assignment.rubric) {\r\n        var rubricHTML = [];\r\n\r\n        assignment.rubric.forEach(rubricItem => {\r\n            if (rubricItem.score) {\r\n                rubricHTML.push(/*html*/`\r\n                    <div title=\"${rubricItem.title}\" style=\"color: ${rubricItem.color || \"var(--text)\"};\">\r\n                        ${rubricItem.score}\r\n                    </div>\r\n                `);\r\n            }\r\n        });\r\n\r\n        if (rubricHTML.length) scoreHTML = `<div class=\"dtpsRubricScore\">${rubricHTML.join(\"\")}</div>`;\r\n\r\n    } else if (!dtpsLMS.useRubricGrades && (assignment.grade || (assignment.grade == 0))) {\r\n        scoreHTML = /*html*/`\r\n            <div class=\"assignmentGrade\">\r\n                <div class=\"grade\">${assignment.grade}</div>\r\n                <div class=\"value\">/${assignment.value}</div>\r\n                ${assignment.letter ? `<div class=\"letter\">${assignment.letter.replace(\"incomplete\", `<i class=\"material-icons\">cancel</i>`).replace(\"complete\", `<i class=\"material-icons\">done</i>`)}</div>` : \"\"}\r\n                <div class=\"percentage\">${Math.round((assignment.grade / assignment.value) * 100)}%</div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    return scoreHTML;\r\n}\r\n\r\n/**\r\n * Renders the DTPS dashboard and calls dtps.renderCalendar, dtps.renderUpdates, and dtps.renderUpcoming\r\n */\r\ndtps.masterStream = function () {\r\n    //Ensure classes are rendered in the sidebar\r\n    dtps.presentClass(\"dash\");\r\n    dtps.showClasses();\r\n\r\n    //Clear active state from all tabs\r\n    $(\"#dtpsTabBar .btn\").removeClass(\"active\");\r\n\r\n    //Count amount of classes that are loaded\r\n    var ready = 0;\r\n    dtps.classes.forEach(course => {\r\n        if (course.assignments) ready++;\r\n    });\r\n\r\n    //Check if all classes are loaded\r\n    var doneLoading = ready == dtps.classes.length;\r\n\r\n    //Returns dashboard item container HTML for an item\r\n    function dashboardContainerHTML(dashboardItem) {\r\n        if (dashboardItem.id == \"dtps.calendar\") {\r\n            return $.fullCalendar !== undefined ? `<div id=\"calendar\" class=\"card\" style=\"padding: 20px;\"></div>` : \"\";\r\n        } else if (dashboardItem.id == \"dtps.updates\") {\r\n            return `<div class=\"updatesStream recentlyGraded announcements\"></div>`;\r\n        } else if (dashboardItem.id == \"dtps.dueToday\") {\r\n            return `<div style=\"padding: 20px 0px;\" class=\"dueToday\"></div>`;\r\n        } else if (dashboardItem.id == \"dtps.upcoming\") {\r\n            return `<div style=\"padding: 20px 0px;\" class=\"assignmentStream\"></div>`;\r\n        }\r\n    }\r\n\r\n    //Render HTML with loading placeholder\r\n    if (dtps.selectedClass == \"dash\") {\r\n        jQuery(\".classContent\").html(/*html*/`\r\n            <div class=\"dash cal\" style=\"width: 40%;display: inline-block; vertical-align: top;\">\r\n                ${dtps.leftDashboard.map(dashboardItem => {\r\n            return dashboardContainerHTML(dashboardItem);\r\n        }).join(\"\")}\r\n            </div>\r\n\r\n            <div style=\"width: 59%; display: inline-block;\" class=\"dash stream\">\r\n                ${!doneLoading ? `<div style=\"margin: 75px 25px 10px 75px;\"><div class=\"spinner\"></div></div>` : \"\"}\r\n                ${dtps.rightDashboard.map(dashboardItem => {\r\n            return dashboardContainerHTML(dashboardItem);\r\n        }).join(\"\")}\r\n            </div>\r\n        `);\r\n    }\r\n\r\n    //Render updates stream\r\n    dtps.renderUpdates();\r\n\r\n    //Render upcoming assignments stream\r\n    dtps.renderUpcoming(doneLoading);\r\n\r\n    //Render calendar\r\n    dtps.calendar();\r\n\r\n    //Render due today\r\n    dtps.renderDueToday(doneLoading);\r\n}\r\n\r\n/**\r\n * Compiles and displays due today / to-do stream\r\n * \r\n * @param {boolean} doneLoading True if all classes have finished loading their assignment lists\r\n */\r\ndtps.renderDueToday = function (doneLoading) {\r\n    //Combine class stream arrays\r\n    var combinedStream = [];\r\n    if (dtps.classes) {\r\n        dtps.classes.forEach(course => {\r\n            if (course.assignments) {\r\n                //If course has assignments, add them to the combined stream array\r\n                course.assignments.forEach(assignment => {\r\n                    //Only assignments that are due today\r\n                    if (dtps.isToday(assignment.dueAt)) {\r\n                        combinedStream.push(assignment);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    //Sort combined stream by date\r\n    combinedStream.sort(function (a, b) {\r\n        var keyA = new Date(a.dueAt).getTime(),\r\n            keyB = new Date(b.dueAt).getTime();\r\n\r\n        // Compare the 2 dates\r\n        if (keyA > keyB) return 1;\r\n        if (keyA < keyB) return -1;\r\n        return 0;\r\n    });\r\n\r\n    //Get due today stream HTML\r\n    var combinedHTML = combinedStream.map(assignment => {\r\n        return dtps.renderAssignment(assignment);\r\n    }).join(\"\");\r\n\r\n    if (combinedStream.length == 0) {\r\n        //Nothing due today\r\n        if (doneLoading) {\r\n            combinedHTML = `<p style=\"text-align: center;margin: 10px 25px 10px 75px; font-size: 18px;\"><i class=\"material-icons\">done</i> Nothing due today</p>`;\r\n        } else {\r\n            combinedHTML = ``;\r\n        }\r\n    } else {\r\n        //Add header\r\n        combinedHTML = /*html*/`\r\n            <h5 style=\"text-align: center; margin: 10px 25px 10px 75px; font-weight: bold;\">Due today</h5>\r\n        ` + combinedHTML;\r\n    }\r\n\r\n    if (dtps.selectedClass == \"dash\") {\r\n        jQuery(\".classContent .dash .dueToday\").html(combinedHTML);\r\n    }\r\n}\r\n\r\n/**\r\n * Compiles and displays upcoming assignments stream\r\n */\r\ndtps.renderUpcoming = function () {\r\n    //Combine class stream arrays\r\n    var combinedStream = [];\r\n    if (dtps.classes) {\r\n        dtps.classes.forEach(course => {\r\n            if (course.assignments) {\r\n                //If course has assignments, add them to the combined stream array\r\n                course.assignments.forEach(assignment => {\r\n                    //Only include upcoming assignments that aren't due today\r\n                    if ((new Date(assignment.dueAt) > new Date()) && !dtps.isToday(assignment.dueAt)) {\r\n                        combinedStream.push(assignment);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    //Sort combined stream by date\r\n    combinedStream.sort(function (a, b) {\r\n        var keyA = new Date(a.dueAt).getTime(),\r\n            keyB = new Date(b.dueAt).getTime();\r\n\r\n        // Compare the 2 dates\r\n        if (keyA > keyB) return 1;\r\n        if (keyA < keyB) return -1;\r\n        return 0;\r\n    });\r\n\r\n    //Render upcoming assignments stream\r\n    var combinedHTML = combinedStream.map(assignment => {\r\n        return dtps.renderAssignment(assignment);\r\n    }).join(\"\");\r\n\r\n    //No upcoming assignments\r\n    if (combinedStream.length == 0) {\r\n        combinedHTML = \"\";\r\n    }\r\n\r\n    if (dtps.selectedClass == \"dash\") {\r\n        jQuery(\".classContent .dash .assignmentStream\").html(combinedHTML);\r\n    }\r\n}\r\n\r\n/**\r\n * Renders updates stream (recently graded & announcements)\r\n */\r\ndtps.renderUpdates = function () {\r\n    //Get updates HTML\r\n    var updatesHTML = \"\";\r\n\r\n    dtps.updates.forEach(update => {\r\n        if (update.type == \"announcement\") {\r\n            updatesHTML += /*html*/`\r\n                <div onclick=\"$(this).toggleClass('open');\" style=\"cursor: pointer; padding: 20px; --classColor: ${dtps.classes[update.class].color};\" class=\"announcement card\">\r\n                    <div class=\"className\">${update.title}</div>\r\n                    ${update.body}\r\n                </div>\r\n            `;\r\n        } else if (update.type == \"assignment\") {\r\n            var scoreHTML = dtps.renderAssignmentScore(update);\r\n            updatesHTML += /*html*/`\r\n                <div onclick=\"dtps.assignment('${update.id}', ${update.class})\" style=\"--classColor: ${dtps.classes[update.class].color};\" class=\"card recentGrade\">\r\n                    <h5>\r\n                        <span>${update.title}</span>\r\n\r\n                        <!-- Points display -->\r\n                        ${scoreHTML ? `<div class=\"points\">${scoreHTML}</div>` : ``}\r\n                    </h5>\r\n\r\n                    <p>Graded at ${dtps.formatDate(update.gradedAt)}</p>\r\n                </div>\r\n            `;\r\n        }\r\n    })\r\n\r\n    if (dtps.selectedClass == \"dash\") {\r\n        jQuery(\".classContent .dash .updatesStream\").html(updatesHTML);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Compiles and displays the assignment calendar\r\n */\r\ndtps.calendar = function () {\r\n    if (dtps.selectedClass == \"dash\") {\r\n        //Calendar events array\r\n        var calEvents = [];\r\n\r\n        //Add assignments from every class to calEvents array\r\n        dtps.classes.forEach((course, courseIndex) => {\r\n            if (course.assignments) {\r\n                //Class has assignments\r\n                course.assignments.forEach(assignment => {\r\n                    calEvents.push({\r\n                        title: assignment.title,\r\n                        start: moment(new Date(assignment.dueAt)).toISOString(true),\r\n                        allDay: false,\r\n                        color: course.color,\r\n                        classNum: courseIndex,\r\n                        assignmentID: assignment.id\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n        //Render calendar\r\n        if ($.fullCalendar !== undefined) {\r\n            $('#calendar').fullCalendar({\r\n                events: calEvents,\r\n                header: {\r\n                    left: 'title',\r\n                    right: 'prev,next'\r\n                },\r\n                eventClick: function (calEvent, jsEvent, view) {\r\n                    dtps.assignment(calEvent.assignmentID, calEvent.classNum);\r\n                },\r\n                eventAfterAllRender: function () {\r\n                    $(\".fc-prev-button\").html(`<i class=\"material-icons\">keyboard_arrow_left</i>`);\r\n                    $(\".fc-next-button\").html(`<i class=\"material-icons\">keyboard_arrow_right</i>`);\r\n                }\r\n            });\r\n        }\r\n        $(\".fc-prev-button\").html(`<i class=\"material-icons\">keyboard_arrow_left</i>`);\r\n        $(\".fc-next-button\").html(`<i class=\"material-icons\">keyboard_arrow_right</i>`);\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Shows the assignments stream for a class\r\n * \r\n * @param {string} classID The class ID to show assignments for\r\n * @param {Assignment[]} [searchResults] An array of assignemnts to render instead of course.assignments. Used for assignment search.\r\n * @param {string} [searchText] Text to render in the search box. Used for assignment search.\r\n */\r\ndtps.classStream = function (classID, searchResults, searchText) {\r\n    //Get class index and set as selected class\r\n    var classNum = dtps.classes.map(course => course.id).indexOf(classID);\r\n    dtps.selectedClass = classNum;\r\n\r\n    //Set stream as the selected content\r\n    dtps.selectedContent = \"stream\";\r\n    $(\"#dtpsTabBar .btn\").removeClass(\"active\");\r\n    $(\"#dtpsTabBar .btn.stream\").addClass(\"active\");\r\n\r\n    //Load class color, name, etc.\r\n    dtps.presentClass(classNum);\r\n\r\n    //Ensure classes are shown in the sidebar\r\n    dtps.showClasses();\r\n\r\n    if (classNum == -1) {\r\n        //Class does not exist\r\n        dtps.error(\"The selected class doesn't exist\", \"classNum check failed @ dtps.classStream\");\r\n    }\r\n\r\n    //Use search results to render or render all class assignments\r\n    var assignments = searchResults || dtps.classes[classNum].assignments;\r\n\r\n    //Render assignments\r\n    if (!assignments) {\r\n        //Assignments are still loading\r\n        if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"stream\")) {\r\n            jQuery(\".classContent\").html(dtps.renderClassTools(classNum, \"stream\", searchText) + `<div class=\"spinner\"></div>`);\r\n        }\r\n    } else if (assignments.length == 0) {\r\n        if (searchText) {\r\n            //No search results\r\n            if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"stream\")) {\r\n                $(\".classContent\").html(/*html*/ dtps.renderClassTools(classNum, \"stream\", searchText) + `\r\n                    <div style=\"cursor: auto;\" class=\"card assignment\">\r\n                        <h4>No results</h4>\r\n                        <p>There weren't any search results</p>\r\n                        <button onclick=\"fluid.screen()\" class=\"btn\"><i class=\"material-icons\">arrow_back</i> Back</button>\r\n                    </div>\r\n                `);\r\n            }\r\n        } else {\r\n            //This class doesn't have any assignments\r\n            if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"stream\")) {\r\n                $(\".classContent\").html(dtps.renderClassTools(classNum, \"stream\", searchText) + `<div style=\"cursor: auto;\" class=\"card assignment\"><h4>No assignments</h4><p>There aren't any assignments in this class yet</p></div>`);\r\n            }\r\n        }\r\n    } else {\r\n        //Sort assignments\r\n        assignments.sort(function (a, b) {\r\n            var keyA = new Date(a.dueAt).getTime(),\r\n                keyB = new Date(b.dueAt).getTime();\r\n\r\n            var now = new Date().getTime();\r\n\r\n            //Put assignments without a due date at the end\r\n            if (!a.dueAt) { keyA = 0; }\r\n            if (!b.dueAt) { keyB = 0; }\r\n\r\n            //Put upcoming assignments at the top\r\n            if ((keyA < now) || (keyB < now)) {\r\n                // Sort upcoming assignments from earliest -> latest\r\n                if (keyA < keyB) return 1;\r\n                if (keyA > keyB) return -1;\r\n                return 0;\r\n            } else {\r\n                // Sort old assignments from latest -> earliest\r\n                if (keyA > keyB) return 1;\r\n                if (keyA < keyB) return -1;\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        //Render assignments\r\n        var prevAssignment = null;\r\n        var streamHTML = assignments.map(assignment => {\r\n            var divider = \"\";\r\n\r\n            if (!assignment.dueAt) {\r\n                if (prevAssignment && (prevAssignment !== \"undated\")) {\r\n                    divider = `<h5 style=\"margin: 75px 75px 10px 75px;font-weight: bold;\">Undated Assignments</h5>`;\r\n                }\r\n\r\n                prevAssignment = \"undated\";\r\n            } else if (new Date(assignment.dueAt) < new Date()) {\r\n                if (prevAssignment && (prevAssignment !== \"old\")) {\r\n                    divider = `<h5 style=\"margin: 75px 75px 10px 75px;font-weight: bold;\">Old Assignments</h5>`;\r\n                }\r\n\r\n                prevAssignment = \"old\";\r\n            } else {\r\n                prevAssignment = \"upcoming\";\r\n            }\r\n\r\n            return divider + dtps.renderAssignment(assignment);\r\n        }).join(\"\");\r\n\r\n        //Add stream header with class info buttons and search box\r\n        streamHTML = dtps.renderClassTools(classNum, \"stream\", searchText) + streamHTML;\r\n\r\n        if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"stream\")) {\r\n            $(\".classContent\").html(streamHTML);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Shows details for an assignment given the assignment ID and class number\r\n * \r\n * @param {string} id Assignment ID\r\n * @param {number} classNum Assignment class number\r\n */\r\ndtps.assignment = function (id, classNum) {\r\n    //Get assignment from the id prop\r\n    var assignmentIDs = dtps.classes[classNum].assignments.map(assignment => assignment.id);\r\n    var assignment = dtps.classes[classNum].assignments[assignmentIDs.indexOf(id)];\r\n\r\n    //The assignment body is rendered in an iFrame to keep its content and styling isolated from the rest of the page\r\n    var assignmentBodyURL = null;\r\n    if (assignment.body) {\r\n        //Get computed background and text color to style the iFrame with\r\n        var computedBackgroundColor = getComputedStyle($(\".card.details\")[0]).getPropertyValue(\"--cards\");\r\n        var computedTextColor = getComputedStyle($(\".card.details\")[0]).getPropertyValue(\"--text\");\r\n\r\n        //Generate a blob with the assignment body and get its data URL\r\n        var blob = new Blob([`\r\n                <base target=\"_blank\" /> \r\n                <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jottocraft.com/CanvasCSS.css\" media=\"screen,projection\"/>\r\n                <style>body {background-color: ${computedBackgroundColor}; color: ${computedTextColor};</style>\r\n                ${assignment.body}\r\n            `], { type: 'text/html' });\r\n        assignmentBodyURL = window.URL.createObjectURL(blob);\r\n    }\r\n\r\n    //Get assignment rubric HTML\r\n    var assignmentRubricHTML = \"\";\r\n    if (assignment.rubric) {\r\n        var assignmentRubricHTML = assignment.rubric.map(function (rubricItem) {\r\n            return /*html*/`\r\n                    <div class=\"dtpsAssignmentRubricItem\">\r\n                        <h5>${rubricItem.title}</h5>\r\n                        <div class=\"score\">\r\n                            <p style=\"color: ${rubricItem.color ? rubricItem.color : \"var(--secText)\"};\" class=\"scoreName\">\r\n                                ${rubricItem.score ? rubricItem.scoreName || \"\" : \"Not assessed\"}\r\n\r\n                                <div class=\"points\">\r\n                                    <p class=\"earned\">${rubricItem.score || \"-\"}</p>\r\n                                    <p class=\"possible\">${\"/\" + rubricItem.value}</p>\r\n                                </div>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                `\r\n        }).join(\"\");\r\n    }\r\n\r\n    //Get assignment feedback HTML\r\n    var assignmentFeedbackHTML = \"\";\r\n    if (assignment.feedback) {\r\n        var assignmentFeedbackHTML = assignment.feedback.map(feedback => {\r\n            return /*html*/`\r\n                    <div class=\"dtpsSubmissionComment\">\r\n                        ${feedback.author ? /*html*/`\r\n                            <img src=\"${feedback.author.photoURL}\" />\r\n                            <h5>${feedback.author.name}</h5>\r\n                        ` : ``}\r\n\r\n                        <p>${feedback.comment}</p>\r\n                    </div>\r\n                `\r\n        }).join(\"\");\r\n    }\r\n\r\n    //Get assignment score HTML\r\n    var scoreHTML = dtps.renderAssignmentScore(assignment);\r\n\r\n    //Render assignment details\r\n    $(\".card.details\").html(/*html*/`\r\n            <i onclick=\"fluid.cards.close('.card.details'); $('.card.details').html('');\" class=\"material-icons close\">close</i>\r\n\r\n            <h4 style=\"font-weight: bold;\">${assignment.title}</h4>\r\n\r\n            <div>\r\n                ${assignment.dueAt ? `<div class=\"assignmentChip\"><i class=\"material-icons\">alarm</i><span>Due ${dtps.formatDate(assignment.dueAt)}</span></div>` : \"\"}\r\n                ${assignment.turnedIn ? `<div title=\"Assignment submitted\" class=\"assignmentChip\" style=\"color: #0bb75b\"><i class=\"material-icons\">assignment_turned_in</i></div>` : \"\"}\r\n                ${assignment.missing ? `<div  title=\"Assignment is missing\" class=\"assignmentChip\" style=\"color: #c44848\"><i class=\"material-icons\">remove_circle_outline</i></div>` : \"\"}\r\n                ${assignment.late ? `<div title=\"Assignment is late\" class=\"assignmentChip\" style=\"color: #c44848\"><i class=\"material-icons\">assignment_late</i></div>` : \"\"}\r\n                ${assignment.locked ? `<div title=\"Assignment submissions are locked\" class=\"assignmentChip\" style=\"color: var(--secText, gray);\"><i style=\"font-family: 'Material Icons Extended';\" class=\"material-icons\">lock_outline</i></div>` : \"\"}\r\n                ${scoreHTML}\r\n            </div>\r\n\r\n            <div style=\"margin-top: 20px;\" class=\"assignmentBody\">\r\n                ${assignment.body ? `<iframe id=\"assignmentIframe\" onload=\"dtps.iframeLoad('assignmentIframe')\" style=\"margin: 10px 0px; width: 100%; border: none; outline: none;\" src=\"${assignmentBodyURL}\" />` : \"\"}\r\n            </div>\r\n\r\n            ${assignment.body ? `<div style=\"margin: 5px 0px; background-color: var(--darker); height: 1px; width: 100%;\" class=\"divider\"></div>` : \"\"}\r\n\r\n            <div style=\"width: calc(40% - 2px); margin-top: 20px; display: inline-block; overflow: hidden; vertical-align: top;\">\r\n                ${assignment.publishedAt ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"material-icons\">add_box</i> Published: ${dtps.formatDate(assignment.publishedAt)}</p>` : \"\"}\r\n                ${assignment.dueAt ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"material-icons\">alarm</i> Due: ${dtps.formatDate(assignment.dueAt)}</p>` : \"\"}\r\n                ${assignment.value ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"material-icons\">bar_chart</i> Point value: ${assignment.value}</p>` : \"\"}\r\n                ${(assignment.grade || (assignment.grade == 0)) ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"material-icons\">assessment</i> Points earned: ${assignment.grade}</p>` : \"\"}\r\n                ${assignment.letter ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"material-icons\">font_download</i> Letter grade: ${assignment.letter}</p>` : \"\"}\r\n                ${assignment.category ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"material-icons\">category</i> Category: ${assignment.category}</p>` : \"\"}\r\n                ${assignment.rubric ? assignment.rubric.map(function (rubricItem) { return `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"material-icons\">adjust</i> ${rubricItem.title}</p>`; }).join(\"\") : \"\"}\r\n                <p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"material-icons\">class</i> Class: ${dtps.classes[assignment.class].subject}</p>\r\n                ${dtps.env == \"dev\" ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"material-icons\">code</i> Assignment ID: ${assignment.id}</p>` : \"\"}\r\n\r\n                <br />\r\n                <div class=\"row\">\r\n                    ${assignment.url ? `<div class=\"btn small outline\" onclick=\"window.open('${assignment.url}')\"><i class=\"material-icons\">open_in_new</i> Open in ${dtpsLMS.shortName || dtpsLMS.name}</div>` : ``}\r\n                </div>\r\n            </div>\r\n\r\n            <div style=\"width: calc(60% - 7px); margin-top: 20px; margin-left: 5px; display: inline-block; overflow: hidden; vertical-align: middle;\">\r\n                ${assignmentFeedbackHTML}\r\n\r\n                ${assignmentRubricHTML}\r\n            </div>\r\n        `);\r\n\r\n    //Close other active cards and open the assignment details card\r\n    fluid.cards.close(\".card.focus\");\r\n    fluid.modal(\".card.details\");\r\n}\r\n\r\n/**\r\n * Searches the assignment stream for a keyword using Fuse.js\r\n */\r\ndtps.search = function () {\r\n    if ($(\"input.search\").val() == \"\") {\r\n        fluid.screen();\r\n    } else {\r\n        var input = $(\"input.search\").val();\r\n        var search = new Fuse(dtps.classes[dtps.selectedClass].assignments, {\r\n            keys: [\"title\", \"body\"]\r\n        });\r\n        dtps.classStream(dtps.classes[dtps.selectedClass].id, search.search(input), input);\r\n    }\r\n}\r\n\r\n/**\r\n * Shows the module stream for a class\r\n * \r\n * @param {string} classID Class number to fetch modules for\r\n */\r\ndtps.moduleStream = function (classID) {\r\n    //Get class index and set as selected class\r\n    var classNum = dtps.classes.map(course => course.id).indexOf(classID);\r\n    dtps.selectedClass = classNum;\r\n\r\n    //Set stream as the selected content\r\n    dtps.selectedContent = \"moduleStream\";\r\n    $(\"#dtpsTabBar .btn\").removeClass(\"active\");\r\n    $(\"#dtpsTabBar .btn.stream\").addClass(\"active\");\r\n\r\n    //Load class color, name, etc.\r\n    dtps.presentClass(classNum);\r\n\r\n    //Ensure classes are shown in the sidebar\r\n    dtps.showClasses();\r\n\r\n    if (classNum == -1) {\r\n        //Class does not exist\r\n        dtps.error(\"The selected class doesn't exist\", \"classNum check failed @ dtps.moduleStream\");\r\n    }\r\n\r\n    //Show loading indicator\r\n    if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"moduleStream\")) {\r\n        jQuery(\".classContent\").html(dtps.renderClassTools(classNum, \"modules\") + `<div class=\"spinner\"></div>`);\r\n    }\r\n\r\n    new Promise(resolve => {\r\n        if (dtps.classes[classNum].modules && (dtps.classes[classNum].modules !== true)) {\r\n            resolve(dtps.classes[classNum].modules);\r\n        } else {\r\n            dtpsLMS.fetchModules(dtps.classes[classNum].id).then(data => resolve(data));\r\n        }\r\n    }).then(data => {\r\n        //Save modules data in the class object for future use\r\n        dtps.classes[classNum].modules = data;\r\n\r\n        var modulesHTML = dtps.renderClassTools(classNum, \"modules\");\r\n\r\n        data.forEach(module => {\r\n            var moduleItemHTML = \"\";\r\n\r\n            //Get HTML for each module item\r\n            module.items.forEach(item => {\r\n                //Get module item icon\r\n                var icon = \"list\";\r\n                if (item.type == \"assignment\") icon = \"assignment\";\r\n                if (item.type == \"page\") icon = \"insert_drive_file\";\r\n                if (item.type == \"discussion\") icon = \"forum\";\r\n                if (item.type == \"url\") icon = \"open_in_new\";\r\n                if (item.type == \"header\") icon = \"format_size\";\r\n                if (item.type == \"embed\") icon = \"web\";\r\n\r\n                //Get module action\r\n                var action = \"\";\r\n                if (item.type == \"assignment\") action = \"dtps.assignment('\" + item.id + \"', \" + classNum + \")\";\r\n                if (item.type == \"page\") {\r\n                    if (dtps.classes[classNum].pages) {\r\n                        action = \"fluid.screen('pages', '\" + classID + \"|\" + item.id + \"')\";\r\n                    } else {\r\n                        action = \"window.open('\" + item.url + \"')\";\r\n                    }                 \r\n                }  \r\n                if (item.type == \"discussion\") {\r\n                    if (dtps.classes[classNum].discussions) {\r\n                        action = \"fluid.screen('discussions', '\" + classID + \"|\" + item.id + \"')\";\r\n                    } else {\r\n                        action = \"window.open('\" + item.url + \"')\";\r\n                    }\r\n                }\r\n                if (item.type == \"url\") action = \"window.open('\" + item.url + \"')\";\r\n                if (item.type == \"header\") action = \"\";\r\n                if (item.type == \"embed\") action = \"dtps.showIFrameCard('\" + item.url + \"')\";\r\n\r\n                //Get module HTML\r\n                if (item.type == \"header\") {\r\n                    moduleItemHTML += `<h5 style=\"font-size: 22px;padding: 2px 10px;\">${item.title}</h5>`;\r\n                } else {\r\n                    moduleItemHTML += `\r\n                        <div class=\"moduleItem\" onclick=\"${action}\" style=\"margin-left: ${item.indent * 15}px;\">\r\n                            <i class=\"material-icons\">${icon}</i>\r\n                            ${item.title}\r\n                        </div>\r\n                    `;\r\n                }\r\n            });\r\n\r\n            //Add HTML for this module to the string\r\n            modulesHTML += /*html*/`\r\n                <div class=\"module card ${module.collapsed ? \"collapsed\" : \"\"}\">\r\n                    <h4>\r\n                        <i onclick=\"dtps.moduleCollapse(this, '${dtps.classes[classNum].id}', '${module.id}');\" \r\n                            class=\"material-icons collapseIcon\">${module.collapsed ? \"keyboard_arrow_right\" : \"keyboard_arrow_down\"}</i>\r\n                        ${module.title}\r\n                    </h4>\r\n\r\n                    <div class=\"moduleContents\" style=\"padding-top: 10px;\">\r\n                        ${moduleItemHTML}\r\n                    </div>\r\n                </div>\r\n            `;\r\n        });\r\n\r\n        if (data.length == 0) {\r\n            modulesHTML += `<div style=\"cursor: auto;\" class=\"card assignment\"><h4>No modules</h4><p>There aren't any modules in this class yet</p></div>`;\r\n        }\r\n\r\n        //Render module HTML\r\n        if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"moduleStream\")) {\r\n            jQuery(\".classContent\").html(modulesHTML);\r\n        }\r\n    }).catch(err => {\r\n        dtps.error(\"Could not load modules\", \"Caught promise rejection @ dtps.moduleStream\", err);\r\n    });\r\n}\r\n\r\n/**\r\n * Collapses a module\r\n * \r\n * @param {Element} ele Element of the module collapse arrow\r\n * @param {string} classID Class ID\r\n * @param {string} modID Module ID of the module to collapse\r\n */\r\ndtps.moduleCollapse = function (ele, classID, modID) {\r\n    //Add collapsed class to module card\r\n    $(ele).parents('.card').toggleClass('collapsed');\r\n\r\n    //Update arrow icon and, if the LMS supports it, collapse the module in the LMS as well\r\n    if ($(ele).parents('.card').hasClass('collapsed')) {\r\n        if (dtpsLMS.collapseModule) dtpsLMS.collapseModule(classID, modID, true);\r\n        $(ele).html('keyboard_arrow_right');\r\n    } else {\r\n        if (dtpsLMS.collapseModule) dtpsLMS.collapseModule(classID, modID, false);\r\n        $(ele).html('keyboard_arrow_down');\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Gets stream tools HTML (search box, class info, and modules/assignment switcher)\r\n * \r\n * @param {number} num Class number\r\n * @param {string} type Class content these tools are for (e.g. \"stream\")\r\n * @param {string} [searchText] Text to render in the search box for assignment search\r\n * @return {string} Stream tools HTML\r\n */\r\ndtps.renderClassTools = function (num, type, searchText) {\r\n    var modulesSelector = dtps.classes[num].modules;\r\n    return /*html*/`\r\n        <div style=\"position: absolute;display:inline-block;margin: ${modulesSelector ? \"82px\" : \"38px 82px\"};\">\r\n\r\n            ${dtps.classes[num].teacher ? /*html*/`\r\n                <div class=\"acrylicMaterial\" style=\"border-radius: 20px; display: inline-block; margin-right: 5px;\">\r\n                    <img src=\"${dtps.classes[num].teacher.photoURL}\" style=\"width: 40px; height: 40px; border-radius: 50%;vertical-align: middle;\"> \r\n                    <div style=\"font-size: 16px;display: inline-block;vertical-align: middle;margin: 0px 10px;\">${dtps.classes[num].teacher.name}</div>\r\n                </div>` : ``\r\n        }\r\n\r\n            <div onclick=\"dtps.classInfo(${num})\" class=\"acrylicMaterial\" style=\"border-radius: 50%; height: 40px; width: 40px; text-align: center; display: inline-block; vertical-align: middle; cursor: pointer; margin-right: 3px;\">\r\n                <i style=\"line-height: 40px;\" class=\"material-icons\">info</i>\r\n            </div>\r\n\r\n            ${dtps.classes[num].homepage ? /*html*/`\r\n                <div onclick=\"dtps.classHome(${num})\" class=\"acrylicMaterial\" style=\"border-radius: 50%; height: 40px; width: 40px; text-align: center; display: inline-block; vertical-align: middle; cursor: pointer; margin-right: 3px;\">\r\n                    <i style=\"line-height: 40px;\" class=\"material-icons\">home</i>\r\n                </div>` : \"\"\r\n        }\r\n\r\n        ${dtps.classes[num].videoMeetingURL ? /*html*/`\r\n                <div onclick=\"window.open('${dtps.classes[num].videoMeetingURL}')\" class=\"acrylicMaterial\" style=\"border-radius: 50%; height: 40px; width: 40px; text-align: center; display: inline-block; vertical-align: middle; cursor: pointer; margin-right: 3px;\">\r\n                    <i style=\"line-height: 40px;\" class=\"material-icons\">videocam</i>\r\n                </div>` : \"\"\r\n        }\r\n\r\n        </div>\r\n        \r\n        ${(type == \"modules\") || (type == \"stream\") ? /*html*/`\r\n            <div style=\"text-align: right;${modulesSelector ? \"\" : \"margin-top: 20px;\"}\">\r\n\r\n                ${type == \"stream\" ? `<i class=\"inputIcon material-icons\">search</i><input ${searchText ? `value=\"${searchText}\"` : ``} onchange=\"dtps.search()\" class=\"search inputIcon filled shadow\" placeholder=\"Search assignments\" type=\"search\" />` : \"\"}\r\n\r\n                <br />\r\n                ${modulesSelector ? /*html*/`\r\n                    <div class=\"btns row small acrylicMaterial assignmentPicker\" style=\"margin: ${type == \"stream\" ? `20px 80px 20px 0px !important` : `63px 80px 20px 0px !important`};\">\r\n                        <button class=\"btn ${type == \"stream\" ? \"active\" : \"\"}\" onclick=\"fluid.screen('stream', dtps.classes[dtps.selectedClass].id);\"><i class=\"material-icons\">assignment</i>Assignments</button>\r\n                        <button class=\"btn ${type == \"modules\" ? \"active\" : \"\"}\" onclick=\"fluid.screen('moduleStream', dtps.classes[dtps.selectedClass].id);\"><i class=\"material-icons\">view_module</i>Modules</button>\r\n                    </div>\r\n                ` : ``}\r\n                \r\n            </div>` : ``\r\n        }\r\n    `;\r\n}\r\n\r\n/**\r\n * Displays class info & syllabus card\r\n * \r\n * @param {number} num Class number to show info for\r\n */\r\ndtps.classInfo = function (num) {\r\n    //Get syllabus blob if the class has a syllabus\r\n    if ((dtps.classes[num].syllabus !== \"\") && dtps.classes[num].syllabus !== null) {\r\n        //Get computed background and text color to style the iFrame with\r\n        var computedBackgroundColor = getComputedStyle($(\".card.details\")[0]).getPropertyValue(\"--cards\");\r\n        var computedTextColor = getComputedStyle($(\".card.details\")[0]).getPropertyValue(\"--text\");\r\n\r\n        //Generate a blob with the assignment body and get its data URL\r\n        var blob = new Blob([`\r\n            <base target=\"_blank\" /> \r\n            <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jottocraft.com/CanvasCSS.css\" media=\"screen,projection\"/>\r\n            <style>body {background-color: ${computedBackgroundColor}; color: ${computedTextColor};</style>\r\n            ${dtps.classes[num].syllabus}\r\n        `], { type: 'text/html' });\r\n        var syllabusURL = window.URL.createObjectURL(blob);\r\n    }\r\n\r\n    //Show class info HTML\r\n    $(\".card.details\").html(/*html*/`\r\n        <i onclick=\"fluid.cards.close('.card.details')\" class=\"material-icons close\">close</i>\r\n\r\n        <h4 style=\"font-weight: bold;\">${dtps.classes[num].name}</h4>\r\n        <p style=\"color: var(--secText)\">${dtps.classes[num].description || \"\"}</p>\r\n\r\n        ${dtps.classes[num].numStudents ? `<div class=\"assignmentChip\"><i class=\"material-icons\">group</i><span>${dtps.classes[num].numStudents} students</span></div>` : ``}\r\n        ${dtps.env == \"dev\" ? `<div class=\"assignmentChip\"><i class=\"material-icons\">code</i><span>Class ID: ${dtps.classes[num].id}</span></div>` : ``}\r\n    \r\n        <br />\r\n\r\n        <div style=\"margin-top: 20px;\" class=\"syllabusBody\">\r\n            ${dtps.classes[num].syllabus ? `\r\n                <iframe id=\"syllabusIframe\" onload=\"dtps.iframeLoad('syllabusIframe')\" style=\"margin: 10px 0px; width: 100%; border: none; outline: none;\" src=\"${syllabusURL}\" />` : \"\"}\r\n        </div>\r\n    `)\r\n\r\n    //Show the class info card\r\n    fluid.modal(\".card.details\")\r\n}\r\n\r\n/**\r\n * Displays the class homepage\r\n * \r\n * @param {number} num Class number to show the homepage for\r\n */\r\ndtps.classHome = function (num) {\r\n    //Render loading screen\r\n    $(\".card.details\").html(/*html*/`\r\n        <i onclick=\"fluid.cards.close('.card.details')\" class=\"material-icons close\">close</i>\r\n        <h4 style=\"font-weight: bold;\">${dtps.classes[num].subject} Homepage</h4>\r\n\r\n        <br />\r\n        <p>Loading...</p>\r\n    `);\r\n\r\n    //Fetch homepage from the LMS\r\n    dtpsLMS.fetchHomepage(dtps.classes[num].id).then(homepage => {\r\n        if (homepage) {\r\n            //Get computed background and text color to style the iFrame with\r\n            var computedBackgroundColor = getComputedStyle($(\".card.details\")[0]).getPropertyValue(\"--cards\");\r\n            var computedTextColor = getComputedStyle($(\".card.details\")[0]).getPropertyValue(\"--text\");\r\n\r\n            //Generate a blob with the assignment body and get its data URL\r\n            var blob = new Blob([`\r\n                <base target=\"_blank\" /> \r\n                <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jottocraft.com/CanvasCSS.css\" media=\"screen,projection\"/>\r\n                <style>body {background-color: ${computedBackgroundColor}; color: ${computedTextColor};</style>\r\n                ${homepage}\r\n            `], { type: 'text/html' });\r\n            var homepageURL = window.URL.createObjectURL(blob);\r\n\r\n            $(\".card.details\").html(/*html*/`\r\n                <i onclick=\"fluid.cards.close('.card.details')\" class=\"material-icons close\">close</i>\r\n\r\n                <h4 style=\"font-weight: bold;\">${dtps.classes[num].subject} Homepage</h4>\r\n\r\n                <br />\r\n                <div style=\"margin-top: 20px;\" class=\"homepageBody\">\r\n                    <iframe id=\"homepageIframe\" onload=\"dtps.iframeLoad('homepageIframe')\" style=\"margin: 10px 0px; width: 100%; border: none; outline: none;\" src=\"${homepageURL}\" />\r\n                </div>\r\n            `);\r\n\r\n            fluid.modal(\".card.details\");\r\n        } else {\r\n            fluid.cards.close('.card.details');\r\n            dtps.error(\"Homepage unavailable\", \"homepage is either empty or undefined @ dtps.classHome\");\r\n        }\r\n    }).catch(e => {\r\n        dtps.error(\"Couldn't load homepage\", \"Caught a promise rejection @ dtps.classHome\", e);\r\n    })\r\n}\r\n\r\n/**\r\n * Shows the generic gradebook\r\n * \r\n * @param {string} classID Class ID\r\n */\r\ndtps.gradebook = function (classID) {\r\n    //Get class index and set as selected class\r\n    var classNum = dtps.classes.map(course => course.id).indexOf(classID);\r\n    dtps.selectedClass = classNum;\r\n\r\n    //Set stream as the selected content\r\n    dtps.selectedContent = \"grades\";\r\n    $(\"#dtpsTabBar .btn\").removeClass(\"active\");\r\n    $(\"#dtpsTabBar .btn.grades\").addClass(\"active\");\r\n\r\n    //Load class color, name, etc.\r\n    dtps.presentClass(classNum);\r\n\r\n    //Ensure classes are shown in the sidebar\r\n    dtps.showClasses();\r\n\r\n    if (classNum == -1) {\r\n        //Class does not exist\r\n        dtps.error(\"The selected class doesn't exist\", \"classNum check failed @ dtps.gradebook\");\r\n    }\r\n\r\n    //Show loading indicator\r\n    if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"grades\")) {\r\n        jQuery(\".classContent\").html(`<div class=\"spinner\"></div>`);\r\n    }\r\n\r\n    //Terminate function if the class doesn't have a letter grade or assignments\r\n    if (!dtps.classes[classNum].letter || !dtps.classes[classNum].assignments) {\r\n        return;\r\n    }\r\n\r\n    //Define variables for total points and zeros\r\n    var zeros = 0;\r\n    var totalPoints = 0;\r\n    var earnedPoints = 0;\r\n    var gradedAssignments = 0;\r\n\r\n    //Define variable for assignment HTML string\r\n    var assignmentHTML = \"\";\r\n\r\n    //Calculate total points and zeros\r\n    dtps.classes[classNum].assignments.forEach(assignment => {\r\n        if (assignment.grade || (assignment.grade == 0)) {\r\n            earnedPoints += assignment.grade;\r\n            gradedAssignments++;\r\n\r\n            assignmentHTML += /*html*/`\r\n                <div onclick=\"dtps.assignment('${assignment.id}', ${classNum})\" class=\"gradebookAssignment card\">\r\n                    <h5>\r\n                        ${assignment.title}\r\n\r\n                        <div class=\"stats\">\r\n                            ${assignment.letter ? `<div class=\"gradebookLetter\">${assignment.letter}</div>` : \"\"}\r\n                            <div class=\"gradebookScore\">${assignment.grade}</div>\r\n                            <div class=\"gradebookValue\">/${assignment.value}</div>\r\n                            <div class=\"gradebookPercentage\">${Math.round((assignment.grade / assignment.value) * 100)}%</div>\r\n                        </div>\r\n                    </h5>\r\n                </div>\r\n            `;\r\n        }\r\n\r\n        if (assignment.value) {\r\n            totalPoints += assignment.value;\r\n        }\r\n\r\n        if ((assignment.grade == 0) && assignment.value) {\r\n            zeros++;\r\n        }\r\n    })\r\n\r\n    //Grade calculation summary\r\n    var gradeCalcSummary = /*html*/`\r\n        <div style=\"--classColor: ${dtps.classes[classNum].color}\" class=\"card\">\r\n            <h3 class=\"gradeTitle\">\r\n                Grade Summary\r\n                <div class=\"classGradeCircle\">\r\n                    ${dtps.classes[classNum].grade ? `<span class=\"percentage\">${dtps.classes[classNum].grade}%</span>` : ``}\r\n                    <div class=\"letter\">${dtps.classes[classNum].letter || ``}</div>\r\n                </div>\r\n            </h3>\r\n\r\n            ${zeros ? /*html*/`\r\n                <h5 style=\"color: #d63d3d;\" class=\"gradeStat\">\r\n                    Zeros\r\n                    <div style=\"color: #d63d3d;\" class=\"numFont\">${zeros}</div>\r\n                </h5>\r\n            ` : ``}\r\n\r\n            <div style=\"${dtps.gradebookExpanded ? \"\" : \"display: none;\"}\" id=\"classGradeMore\">\r\n                <br />\r\n\r\n                ${dtps.classes[classNum].previousLetter ? /*html*/`\r\n                    <h5 class=\"smallStat\">\r\n                        Previous Grade\r\n                        <div class=\"numFont\">${dtps.classes[classNum].previousLetter}</div>\r\n                    </h5>\r\n                ` : ``}\r\n\r\n                <h5 class=\"smallStat\">\r\n                    Points\r\n                    <div class=\"numFont fraction\">\r\n                        <span class=\"earned\">${earnedPoints}</span>\r\n                        <span class=\"total\">/${totalPoints}</span>\r\n                    </div>\r\n                </h5>\r\n\r\n                <h5 class=\"smallStat\">\r\n                    Graded Assignments\r\n                    <div class=\"numFont\">${gradedAssignments}</div>\r\n                </h5>\r\n            </div>\r\n\r\n            <br />\r\n            <a onclick=\"$('#classGradeMore').toggle(); if ($('#classGradeMore').is(':visible')) {$(this).html('Show less'); dtps.gradebookExpanded = true;} else {$(this).html('Show more'); dtps.gradebookExpanded = false;}\"\r\n                style=\"color: var(--secText, gray); cursor: pointer; margin-right: 10px;\">${dtps.gradebookExpanded ? \"Show less\" : \"Show more\"}</a>\r\n        </div>\r\n\r\n        <br />\r\n    `;\r\n\r\n\r\n    //Render HTML\r\n    if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"grades\")) {\r\n        $(\".classContent\").html(gradeCalcSummary + assignmentHTML);\r\n    }\r\n}\r\n\r\n//Fluid UI screen definitions\r\nfluid.externalScreens.dashboard = () => {\r\n    dtps.masterStream();\r\n}\r\n\r\nfluid.externalScreens.stream = (courseID) => {\r\n    dtps.classStream(courseID);\r\n}\r\n\r\nfluid.externalScreens.moduleStream = (courseID) => {\r\n    dtps.moduleStream(courseID);\r\n}\r\n\r\nfluid.externalScreens.gradebook = (courseID) => {\r\n    dtps.gradebook(courseID);\r\n}\r\n\r\n//Type definitions\r\n\r\n/**\r\n* @typedef {Object} Assignment\r\n* @description Defines assignments objects in DTPS\r\n* @property {string} title Title of the assignment\r\n* @property {string} [body] HTML of the assignment's body\r\n* @property {string} id Assignment ID\r\n* @property {Date} [dueAt] Assignment due date\r\n* @property {string} [url] Assignment URL\r\n* @property {AssignmentFeedback[]} [feedback] Feedback / private comments for this assignment\r\n* @property {User} [grader] Assignment grader\r\n* @property {boolean} [turnedIn] True if the assignment is turned in\r\n* @property {boolean} [late] True if the assignment is late\r\n* @property {boolean} [missing] True if the assignment is missing\r\n* @property {boolean} [locked] True if assignment submissions are locked\r\n* @property {string} [category] Assignment category\r\n* @property {Date} [publishedAt] Date for when the assignment was published\r\n* @property {Date} [gradedAt] Date for when the assignment was graded\r\n* @property {number} [grade] Points earned on this assignment\r\n* @property {string} [letter] Letter grade on this assignment\r\n* @property {number} [value] Total amount of points possible for this assignment\r\n* @property {RubricItem[]} [rubric] Assignment rubric\r\n*/\r\n\r\n/**\r\n* @typedef {Object} Module\r\n* @description Defines module objects in DTPS\r\n* @property {string} title Title of the module\r\n* @property {string} id Module ID\r\n* @property {boolean} [collapsed] True if the module is collapsed, false otherwise. undefined or null if this module does not support collapsing.\r\n* @property {ModuleItem[]} items An array of items for this module.\r\n*/\r\n\r\n/**\r\n * @typedef {Object} ModuleItem\r\n * @description Defines module items in DTPS\r\n * @property {string} type Either \"assignment\", \"page\", \"discussion\", \"url\", \"embed\", or \"header\".\r\n * @property {string} [title] Required for URL and header items, and can be used to override the title of assignment, page, and discussion items.\r\n * @property {string} [id] Required for assignment, page, and discussion items.\r\n * @property {string} [url] Required for URL and embed items. Required for discussion and page items if the class does not support the pages or discussions feature.\r\n * @property {number} [indent] Indent level\r\n */\r\n\r\n/**\r\n* @typedef {Object} Announcement\r\n* @description Defines announcement objects in DTPS\r\n* @property {string} title Title of the announcement\r\n* @property {Date} postedAt Date when the announcement was posted\r\n* @property {string} body Announcement content\r\n*/\r\n\r\n/**\r\n* @typedef {Object} AssignmentFeedback\r\n* @description Defines assignment feedback objects in DTPS\r\n* @property {string} comment Feedback comment\r\n* @property {User} [author] Feedback author\r\n*/\r\n\r\n/**\r\n* @typedef {Object} RubricItem\r\n* @description Defines rubric item objects in DTPS\r\n* @property {string} title Title of the rubric item\r\n* @property {string} id Rubric item ID (only needs to be unique to this assignment)\r\n* @property {number} value Total amount of points possible\r\n* @property {string} [outcome] The ID of the outcome this rubric item is assessing. This is only used for grade calculation.\r\n* @property {string} [description] Rubric item description\r\n* @property {number} [score] Rubric assessment score in points\r\n* @property {string} [scoreName] Rubric assessment score name\r\n* @property {string} [color] Score color in a CSS color format\r\n*/\r\n\r\n/**\r\n * @typedef {Object} DashboardItem\r\n * @description Defines dashboard items in DTPS\r\n * @property {string} name Dashbord item name\r\n * @property {string} id Unique dashboard item ID\r\n * @property {string} icon Dashboard item icon\r\n * @property {boolean} supportsCompactMode True if this dashboard item supports compact mode\r\n * @property {number} size The approximate size of this dashboard item relative to other dashboard items. Should be no less than 20.\r\n * @property {string} defaultSide The default side of this dashboard item. Either \"right\" or \"left\".\r\n * @property {boolean} compact True if the user has turned on compact mode for this item.\r\n */"]}