{"version":3,"sources":["scripts/assignments.js"],"names":["dtps","renderAssignment","assignment","childDisplay","scoreHTML","renderAssignmentScore","id","class","isNaN","classes","color","title","dueAt","dtpsLMS","isUsualDueDate","formatDate","outcomes","length","category","turnedIn","missing","late","locked","pending","useRubricGrades","rubric","rubricHTML","forEach","rubricItem","undefined","score","push","join","grade","Number","toFixed","value","letter","replace","Math","round","mergeAndRenderChildAssignments","assignments","assignmentGroups","matchedGroup","group","groupAssignment","matchKeys","matches","k","map","g","user","children","find","c","userID","name","mainStream","presentClass","showClasses","$","removeClass","ready","course","doneLoading","dashboardContainerHTML","dashboardItem","window","FullCalendar","selectedClass","jQuery","html","leftDashboard","rightDashboard","renderUpdates","renderUpcoming","calendar","renderDueToday","isDueOnDate","date","onDate","today","Date","tomorrow","getTime","d1","isActuallyTodayAfter9","getFullYear","getMonth","getDate","getHours","isTomorrowBefore9","fromDate","combinedStream","sort","a","b","keyA","keyB","parent","combinedHTML","toLocaleString","weekday","month","day","dateSelected","updatesHTML","remoteConfig","remoteUpdate","active","markdown","showdown","Converter","baseURL","makeHtml","md","updates","update","type","body","gradedAt","calEvents","courseIndex","setTime","setHours","setMinutes","existingEvent","e","borderColor","assignmentID","classNum","start","allDay","backgroundColor","textColor","calendarEl","document","getElementById","Calendar","locale","initialView","events","eventContent","info","event","extendedProps","contentHeight","handleWindowResize","headerToolbar","center","end","dateClick","dayEl","hasClass","fluid","screen","addClass","text","show","eventClick","render","classStream","classID","searchResults","indexOf","selectedContent","localStorage","setItem","error","renderStreamTools","now","prevAssignment","streamHTML","divider","generic","assignmentIDs","assignmentBodyHTML","computedBackgroundColor","getComputedStyle","getPropertyValue","computedTextColor","brightenTextForDarkMode","hasKeywords","toLowerCase","includes","get","dtech","append","sections","toArray","element","i","tmpjQuery","remove","innerHTML","icon","replaceWith","s","outerHTML","blob","Blob","URL","createObjectURL","assignmentRubricHTML","scoreName","assignmentFeedbackHTML","feedback","author","photoURL","comment","publishedAt","subject","env","url","shortName","cards","close","moduleStream","Promise","resolve","modules","fetchModules","lmsID","then","data","modulesHTML","allCollapsed","module","moduleItemHTML","collapsed","items","item","action","indent","completed","collapseAllModules","attr","catch","err","moduleCollapse","ele","modID","parents","toggleClass","collapseModule","m","moduleCollapseAll","collapse","num","modulesSelector","gradebook","zeros","totalPoints","earnedPoints","gradedAssignments","assignmentHTML","gradeCalcSummary","gradebookExpanded","previousLetter","externalScreens","dashboard","stream","courseID"],"mappings":";;;;;;;AAeAA,KAAKC,iBAAmB,SAAUC,EAAYC,GAE1C,IAAIC,EAAYJ,KAAKK,sBAAsBH,GAyC3C,MAvCmB,yCAEA,oBAAsBA,EAAWI,GAAK,MAAQJ,EAAWK,MAAQ,MAASC,MAAML,GAAgC,kCAC7GC,EAAY,oBAAsB,qCACvC,iBAAmBJ,KAAKS,QAAQP,EAAWK,OAAOG,4NAQ/CR,EAAWS,kFAGjBP,EAAY,uBAAuBA,UAAoB,sJAMnDF,EAAWU,MAAQ,QAAQC,QAAQC,iBAAmBD,QAAQC,eAAeZ,EAAWU,OAAS,gDAAkD,qFAAuFZ,KAAKe,WAAWb,EAAWU,OAAS,SAAW,2BACzRV,EAAWc,SAAW,kEAAoEd,EAAWc,SAASC,OAAS,SAAW,2BAClIf,EAAWgB,SAAW,qEAAuEhB,EAAWgB,SAAW,SAAW,2BAC9Hf,EAAe,mEAAqEA,EAAe,SAAW,wIAK9GD,EAAWiB,SAAW,iHAAmH,2BACzIjB,EAAWkB,QAAU,mHAAqH,2BAC1IlB,EAAWmB,KAAO,0GAA4G,2BAC9HnB,EAAWoB,OAAS,mIAAqI,2BACzJpB,EAAWqB,QAAU,2GAA6G,uEAexJvB,KAAKK,sBAAwB,SAAUH,GACnC,IAAIE,EAAY,GAGhB,GAAIS,QAAQW,iBAAmBtB,EAAWuB,OAAQ,CAC9C,IAAIC,EAAa,GAEjBxB,EAAWuB,OAAOE,SAAQC,SACGC,IAArBD,EAAWE,OACXJ,EAAWK,KAAa,qCACNH,EAAWjB,wBAAwBiB,EAAWlB,OAAS,6CAC/DkB,EAAWE,0DAMzBJ,EAAWT,SAAQb,EAAY,gCAAgCsB,EAAWM,KAAK,kBAE3EnB,QAAQW,kBAAoBtB,EAAW+B,OAA8B,GAApB/B,EAAW+B,QACpE7B,EAAoB,mFAES8B,OAAOhC,EAAW+B,MAAME,QAAQ,kDAC/BD,OAAOhC,EAAWkC,MAAMD,QAAQ,8BACpDjC,EAAWmC,OAAS,uBAAuBnC,EAAWmC,OAAOC,QAAQ,aAAc,oCAAoCA,QAAQ,WAAY,0CAA4C,+CAC/JC,KAAKC,MAAOtC,EAAW+B,MAAQ/B,EAAWkC,MAAS,6CAKzF,OAAOhC,GASXJ,KAAKyC,+BAAiC,SAAUC,GAC5C,IAAIC,EAAmB,GAyBvB,OAvBAD,EAAYf,SAAQzB,IAChB,IAAI0C,GAAe,EACnBD,EAAiBhB,SAAQkB,IACrB,IAAIC,EAAkBD,EAAM,GAGxBE,EAAY,CAAC,KAAM,QAAS,SAAU,WAAY,WAAY,OAAQ,UAAW,QAAS,QAAS,UACnGC,EAAU,EACdD,EAAUpB,SAAQsB,IACV/C,EAAW+C,IAAMH,EAAgBG,IAAID,OAGzCA,GAAWD,EAAU9B,SACrB2B,GAAe,EACfC,EAAMd,KAAK7B,OAId0C,GACDD,EAAiBZ,KAAK,CAAC7B,OAIxByC,EAAiBO,KAAIC,GACjBnD,KAAKC,iBAAiBkD,EAAE,GAAgB,GAAZA,EAAElC,OAAcjB,KAAKoD,KAAKC,SAASC,MAAKC,GAAKA,EAAEjD,IAAMN,KAAKS,QAAQ0C,EAAE,GAAG5C,OAAOiD,SAAQC,KAAON,EAAElC,UACnIe,KAAK,KAMZhC,KAAK0D,WAAa,WAEd1D,KAAK2D,aAAa,QAClB3D,KAAK4D,cAGLC,EAAE,oBAAoBC,YAAY,UAGlC,IAAIC,EAAQ,EACZ/D,KAAKS,QAAQkB,SAAQqC,IACbA,EAAOtB,aAAaqB,OAI5B,IAAIE,EAAcF,GAAS/D,KAAKS,QAAQQ,OAGxC,SAASiD,EAAuBC,GAC5B,MAAwB,iBAApBA,EAAc7D,GACP8D,OAAOC,aAAe,gEAAkE,GACpE,gBAApBF,EAAc7D,GACd,iEACoB,iBAApB6D,EAAc7D,GACd,0DACoB,iBAApB6D,EAAc7D,GACd,uEADJ,EAMe,QAAtBN,KAAKsE,eACLC,OAAO,iBAAiBC,KAAa,qKAGvBxE,KAAKyE,cAAcvB,KAAIiB,GAC1BD,EAAuBC,KAC/BnC,KAAK,kJAIOiC,EAA8F,GAAhF,sGACfjE,KAAK0E,eAAexB,KAAIiB,GAC3BD,EAAuBC,KAC/BnC,KAAK,6DAOZhC,KAAK2E,gBAGL3E,KAAK4E,iBAGL5E,KAAK6E,SAASZ,GAGdjE,KAAK8E,eAAeb,IASxBjE,KAAK+E,YAAc,SAAUC,EAAMC,GAC/B,IAAIC,EAAQD,EAAS,IAAIE,KAAKF,GAAU,IAAIE,KACxCC,EAAW,IAAID,KAAKD,EAAMG,UAAY,OACtCC,EAAK,IAAIH,KAAKH,GAEdO,EAAwBD,EAAGE,gBAAkBN,EAAMM,eACnDF,EAAGG,aAAeP,EAAMO,YACxBH,EAAGI,YAAcR,EAAMQ,WACvBJ,EAAGK,YAAc,EAEjBC,EAAoBN,EAAGE,gBAAkBJ,EAASI,eAClDF,EAAGG,aAAeL,EAASK,YAC3BH,EAAGI,YAAcN,EAASM,WAC1BJ,EAAGK,WAAa,EAEpB,OAAOJ,GAAyBK,GASpC5F,KAAK8E,eAAiB,SAAUb,EAAa4B,GAEzC,IAAIC,EAAiB,GA2BrB,GA1BI9F,KAAKS,SACLT,KAAKS,QAAQkB,SAAQqC,IACbA,EAAOtB,aAEPsB,EAAOtB,YAAYf,SAAQzB,IAEnBF,KAAK+E,YAAY7E,EAAWU,MAAOiF,IACnCC,EAAe/D,KAAK7B,SAQxC4F,EAAeC,MAAK,SAAUC,EAAGC,GAC7B,IAAIC,EAAO,IAAIf,KAAKa,EAAEpF,OAAOyE,UACzBc,EAAO,IAAIhB,KAAKc,EAAErF,OAAOyE,UAG7B,OAAIa,EAAOC,EAAa,EACpBD,EAAOC,GAAc,EAClB,KAIPnG,KAAKoD,KAAKgD,OACV,IAAIC,EAAerG,KAAKyC,+BAA+BqD,QAEnDO,EAAeP,EAAe5C,KAAIhD,GAC3BF,KAAKC,iBAAiBC,KAC9B8B,KAAK,IAMJqE,EAHqB,GAAzBP,EAAe7E,OAEXgD,EACe,mGAAmG4B,EAAW,qBAAuBA,EAASS,eAAe,KAAM,CAAEC,QAAS,QAASC,MAAO,QAASC,IAAK,YAAe,6BAE3N,GAII,sFACoDZ,EAAW,UAAYA,EAASS,eAAe,KAAM,CAAEC,QAAS,QAASC,MAAO,QAASC,IAAK,YAAe,6BACpLJ,EAGkB,QAAtBrG,KAAKsE,eACLC,OAAO,iCAAiCC,KAAK6B,IASrDrG,KAAK4E,eAAiB,SAAUiB,GAE5B,IAAIX,EAAQW,EAAW,IAAIV,KAAKU,GAAY,IAAIV,KAC5CW,EAAiB,GAgCrB,GA/BI9F,KAAKS,SACLT,KAAKS,QAAQkB,SAAQqC,IACbA,EAAOtB,aAEPsB,EAAOtB,YAAYf,SAAQzB,IAElB,IAAIiF,KAAKjF,EAAWU,OAAOyE,UAAYH,EAAMG,YAAerF,KAAK+E,YAAY7E,EAAWU,MAAOsE,IAChGY,EAAe/D,KAAK7B,SAQxC4F,EAAeC,MAAK,SAAUC,EAAGC,GAC7B,IAAIC,EAAO,IAAIf,KAAKa,EAAEpF,OAAOyE,UACzBc,EAAO,IAAIhB,KAAKc,EAAErF,OAAOyE,UAG7B,OAAIa,EAAOC,EAAa,EACpBD,EAAOC,GAAc,EAClB,KAIPL,EAAe7E,OAAS,KACxB6E,EAAe7E,OAAS,IAIxBjB,KAAKoD,KAAKgD,OACV,IAAIC,EAAerG,KAAKyC,+BAA+BqD,QAEnDO,EAAeP,EAAe5C,KAAIhD,GAC3BF,KAAKC,iBAAiBC,KAC9B8B,KAAK,IAIiB,GAAzB8D,EAAe7E,SACfoF,EAAe,IAGO,QAAtBrG,KAAKsE,eACLC,OAAO,yCAAyCC,KAAK6B,IAS7DrG,KAAK2E,cAAgB,SAAU+B,GAE3B,IAAIC,EAAc,GAelB,GAbI3G,KAAK4G,aAAaC,aAAaC,SAC/BC,SAAW,IAAIC,SAASC,UACxBN,GAAuB,iMAGC3G,KAAKkH,QAAU,oMACqElH,KAAK4G,aAAaC,aAAalG,yDAEjIoG,SAASI,SAASnH,KAAK4G,aAAaC,aAAaO,qCAK3DV,GAAuC,QAAtB1G,KAAKsE,cACtB,OAAOC,OAAO,sCAAsCC,KAAa,0RAQrExE,KAAKqH,QAAQ1F,SAAQ2F,IACjB,GAAmB,gBAAfA,EAAOC,KACPZ,GAAuB,sHACgF3G,KAAKS,QAAQ6G,EAAO/G,OAAOG,kFACjG4G,EAAO3G,oCAC9B2G,EAAOE,kDAGd,GAAmB,cAAfF,EAAOC,KAAsB,CACpC,IAAInH,EAAYJ,KAAKK,sBAAsBiH,GAC3CX,GAAuB,oDACcW,EAAOhH,QAAQgH,EAAO/G,gCAAgCP,KAAKS,QAAQ6G,EAAO/G,OAAOG,8FAElG4G,EAAO3G,kGAGbP,EAAY,uBAAuBA,UAAoB,2DAGxDJ,KAAKoD,KAAKgD,OAAS,cAAgBpG,KAAKoD,KAAKC,SAASC,MAAKC,GAAKA,EAAEjD,IAAMN,KAAKS,QAAQ6G,EAAO/G,OAAOiD,SAAQC,KAAO,eAAezD,KAAKe,WAAWuG,EAAOG,0DAMnJ,QAAtBzH,KAAKsE,eACLC,OAAO,sCAAsCC,KAAKmC,IAU1D3G,KAAK6E,SAAW,SAAUZ,GACtB,GAA0B,QAAtBjE,KAAKsE,cAAyB,CAE9B,IAAIoD,EAAY,GA0ChB,GAvCA1H,KAAKS,QAAQkB,SAAQ,CAACqC,EAAQ2D,KACtB3D,EAAOtB,aAEPsB,EAAOtB,YAAYf,SAAQzB,IAEvB,IAAI8E,EAAO,IAAIG,KAAKjF,EAAWU,OAC3BoE,EAAKW,WAAa,IAElBX,EAAK4C,QAAQ5C,EAAKK,UAAY,OAC9BL,EAAK6C,SAAS,IACd7C,EAAK8C,WAAW,KAGpB,IAAIC,EAAgBL,EAAUpE,MAAK0E,GAAKA,EAAE1H,IAAMJ,EAAWI,KACvDyH,GAAiB7H,EAAWkB,SAE5B2G,EAAc3G,SAAU,EACxB2G,EAAcE,YAAc,UAC5BF,EAAcG,aAAehI,EAAWI,GACxCyH,EAAcI,SAAWR,GACjBI,GACRL,EAAU3F,KAAK,CACXpB,MAAOT,EAAWS,MAClByH,MAAOpD,EACP1E,GAAIJ,EAAWI,GACf+H,QAAQ,EACRC,gBAAiBtE,EAAOtD,MACxBuH,aAAqC,IAAvB/H,EAAWkB,QAAoB,UAAY,cACzDmH,UAAW,QACXJ,SAAUR,EACVO,aAAchI,EAAWI,GACzBc,QAASlB,EAAWkB,gBAQpCgD,OAAOC,aAAc,CACrB,IAAImE,EAAaC,SAASC,eAAe,YACzC7D,SAAW,IAAIR,aAAasE,SAASH,EAAY,CAC7CI,OAAQ,KACRC,YAAa,eACbC,OAAQpB,EACRqB,aAAcC,IACV,MAAM5H,QAAEA,GAAY4H,EAAKC,MAAMC,cAW/B,MAAO,CAAE1E,KAVY,gPAIHpD,EAAU,2FAA6F,iFACjE4H,EAAKC,MAAMtI,mJAOvEwI,cAAe,EACfC,oBAAoB,EACpBC,cAAe,CACXjB,MAAO,QACPkB,OAAQ,GACRC,IAAK,aAETC,UAAW,SAAUR,GACjB,GAAInF,EAAEmF,EAAKS,OAAOC,SAAS,gBAAiB,OAAOC,MAAMC,SAGzD/F,EAAE,6BAA6BC,YAAY,UAC3CD,EAAEmF,EAAKS,OAAOI,SAAS,UACvBhG,EAAE,aAAagG,SAAS,gBAGxBhG,EAAE,+BAA+BiG,KAAK,SACtCjG,EAAE,kCAAkCiG,KAAK,4BAA8Bd,EAAKhE,KAAKsB,eAAe,KAAM,CAAEC,QAAS,QAASC,MAAO,QAASC,IAAK,aAC/I5C,EAAE,6BAA6BkG,OAG/B/J,KAAK8E,eAAeb,EAAa+E,EAAKhE,MACtChF,KAAK4E,eAAeoE,EAAKhE,MACzBhF,KAAK2E,eAAc,IAEvBqF,WAAY,SAAUhB,GAClBhJ,KAAKE,WAAW8I,EAAKC,MAAMC,cAAchB,aAAcc,EAAKC,MAAMC,cAAcf,aAGxFtD,SAASoF,YAWrBjK,KAAKkK,YAAc,SAAUC,EAASC,GAElC,IAAIjC,EAAWnI,KAAKS,QAAQyC,KAAIc,GAAUA,EAAO1D,KAAI+J,QAAQF,GAC7DnK,KAAKsE,cAAgB6D,EAGrBnI,KAAKsK,gBAAkB,SACvBzG,EAAE,oBAAoBC,YAAY,UAClCD,EAAE,2BAA2BgG,SAAS,UAGtCzF,OAAOmG,aAAaC,QAAQ,kBAAoBL,EAAS,UAGzDnK,KAAK2D,aAAawE,GAGlBnI,KAAK4D,eAEY,GAAbuE,GAEAnI,KAAKyK,MAAM,mCAAoC,4CAInD,IAAI/H,EAAc0H,GAAiBpK,KAAKS,QAAQ0H,GAAUzF,YAG1D,GAAKA,EAmBE,GAA0B,GAAtBA,EAAYzB,OAEdjB,KAAKsE,eAAiB6D,GAAsC,UAAxBnI,KAAKsK,iBAC1CzG,EAAE,iBAAiBW,KAAKxE,KAAK0K,kBAAkBvC,EAAU,UAAoB,maAS9E,CAEHzF,EAAYqD,MAAK,SAAUC,EAAGC,GAC1B,IAAIC,EAAO,IAAIf,KAAKa,EAAEpF,OAAOyE,UACzBc,EAAO,IAAIhB,KAAKc,EAAErF,OAAOyE,UAEzBsF,GAAM,IAAIxF,MAAOE,UAOrB,OAJKW,EAAEpF,QAASsF,EAAO,GAClBD,EAAErF,QAASuF,EAAO,GAGlBD,EAAOyE,GAASxE,EAAOwE,EAEpBzE,EAAOC,EAAa,EACpBD,EAAOC,GAAc,EAClB,EAGHD,EAAOC,EAAa,EACpBD,EAAOC,GAAc,EAClB,KAKf,IAAIyE,EAAiB,KACjBC,EAAanI,EAAYQ,KAAIhD,IAC7B,IAAI4K,EAAU,GAkBd,OAhBK5K,EAAWU,MAML,IAAIuE,KAAKjF,EAAWU,OAAS,IAAIuE,MACpCyF,GAAsC,QAAnBA,IACnBE,EAAU,mFAGdF,EAAiB,OAEjBA,EAAiB,YAZbA,GAAsC,YAAnBA,IACnBE,EAAU,uFAGdF,EAAiB,WAWdE,EAAU9K,KAAKC,iBAAiBC,MACxC8B,KAAK,IAGR6I,EAAa7K,KAAK0K,kBAAkBvC,EAAU,UAAY0C,EAErD7K,KAAKsE,eAAiB6D,GAAsC,UAAxBnI,KAAKsK,iBAC1CzG,EAAE,iBAAiBW,KAAKqG,QAnFvB7K,KAAKsE,eAAiB6D,GAAsC,UAAxBnI,KAAKsK,iBAC1C/F,OAAO,iBAAiBC,KAAKxE,KAAK0K,kBAAkBvC,EAAU,UAAY,CAAC,EAAG,EAAG,EAAG,GAAGjF,KAAI,IAC/E,2mBAaTlB,KAAK,MAgFpBhC,KAAKE,WAAa,SAAUI,EAAI6H,EAAU4C,GAEtC,IAAIC,EAAgBhL,KAAKS,QAAQ0H,GAAUzF,YAAYQ,KAAIhD,GAAcA,EAAWI,KAChFJ,EAAaF,KAAKS,QAAQ0H,GAAUzF,YAAYsI,EAAcX,QAAQ/J,IAGtE2K,EAAqB,KACzB,GAAI/K,EAAWsH,KAAM,CAEjB,IAAI0D,EAA0BC,iBAAiBtH,EAAE,iBAAiB,IAAIuH,iBAAiB,WACnFC,EAAoBF,iBAAiBtH,EAAE,iBAAiB,IAAIuH,iBAAiB,UAE7E5D,EAAOtH,EAAWsH,KAClB3D,EAAE,QAAQ6F,SAAS,UACnBlC,EAAOxH,KAAKsL,wBAAwBpL,EAAWsH,KAAM0D,IAGzD,IAAIK,GAAc,EAElB,GADI/D,EAAKgE,cAAcC,SAAS,gBAAkBjE,EAAKgE,cAAcC,SAAS,gBAAkBjE,EAAKgE,cAAcC,SAAS,cAAaF,GAAc,GACpG,UAA9C5B,MAAM+B,IAAI,iCAAgD7K,QAAQ8K,OAASJ,GAAgB1H,EAAE,eAAe+H,OAAOpE,GAAMnE,SAAS,SAASC,KAAK,YAAYrC,OAAS,EAAI,CAC1K,IAAI4K,EAAW,GACfhI,EAAE,eAAe+H,OAAOpE,GAAMnE,SAAS,SAASC,KAAK,YAAYwI,UAAUnK,SAAQ,CAACoK,EAASC,KACzF,IAAIlC,EAAOjG,EAAEkI,GAASzI,KAAK,kBAAkBwG,OAAO0B,cACpD,GAAK1B,EAAL,CAEA,IAAImC,EAAYpI,EAAEkI,GAClBE,EAAU3I,KAAK,kBAAkB4I,SACjC,IAAIC,EAAYF,EAAUzH,OAC1B,GAAK2H,EAAL,CAEA,IAAIC,EAAO,KACPtC,EAAK2B,SAAS,iBAAkBW,EAAO,cAAetC,EAAO,gBAC7DA,EAAK2B,SAAS,iBAAkBW,EAAO,aAActC,EAAO,gBAC5DA,EAAK2B,SAAS,cAAeW,EAAO,eAAgBtC,EAAO,aAE/D+B,EAAS9J,KAAK,CAAE+H,KAAAA,EAAMsC,KAAAA,EAAMD,UAAAA,SAGhC,IAAIF,EAAYpI,EAAE,eAAe+H,OAAOpE,GACxCyE,EAAU5I,SAAS,SAASgJ,YAAYR,EAAS3I,KAAIoJ,GAC1C,iOAE2GA,EAAEF,4EAA4EE,EAAExC,6CACxLwC,EAAEH,4DAGbnK,KAAK,KACR,IAAIuK,EAAYN,EAAUzH,OAEtBgI,EAAO,IAAIC,KAAK,CAAC,oWAIoBvB,aAAmCG,yDAAyEA,mHAC3IkB,mBACN,CAAEhF,KAAM,cACZ0D,EAAqB,qJAAqJ7G,OAAOsI,IAAIC,gBAAgBH,aAClM,CAECA,EAAO,IAAIC,KAAK,CAAC,mOAGgBvB,aAAmCG,gCAClE7D,mBACF,CAAED,KAAM,cACZ0D,EAAqB,uJAAuJ7G,OAAOsI,IAAIC,gBAAgBH,UAK/M,IAAII,EAAuB,GAC3B,GAAI1M,EAAWuB,OACPmL,EAAuB1M,EAAWuB,OAAOyB,KAAI,SAAUtB,GACvD,MAAe,6FAEGA,EAAWjB,0GAEQoK,GAAWnJ,EAAWlB,MAASkB,EAAWlB,MAAQ,0EACjEqK,EAAU,QAA2BlJ,IAArBD,EAAWE,MAAsBF,EAAWiL,WAAa,GAAK,iIAGxD9B,EAAU,GAAKnJ,EAAWE,OAAS,oEACjC,IAAMF,EAAWQ,uKAMhEJ,KAAK,IAIZ,IAAI8K,EAAyB,GAC7B,GAAI5M,EAAW6M,SACPD,EAAyB5M,EAAW6M,SAAS7J,KAAI6J,GAClC,sFAEDA,EAASC,OAAiB,2CACZD,EAASC,OAAOC,iDACtBF,EAASC,OAAOvJ,sCACtB,oCAECsJ,EAASG,8DAG3BlL,KAAK,IAIZ,IAAI5B,EAAYJ,KAAKK,sBAAsBH,GAG3C2D,EAAE,iBAAiBW,KAAa,gLAGStE,EAAWS,oDAGtCT,EAAWU,MAAQ,wEAAwEZ,KAAKe,WAAWb,EAAWU,sBAAwB,uBAC9IV,EAAWiB,WAAa4J,EAAU,uIAAyI,uBAC3K7K,EAAWkB,UAAY2J,EAAU,0IAA4I,uBAC7K7K,EAAWmB,OAAS0J,EAAU,gIAAkI,uBAChK7K,EAAWoB,SAAWyJ,EAAU,0JAA4J,uBAC3L/K,KAAKoD,KAAKgD,SAAW2E,EAAW,qEAAqE/K,KAAKoD,KAAKC,SAASC,MAAKC,GAAKA,EAAEjD,IAAMN,KAAKS,QAAQP,EAAWK,OAAOiD,SAAQC,oBAAsB,uBACxMsH,EAAU,GAAK3K,gHAIfF,EAAWsH,KAAOyD,EAAqB,yCAG3C/K,EAAWsH,KAAO,kHAAoH,4JAGlItH,EAAWiN,YAAc,mIAAmInN,KAAKe,WAAWb,EAAWiN,mBAAqB,uBAC5MjN,EAAWU,MAAQ,2HAA2HZ,KAAKe,WAAWb,EAAWU,aAAe,uBACxLV,EAAWkC,MAAQ,uIAAuIlC,EAAWkC,YAAc,wBAClLlC,EAAW+B,OAA8B,GAApB/B,EAAW+B,OAAiB8I,EAA6K,GAAnK,0IAA0I7K,EAAW+B,gCACjN/B,EAAWmC,SAAW0I,EAAU,4IAA4I7K,EAAWmC,aAAe,uBACtMnC,EAAWgB,SAAW,mIAAmIhB,EAAWgB,eAAiB,uBACrLhB,EAAWuB,OAASvB,EAAWuB,OAAOyB,KAAI,SAAUtB,GAAc,MAAO,uHAAuHA,EAAWjB,eAAgBqB,KAAK,IAAM,iJAC5GhC,KAAKS,QAAQP,EAAWK,OAAO6M,gCAC7I,OAAZpN,KAAKqN,IAAe,oIAAoInN,EAAWI,SAAW,wFAI1KJ,EAAWoN,IAAM,2DAA2DpN,EAAWoN,wDAAwDzM,QAAQ0M,WAAa1M,QAAQ4C,gBAAkB,6NAKjMsH,EAAmC,GAAzB+B,wBAEXF,mCAKdjD,MAAM6D,MAAMC,MAAM,eAClB9D,MAAM6D,MAAM,kBAQhBxN,KAAK0N,aAAe,SAAUvD,GAE1B,IAAIhC,EAAWnI,KAAKS,QAAQyC,KAAIc,GAAUA,EAAO1D,KAAI+J,QAAQF,GAC7DnK,KAAKsE,cAAgB6D,EAGrBnI,KAAKsK,gBAAkB,eACvBzG,EAAE,oBAAoBC,YAAY,UAClCD,EAAE,2BAA2BgG,SAAS,UAGtCzF,OAAOmG,aAAaC,QAAQ,kBAAoBL,EAAS,gBAGzDnK,KAAK2D,aAAawE,GAGlBnI,KAAK4D,eAEY,GAAbuE,GAEAnI,KAAKyK,MAAM,mCAAoC,6CAI9CzK,KAAKsE,eAAiB6D,GAAsC,gBAAxBnI,KAAKsK,iBAC1C/F,OAAO,iBAAiBC,KAAKxE,KAAK0K,kBAAkBvC,EAAU,WAAqB,kmCAyBvF,IAAIwF,SAAQC,IACJ5N,KAAKS,QAAQ0H,GAAU0F,UAA+C,IAAnC7N,KAAKS,QAAQ0H,GAAU0F,QAC1DD,EAAQ5N,KAAKS,QAAQ0H,GAAU0F,SAE/BhN,QAAQiN,aAAa9N,KAAKoD,KAAK9C,GAAIN,KAAKS,QAAQ0H,GAAU4F,OAAOC,MAAKC,GAAQL,EAAQK,QAE3FD,MAAKC,IAEJjO,KAAKS,QAAQ0H,GAAU0F,QAAUI,EAEjC,IAAIC,EAAclO,KAAK0K,kBAAkBvC,EAAU,WAC/CgG,GAAe,EAEnBF,EAAKtM,SAAQyM,IACT,IAAIC,EAAiB,GAChBD,EAAOE,YAAWH,GAAe,GAGtCC,EAAOG,MAAM5M,SAAQ6M,IAEjB,IAAIpC,EAAO,OACM,cAAboC,EAAKjH,OAAsB6E,EAAO,cACrB,QAAboC,EAAKjH,OAAgB6E,EAAO,qBACf,cAAboC,EAAKjH,OAAsB6E,EAAO,SACrB,OAAboC,EAAKjH,OAAe6E,EAAO,eACd,UAAboC,EAAKjH,OAAkB6E,EAAO,eACjB,SAAboC,EAAKjH,OAAiB6E,EAAO,OAGjC,IAAIqC,EAAS,GACI,cAAbD,EAAKjH,OAAsBkH,EAAS,oBAAsBD,EAAKlO,GAAK,MAAQ6H,EAAW,KAC1E,QAAbqG,EAAKjH,OACLkH,EAAS,0BAA4BtE,EAAU,IAAMqE,EAAKlO,GAAK,WAElD,cAAbkO,EAAKjH,OACLkH,EAAS,gCAAkCtE,EAAU,IAAMqE,EAAKlO,GAAK,WAExD,OAAbkO,EAAKjH,OAAekH,EAAS,gBAAkBD,EAAKlB,IAAM,MAC7C,UAAbkB,EAAKjH,OAAkBkH,EAAS,IACnB,SAAbD,EAAKjH,OAAiBkH,EAAS,wBAA0BD,EAAKlB,IAAM,MAGvD,UAAbkB,EAAKjH,KACL8G,GAAkB,8EAA8EG,EAAK7N,aAErG0N,GAAkB,8DACqBI,0BAA6C,GAAdD,EAAKE,+CAC9DF,EAAKG,UAAY,yBAA2B,yBAAyBH,EAAKG,UAAY,QAAUvC,sCACnGoC,EAAK7N,iEAOvBuN,GAAuB,6CACOE,EAAOE,UAAY,YAAc,kGAEVtO,KAAKS,QAAQ0H,GAAU7H,SAAS8N,EAAO9N,wEAC1C8N,EAAOE,UAAY,uBAAyB,sDAChFF,EAAOzN,4IAIP0N,yEAMC,GAAfJ,EAAKhN,SACLiN,GAAuB,uZAWtBlO,KAAKsE,eAAiB6D,GAAsC,gBAAxBnI,KAAKsK,kBAC1CzG,EAAE,iBAAiBW,KAAK0J,GACpBrN,QAAQ+N,qBACR/K,EAAE,yBAAyBW,KAAK2J,EAAe,mDAAqD,sDACpGtK,EAAE,yBAAyBgL,KAAK,UAAWV,EAAe,gCAAkC,gCAC5FtK,EAAE,yBAAyBkG,YAGpC+E,OAAMC,IACL/O,KAAKyK,MAAM,yBAA0B,+CAAgDsE,OAW7F/O,KAAKgP,eAAiB,SAAUC,EAAK9E,EAAS+E,GAE1CrL,EAAEoL,GAAKE,QAAQ,SAASC,YAAY,aAGhCvL,EAAEoL,GAAKE,QAAQ,SAASzF,SAAS,cAC7B7I,QAAQwO,gBAAgBxO,QAAQwO,eAAelF,EAAS+E,GAAO,GACnErL,EAAEoL,GAAKzK,KAAK,wBACZxE,KAAKS,QAAQT,KAAKsE,eAAeuJ,QAAQvK,MAAKgM,GAAKA,EAAEhP,IAAM4O,IAAOZ,WAAY,IAE1EzN,QAAQwO,gBAAgBxO,QAAQwO,eAAelF,EAAS+E,GAAO,GACnErL,EAAEoL,GAAKzK,KAAK,uBACZxE,KAAKS,QAAQT,KAAKsE,eAAeuJ,QAAQvK,MAAKgM,GAAKA,EAAEhP,IAAM4O,IAAOZ,WAAY,IAWtFtO,KAAKuP,kBAAoB,SAAUC,GAC3BA,GAAY3O,QAAQ+N,oBACpB/N,QAAQ+N,mBAAmB5O,KAAKS,QAAQT,KAAKsE,eAAeyJ,OAAO,GACnElK,EAAE,mCAAmCiG,KAAK,wBAC1CjG,EAAE,8BAA8BgG,SAAS,aACzC7J,KAAKS,QAAQT,KAAKsE,eAAeuJ,QAAQlM,SAAQ2N,GAAKA,EAAEhB,WAAY,IACpEzK,EAAE,yBAAyBW,KAAK,oDAChCX,EAAE,yBAAyBgL,KAAK,UAAW,kCACpChO,QAAQ+N,qBACf/N,QAAQ+N,mBAAmB5O,KAAKS,QAAQT,KAAKsE,eAAeyJ,OAAO,GACnElK,EAAE,mCAAmCiG,KAAK,uBAC1CjG,EAAE,8BAA8BC,YAAY,aAC5C9D,KAAKS,QAAQT,KAAKsE,eAAeuJ,QAAQlM,SAAQ2N,GAAKA,EAAEhB,WAAY,IACpEzK,EAAE,yBAAyBW,KAAK,sDAChCX,EAAE,yBAAyBgL,KAAK,UAAW,kCAWnD7O,KAAK0K,kBAAoB,SAAU+E,EAAKlI,GACpC,IAAImI,EAAkB1P,KAAKS,QAAQgP,GAAK5B,QACxC,MAAe,aACA,WAARtG,GAA+B,UAARA,EAA4B,+CAClBmI,EAAkB,GAAK,0CACjDA,EAA0B,yBACb,WAARnI,GAAsB1G,QAAQ+N,mBAAqB,qIAAuI,kKAE5J,UAARrH,EAAmB,SAAW,mLACtB,WAARA,EAAoB,SAAW,uLAExD,2CAEE,YAUtBvH,KAAK2P,UAAY,SAAUxF,GAEvB,IAAIhC,EAAWnI,KAAKS,QAAQyC,KAAIc,GAAUA,EAAO1D,KAAI+J,QAAQF,GAyB7D,GAxBAnK,KAAKsE,cAAgB6D,EAGrBnI,KAAKsK,gBAAkB,SACvBzG,EAAE,oBAAoBC,YAAY,UAClCD,EAAE,2BAA2BgG,SAAS,UAGtC7J,KAAK2D,aAAawE,GAGlBnI,KAAK4D,eAEY,GAAbuE,GAEAnI,KAAKyK,MAAM,mCAAoC,0CAI9CzK,KAAKsE,eAAiB6D,GAAsC,UAAxBnI,KAAKsK,iBAC1C/F,OAAO,iBAAiBC,KAAK,+BAI5BxE,KAAKS,QAAQ0H,GAAU9F,QAAWrC,KAAKS,QAAQ0H,GAAUzF,YAA9D,CAKA,IAAIkN,EAAQ,EACRC,EAAc,EACdC,EAAe,EACfC,EAAoB,EAGpBC,EAAiB,GAGrBhQ,KAAKS,QAAQ0H,GAAUzF,YAAYf,SAAQzB,KACnCA,EAAW+B,OAA8B,GAApB/B,EAAW+B,SAChC6N,GAAgB5P,EAAW+B,MAC3B8N,IAEAC,GAA0B,oDACW9P,EAAWI,QAAQ6H,4FAE1CjI,EAAWS,qFAGPT,EAAWmC,OAAS,gCAAgCnC,EAAWmC,eAAiB,+DACpDnC,EAAW+B,yEACV/B,EAAWkC,6EACPG,KAAKC,MAAOtC,EAAW+B,MAAQ/B,EAAWkC,MAAS,gHAOtGlC,EAAWkC,QACXyN,GAAe3P,EAAWkC,OAGL,GAApBlC,EAAW+B,OAAe/B,EAAWkC,OACtCwN,OAKR,IAAIK,EAA2B,uCACCjQ,KAAKS,QAAQ0H,GAAUzH,iKAIrCV,KAAKS,QAAQ0H,GAAUlG,MAAQ,4BAA4BjC,KAAKS,QAAQ0H,GAAUlG,gBAAkB,+CAChFjC,KAAKS,QAAQ0H,GAAU9F,QAAU,sEAI7DuN,EAAgB,iKAGqCA,+CAEnD,iCAEU5P,KAAKkQ,kBAAoB,GAAK,4FAGtClQ,KAAKS,QAAQ0H,GAAUgI,eAAyB,sIAGnBnQ,KAAKS,QAAQ0H,GAAUgI,oEAElD,8KAK2BL,0DACAD,2LAMJE,qZAMiD/P,KAAKkQ,kBAAoB,YAAc,0DAQ1HlQ,KAAKsE,eAAiB6D,GAAsC,UAAxBnI,KAAKsK,iBAC1CzG,EAAE,iBAAiBW,KAAKyL,EAAmBD,KAKnDrG,MAAMyG,gBAAgBC,UAAY,KAC9BrQ,KAAK0D,cAGTiG,MAAMyG,gBAAgBE,OAAUC,IAC5BvQ,KAAKkK,YAAYqG,IAGrB5G,MAAMyG,gBAAgB1C,aAAgB6C,IAClCvQ,KAAK0N,aAAa6C,IAGtB5G,MAAMyG,gBAAgBT,UAAaY,IAC/BvQ,KAAK2P,UAAUY","sourceRoot":"/","sourcesContent":["/**\r\n * @file DTPS assignment functions\r\n * @author jottocraft\r\n * \r\n * @copyright Copyright (c) 2018-2021 jottocraft. All rights reserved.\r\n * @license GPL-2.0-only\r\n */\r\n\r\n/**\r\n * Renders HTML for an assignment item in a list\r\n * \r\n * @param {Assignment} assignment The assignment object to render\r\n * @param {string} [childDisplay] Text to display for specifying the child or children this assignment is for\r\n * @return {string} Assignment HTML for use in a list\r\n */\r\ndtps.renderAssignment = function (assignment, childDisplay) {\r\n    //Render points/letter score\r\n    var scoreHTML = dtps.renderAssignmentScore(assignment);\r\n\r\n    var HTML = /*html*/`\r\n        <div \r\n            onclick=\"${`dtps.assignment('` + assignment.id + `', ` + assignment.class + `, ` + (!isNaN(childDisplay) ? true : false) + `)`}\" \r\n            class=\"card ${scoreHTML ? \"graded assignment\" : \"assignment\"}\"\r\n            style=\"${'--classColor: ' + dtps.classes[assignment.class].color}\"\r\n        >\r\n\r\n            <!-- Color bar for the dashboard -->\r\n            <div class=\"colorBar\"></div>\r\n\r\n            <!-- Assignment title and points -->\r\n            <h4>\r\n                <span>${assignment.title}</span>\r\n\r\n                <!-- Points display -->\r\n                ${scoreHTML ? `<div class=\"points\">${scoreHTML}</div>` : ``}\r\n            </h4>\r\n\r\n            <h5>\r\n                <!-- Assignment info -->\r\n                <div class=\"info\">\r\n                    ${assignment.dueAt ? `<div ${dtpsLMS.isUsualDueDate && !dtpsLMS.isUsualDueDate(assignment.dueAt) ? `style=\"font-weight: bold;color: var(--text);\"` : \"\"} class=\"infoChip\"><i style=\"margin-top: -2px;\" class=\"fluid-icon\">alarm</i> Due ` + dtps.formatDate(assignment.dueAt) + `</div>` : \"\"}\r\n                    ${assignment.outcomes ? `<div class=\"infoChip weighted\"><i class=\"fluid-icon\">adjust</i>` + assignment.outcomes.length + `</div>` : \"\"}\r\n                    ${assignment.category ? `<div class=\"infoChip weighted\"><i class=\"fluid-icon\">category</i> ` + assignment.category + `</div>` : \"\"}\r\n                    ${childDisplay ? `<div class=\"infoChip weighted\"><i class=\"fluid-icon\">person</i> ` + childDisplay + `</div>` : \"\"}\r\n                </div>\r\n\r\n                <!-- Status icons -->\r\n                <div class=\"status\">\r\n                    ${assignment.turnedIn ? `<i title=\"Assignment submitted\" class=\"fluid-icon statusIcon\" style=\"color: #0bb75b;\">assignment_turned_in</i>` : ``}\r\n                    ${assignment.missing ? `<i title=\"Assignment is missing\" class=\"fluid-icon statusIcon\" style=\"color: #c44848;\">remove_circle_outline</i>` : ``}\r\n                    ${assignment.late ? `<i title=\"Assignment is late\" class=\"fluid-icon statusIcon\" style=\"color: #c44848;\">assignment_late</i>` : ``}\r\n                    ${assignment.locked ? `<i title=\"Assignment submissions are locked\" class=\"fluid-icon statusIcon\" style=\"color: var(--secText, gray);\">lock_outline</i>` : ``}\r\n                    ${assignment.pending ? `<i title=\"Grade is pending review\" class=\"fluid-icon statusIcon\" style=\"color: #b3b70b;\">rate_review</i>` : ``}\r\n                </div>\r\n            </h5>\r\n        </div>\r\n    `;\r\n\r\n    return HTML;\r\n}\r\n\r\n/**\r\n* Renders HTML for an assignment score if the assignment is graded\r\n* \r\n* @param {Assignment} assignment The assignment object to render a score for\r\n* @return {string} Assignment score HTML\r\n*/\r\ndtps.renderAssignmentScore = function (assignment) {\r\n    var scoreHTML = \"\";\r\n\r\n    //Use rubric score over points score if possible\r\n    if (dtpsLMS.useRubricGrades && assignment.rubric) {\r\n        var rubricHTML = [];\r\n\r\n        assignment.rubric.forEach(rubricItem => {\r\n            if (rubricItem.score !== undefined) {\r\n                rubricHTML.push(/*html*/`\r\n                    <div title=\"${rubricItem.title}\" style=\"color: ${rubricItem.color || \"var(--text)\"};\">\r\n                        ${rubricItem.score}\r\n                    </div>\r\n                `);\r\n            }\r\n        });\r\n\r\n        if (rubricHTML.length) scoreHTML = `<div class=\"dtpsRubricScore\">${rubricHTML.join(\"\")}</div>`;\r\n\r\n    } else if (!dtpsLMS.useRubricGrades && (assignment.grade || (assignment.grade == 0))) {\r\n        scoreHTML = /*html*/`\r\n            <div class=\"assignmentGrade\">\r\n                <div class=\"grade\">${Number(assignment.grade.toFixed(2))}</div>\r\n                <div class=\"value\">/${Number(assignment.value.toFixed(2))}</div>\r\n                ${assignment.letter ? `<div class=\"letter\">${assignment.letter.replace(\"incomplete\", `<i class=\"fluid-icon\">cancel</i>`).replace(\"complete\", `<i class=\"fluid-icon\">done</i>`)}</div>` : \"\"}\r\n                <div class=\"percentage\">${Math.round((assignment.grade / assignment.value) * 100)}%</div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    return scoreHTML;\r\n}\r\n\r\n/**\r\n* Merges and renders assignments for children in the same class\r\n* \r\n* @param {Assignment[]} assignments An array of assignment objects to merge\r\n* @return {string} HTML with the assignments merged and labelled\r\n*/\r\ndtps.mergeAndRenderChildAssignments = function (assignments) {\r\n    var assignmentGroups = [];\r\n\r\n    assignments.forEach(assignment => {\r\n        var matchedGroup = false;\r\n        assignmentGroups.forEach(group => {\r\n            var groupAssignment = group[0];\r\n\r\n            //Check if assignment matches group assignment\r\n            var matchKeys = [\"id\", \"dueAt\", \"locked\", \"category\", \"turnedIn\", \"late\", \"missing\", \"grade\", \"value\", \"letter\"];\r\n            var matches = 0;\r\n            matchKeys.forEach(k => {\r\n                if (assignment[k] == groupAssignment[k]) matches++;\r\n            });\r\n\r\n            if (matches == matchKeys.length) {\r\n                matchedGroup = true;\r\n                group.push(assignment);\r\n            }\r\n        });\r\n\r\n        if (!matchedGroup) {\r\n            assignmentGroups.push([assignment]);\r\n        }\r\n    });\r\n\r\n    return assignmentGroups.map(g => {\r\n        return dtps.renderAssignment(g[0], g.length == 1 ? dtps.user.children.find(c => c.id == dtps.classes[g[0].class].userID).name : g.length);\r\n    }).join(\"\");\r\n}\r\n\r\n/**\r\n * Renders the DTPS dashboard and calls dtps.renderCalendar, dtps.renderUpdates, and dtps.renderUpcoming\r\n */\r\ndtps.mainStream = function () {\r\n    //Ensure classes are rendered in the sidebar\r\n    dtps.presentClass(\"dash\");\r\n    dtps.showClasses();\r\n\r\n    //Clear active state from all tabs\r\n    $(\"#dtpsTabBar .btn\").removeClass(\"active\");\r\n\r\n    //Count amount of classes that are loaded\r\n    var ready = 0;\r\n    dtps.classes.forEach(course => {\r\n        if (course.assignments) ready++;\r\n    });\r\n\r\n    //Check if all classes are loaded\r\n    var doneLoading = ready == dtps.classes.length;\r\n\r\n    //Returns dashboard item container HTML for an item\r\n    function dashboardContainerHTML(dashboardItem) {\r\n        if (dashboardItem.id == \"dtps.calendar\") {\r\n            return window.FullCalendar ? `<div id=\"calendar\" class=\"card\" style=\"padding: 20px;\"></div>` : \"\";\r\n        } else if (dashboardItem.id == \"dtps.updates\") {\r\n            return `<div class=\"updatesStream recentlyGraded announcements\"></div>`;\r\n        } else if (dashboardItem.id == \"dtps.dueToday\") {\r\n            return `<div style=\"padding: 20px 0px;\" class=\"dueToday\"></div>`;\r\n        } else if (dashboardItem.id == \"dtps.upcoming\") {\r\n            return `<div style=\"padding: 20px 0px;\" class=\"assignmentStream\"></div>`;\r\n        }\r\n    }\r\n\r\n    //Render HTML with loading placeholder\r\n    if (dtps.selectedClass == \"dash\") {\r\n        jQuery(\".classContent\").html(/*html*/`\r\n            <div style=\"letter-spacing: 0px;\">\r\n                <div style=\"float: left; width: 45%; display: inline-block;\" class=\"dash\">\r\n                    ${dtps.leftDashboard.map(dashboardItem => {\r\n            return dashboardContainerHTML(dashboardItem);\r\n        }).join(\"\")}\r\n                </div>\r\n\r\n                <div style=\"float: left; width: 55%; display: inline-block;\" class=\"dash\">\r\n                    ${!doneLoading ? `<div style=\"margin: 75px 25px 10px 75px;\"><div class=\"spinner\"></div></div>` : \"\"}\r\n                    ${dtps.rightDashboard.map(dashboardItem => {\r\n            return dashboardContainerHTML(dashboardItem);\r\n        }).join(\"\")}\r\n                </div>\r\n            </div>\r\n        `);\r\n    }\r\n\r\n    //Render updates stream\r\n    dtps.renderUpdates();\r\n\r\n    //Render upcoming assignments stream\r\n    dtps.renderUpcoming();\r\n\r\n    //Render calendar\r\n    dtps.calendar(doneLoading);\r\n\r\n    //Render due today\r\n    dtps.renderDueToday(doneLoading);\r\n}\r\n\r\n/**\r\n * Checks if a due date is on a date\r\n * \r\n * @param {Date} date Date to check \r\n * @param {Date} [onDate] Date checked against (defaults to today)\r\n */\r\ndtps.isDueOnDate = function (date, onDate) {\r\n    var today = onDate ? new Date(onDate) : new Date();\r\n    var tomorrow = new Date(today.getTime() + 86400000);\r\n    var d1 = new Date(date);\r\n\r\n    var isActuallyTodayAfter9 = d1.getFullYear() === today.getFullYear() &&\r\n        d1.getMonth() === today.getMonth() &&\r\n        d1.getDate() === today.getDate() &&\r\n        d1.getHours() >= 9;\r\n\r\n    var isTomorrowBefore9 = d1.getFullYear() === tomorrow.getFullYear() &&\r\n        d1.getMonth() === tomorrow.getMonth() &&\r\n        d1.getDate() === tomorrow.getDate() &&\r\n        d1.getHours() < 9;\r\n\r\n    return isActuallyTodayAfter9 || isTomorrowBefore9;\r\n}\r\n\r\n/**\r\n * Compiles and displays due today / to-do stream\r\n * \r\n * @param {boolean} doneLoading True if all classes have finished loading their assignment lists\r\n * @param {Date} [fromDate] The date to display assignments from. Defaults to the current date.\r\n */\r\ndtps.renderDueToday = function (doneLoading, fromDate) {\r\n    //Combine class stream arrays\r\n    var combinedStream = [];\r\n    if (dtps.classes) {\r\n        dtps.classes.forEach(course => {\r\n            if (course.assignments) {\r\n                //If course has assignments, add them to the combined stream array\r\n                course.assignments.forEach(assignment => {\r\n                    //Only assignments that are due today\r\n                    if (dtps.isDueOnDate(assignment.dueAt, fromDate)) {\r\n                        combinedStream.push(assignment);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    //Sort combined stream by date\r\n    combinedStream.sort(function (a, b) {\r\n        var keyA = new Date(a.dueAt).getTime(),\r\n            keyB = new Date(b.dueAt).getTime();\r\n\r\n        // Compare the 2 dates\r\n        if (keyA > keyB) return 1;\r\n        if (keyA < keyB) return -1;\r\n        return 0;\r\n    });\r\n\r\n    //Get due today stream HTML\r\n    if (dtps.user.parent) {\r\n        var combinedHTML = dtps.mergeAndRenderChildAssignments(combinedStream);\r\n    } else {\r\n        var combinedHTML = combinedStream.map(assignment => {\r\n            return dtps.renderAssignment(assignment);\r\n        }).join(\"\");\r\n    }\r\n\r\n    if (combinedStream.length == 0) {\r\n        //Nothing due today\r\n        if (doneLoading) {\r\n            combinedHTML = `<p style=\"text-align: center;margin: 10px 0px; font-size: 18px;\"><i class=\"fluid-icon\">done</i> ${fromDate ? \"Nothing is due on \" + fromDate.toLocaleString(\"en\", { weekday: 'short', month: 'short', day: 'numeric' }) : \"Nothing is due today\"}</p>`;\r\n        } else {\r\n            combinedHTML = ``;\r\n        }\r\n    } else {\r\n        //Add header\r\n        combinedHTML = /*html*/`\r\n            <h5 style=\"text-align: center; margin: 10px 0px; font-weight: bold;\">${fromDate ? \"Due on \" + fromDate.toLocaleString(\"en\", { weekday: 'short', month: 'short', day: 'numeric' }) : \"Due Today\"}</h5>\r\n        ` + combinedHTML;\r\n    }\r\n\r\n    if (dtps.selectedClass == \"dash\") {\r\n        jQuery(\".classContent .dash .dueToday\").html(combinedHTML);\r\n    }\r\n}\r\n\r\n/**\r\n * Compiles and displays upcoming assignments stream\r\n * \r\n * @param {Date} [fromDate] The date to display assignments from. Defaults to the current date.\r\n */\r\ndtps.renderUpcoming = function (fromDate) {\r\n    //Combine class stream arrays\r\n    var today = fromDate ? new Date(fromDate) : new Date();\r\n    var combinedStream = [];\r\n    if (dtps.classes) {\r\n        dtps.classes.forEach(course => {\r\n            if (course.assignments) {\r\n                //If course has assignments, add them to the combined stream array\r\n                course.assignments.forEach(assignment => {\r\n                    //Only include upcoming assignments that aren't due today\r\n                    if ((new Date(assignment.dueAt).getTime() > today.getTime()) && !dtps.isDueOnDate(assignment.dueAt, today)) {\r\n                        combinedStream.push(assignment);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    //Sort combined stream by date\r\n    combinedStream.sort(function (a, b) {\r\n        var keyA = new Date(a.dueAt).getTime(),\r\n            keyB = new Date(b.dueAt).getTime();\r\n\r\n        // Compare the 2 dates\r\n        if (keyA > keyB) return 1;\r\n        if (keyA < keyB) return -1;\r\n        return 0;\r\n    });\r\n\r\n    //Limit stream length to 30 assignments\r\n    if (combinedStream.length > 30) {\r\n        combinedStream.length = 30;\r\n    }\r\n\r\n    //Render upcoming assignments stream\r\n    if (dtps.user.parent) {\r\n        var combinedHTML = dtps.mergeAndRenderChildAssignments(combinedStream);\r\n    } else {\r\n        var combinedHTML = combinedStream.map(assignment => {\r\n            return dtps.renderAssignment(assignment);\r\n        }).join(\"\");\r\n    }\r\n\r\n    //No upcoming assignments\r\n    if (combinedStream.length == 0) {\r\n        combinedHTML = \"\";\r\n    }\r\n\r\n    if (dtps.selectedClass == \"dash\") {\r\n        jQuery(\".classContent .dash .assignmentStream\").html(combinedHTML);\r\n    }\r\n}\r\n\r\n/**\r\n * Renders updates stream (recently graded & announcements)\r\n * \r\n * @param {boolean} [dateSelected] True if a date is selected in the dashboard\r\n */\r\ndtps.renderUpdates = function (dateSelected) {\r\n    //Get updates HTML\r\n    var updatesHTML = \"\";\r\n\r\n    if (dtps.remoteConfig.remoteUpdate.active) {\r\n        markdown = new showdown.Converter();\r\n        updatesHTML += /*html*/`\r\n            <div style=\"cursor: auto; padding: 20px; --classColor: var(--secText);\" class=\"announcement card open\">\r\n                <div class=\"className\">\r\n                    <img src=\"${dtps.baseURL + \"/icon.svg\"}\" style=\"vertical-align: middle;width: 22px;margin-right: 5px;\" />\r\n                    <span style=\"font-weight: bold; vertical-align: middle; color: var(--text); font-size: 18px;\">${dtps.remoteConfig.remoteUpdate.title}</span>\r\n                </div>\r\n                ${markdown.makeHtml(dtps.remoteConfig.remoteUpdate.md)}\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    if (dateSelected && (dtps.selectedClass == \"dash\")) {\r\n        return jQuery(\".classContent .dash .updatesStream\").html(/*html*/`\r\n            <div style=\"cursor: auto; padding: 20px; --classColor: var(--secText);\" class=\"announcement card open\">\r\n                <div class=\"className\">Date Selected</div>\r\n                <p>Updates are not shown while a date is selected</p>\r\n            </div>\r\n        `);\r\n    }\r\n\r\n    dtps.updates.forEach(update => {\r\n        if (update.type == \"announcement\") {\r\n            updatesHTML += /*html*/`\r\n                <div onclick=\"$(this).toggleClass('open');\" style=\"cursor: pointer; padding: 20px; --classColor: ${dtps.classes[update.class].color};\" class=\"announcement card\">\r\n                    <div class=\"className\">${update.title}</div>\r\n                    ${update.body}\r\n                </div>\r\n            `;\r\n        } else if (update.type == \"assignment\") {\r\n            var scoreHTML = dtps.renderAssignmentScore(update);\r\n            updatesHTML += /*html*/`\r\n                <div onclick=\"dtps.assignment('${update.id}', ${update.class})\" style=\"--classColor: ${dtps.classes[update.class].color};\" class=\"card recentGrade\">\r\n                    <h5>\r\n                        <span>${update.title}</span>\r\n\r\n                        <!-- Points display -->\r\n                        ${scoreHTML ? `<div class=\"points\">${scoreHTML}</div>` : ``}\r\n                    </h5>\r\n\r\n                    <p>${dtps.user.parent ? \"Graded for \" + dtps.user.children.find(c => c.id == dtps.classes[update.class].userID).name : \"Graded\"} at ${dtps.formatDate(update.gradedAt)}</p>\r\n                </div>\r\n            `;\r\n        }\r\n    })\r\n\r\n    if (dtps.selectedClass == \"dash\") {\r\n        jQuery(\".classContent .dash .updatesStream\").html(updatesHTML);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Compiles and displays the assignment calendar\r\n * \r\n * @param {boolean} doneLoading True if all classes have finished loading their assignment lists\r\n */\r\ndtps.calendar = function (doneLoading) {\r\n    if (dtps.selectedClass == \"dash\") {\r\n        //Calendar events array\r\n        var calEvents = [];\r\n\r\n        //Add assignments from every class to calEvents array\r\n        dtps.classes.forEach((course, courseIndex) => {\r\n            if (course.assignments) {\r\n                //Class has assignments\r\n                course.assignments.forEach(assignment => {\r\n                    //Show assignments due before 9AM on the previous day\r\n                    var date = new Date(assignment.dueAt);\r\n                    if (date.getHours() < 9) {\r\n                        //Set the date to 23:59 the previous day for calendar display\r\n                        date.setTime(date.getTime() - 86400000);\r\n                        date.setHours(23);\r\n                        date.setMinutes(59);\r\n                    }\r\n\r\n                    var existingEvent = calEvents.find(e => e.id == assignment.id);\r\n                    if (existingEvent && assignment.missing) {\r\n                        //Mark existing event as missing and link to missing assignment\r\n                        existingEvent.missing = true;\r\n                        existingEvent.borderColor = \"#c44848\";\r\n                        existingEvent.assignmentID = assignment.id;\r\n                        existingEvent.classNum = courseIndex;\r\n                    } else if (!existingEvent) {\r\n                        calEvents.push({\r\n                            title: assignment.title,\r\n                            start: date,\r\n                            id: assignment.id,\r\n                            allDay: true,\r\n                            backgroundColor: course.color,\r\n                            borderColor: (assignment.missing === true) ? '#c44848' : 'transparent',\r\n                            textColor: \"white\",\r\n                            classNum: courseIndex,\r\n                            assignmentID: assignment.id,\r\n                            missing: assignment.missing\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        //Render calendar\r\n        if (window.FullCalendar) {\r\n            var calendarEl = document.getElementById('calendar');\r\n            calendar = new FullCalendar.Calendar(calendarEl, {\r\n                locale: \"en\",\r\n                initialView: 'dayGridMonth',\r\n                events: calEvents,\r\n                eventContent: info => {\r\n                    const { missing } = info.event.extendedProps;\r\n                    const html = /*html*/`\r\n                        <div class='fc-event-main-frame'>\r\n                            <div class='fc-event-title-container'>\r\n                                <div class='fc-event-title fc-sticky'>\r\n                                    ${missing ? `<i title=\"Assignment is missing\" class=\"fluid-icon statusIcon\">remove_circle_outline</i>` : ``}\r\n                                    <span style=\"vertical-align: middle;\">${info.event.title}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    `;\r\n                    return { html };\r\n                },\r\n                contentHeight: 0,\r\n                handleWindowResize: false,\r\n                headerToolbar: {\r\n                    start: 'title',\r\n                    center: '',\r\n                    end: 'prev,next'\r\n                },\r\n                dateClick: function (info) {\r\n                    if ($(info.dayEl).hasClass(\"fc-day-today\")) return fluid.screen();\r\n\r\n                    //Update calendar\r\n                    $(\"#calendar .fc-daygrid-day\").removeClass(\"active\");\r\n                    $(info.dayEl).addClass(\"active\");\r\n                    $(\"#calendar\").addClass(\"dateSelected\");\r\n\r\n                    //Display selected date\r\n                    $(\".headerArea .contentLabel i\").text(\"event\");\r\n                    $(\".headerArea .contentLabel span\").text(\"Showing assignments from \" + info.date.toLocaleString(\"en\", { weekday: 'short', month: 'short', day: 'numeric' }));\r\n                    $(\".headerArea .contentLabel\").show();\r\n\r\n                    //Re-render dashboard from the selected date\r\n                    dtps.renderDueToday(doneLoading, info.date);\r\n                    dtps.renderUpcoming(info.date);\r\n                    dtps.renderUpdates(true);\r\n                },\r\n                eventClick: function (info) {\r\n                    dtps.assignment(info.event.extendedProps.assignmentID, info.event.extendedProps.classNum);\r\n                }\r\n            });\r\n            calendar.render();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Shows the assignments stream for a class\r\n * \r\n * @param {string} classID The class ID to show assignments for\r\n * @param {Assignment[]} [searchResults] An array of assignemnts to render instead of course.assignments. Used for assignment search.\r\n */\r\ndtps.classStream = function (classID, searchResults) {\r\n    //Get class index and set as selected class\r\n    var classNum = dtps.classes.map(course => course.id).indexOf(classID);\r\n    dtps.selectedClass = classNum;\r\n\r\n    //Set stream as the selected content\r\n    dtps.selectedContent = \"stream\";\r\n    $(\"#dtpsTabBar .btn\").removeClass(\"active\");\r\n    $(\"#dtpsTabBar .btn.stream\").addClass(\"active\");\r\n\r\n    //Save coursework stream preference\r\n    window.localStorage.setItem(\"courseworkPref-\" + classID, \"stream\");\r\n\r\n    //Load class color, name, etc.\r\n    dtps.presentClass(classNum);\r\n\r\n    //Ensure classes are shown in the sidebar\r\n    dtps.showClasses();\r\n\r\n    if (classNum == -1) {\r\n        //Class does not exist\r\n        dtps.error(\"The selected class doesn't exist\", \"classNum check failed @ dtps.classStream\");\r\n    }\r\n\r\n    //Use search results to render or render all class assignments\r\n    var assignments = searchResults || dtps.classes[classNum].assignments;\r\n\r\n    //Render assignments\r\n    if (!assignments) {\r\n        //Assignments are still loading\r\n        if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"stream\")) {\r\n            jQuery(\".classContent\").html(dtps.renderStreamTools(classNum, \"stream\") + [1, 2, 3, 4].map(() => (\r\n                /*html*/`\r\n                    <div class=\"card assignment graded\">\r\n                        <h4>\r\n                            <span style=\"width: 450px;\" class=\"shimmer\">Assignment Title</span>\r\n                            <div class=\"points shimmer\">00/00</div>\r\n                        </h4>\r\n\r\n                        <h5 style=\"white-space: nowrap; overflow: hidden;\">\r\n                            <div style=\"width: 200px;\" class=\"infoChip shimmer\"></div>\r\n                            <i class=\"fluid-icon statusIcon shimmer\">more_horiz</i>\r\n                        </h5>\r\n                    </div>\r\n                `\r\n            )).join(\"\"));\r\n        }\r\n    } else if (assignments.length == 0) {\r\n        //This class doesn't have any assignments\r\n        if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"stream\")) {\r\n            $(\".classContent\").html(dtps.renderStreamTools(classNum, \"stream\") + /*html*/`\r\n                <div style=\"text-align: center;\">\r\n                    <div style=\"margin: 60px; padding: 20px 40px; display: inline-block; border: 2px solid var(--elements); border-radius: var(--elementRadius);\">\r\n                        <h5>No Assignments</h5>\r\n                        <p>There aren't any assignments in this class yet.</p>\r\n                    </div>\r\n                </div>\r\n            `);\r\n        }\r\n    } else {\r\n        //Sort assignments\r\n        assignments.sort(function (a, b) {\r\n            var keyA = new Date(a.dueAt).getTime(),\r\n                keyB = new Date(b.dueAt).getTime();\r\n\r\n            var now = new Date().getTime();\r\n\r\n            //Put assignments without a due date at the end\r\n            if (!a.dueAt) { keyA = 0; }\r\n            if (!b.dueAt) { keyB = 0; }\r\n\r\n            //Put upcoming assignments at the top\r\n            if ((keyA < now) || (keyB < now)) {\r\n                // Sort upcoming assignments from earliest -> latest\r\n                if (keyA < keyB) return 1;\r\n                if (keyA > keyB) return -1;\r\n                return 0;\r\n            } else {\r\n                // Sort old assignments from latest -> earliest\r\n                if (keyA > keyB) return 1;\r\n                if (keyA < keyB) return -1;\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        //Render assignments\r\n        var prevAssignment = null;\r\n        var streamHTML = assignments.map(assignment => {\r\n            var divider = \"\";\r\n\r\n            if (!assignment.dueAt) {\r\n                if (prevAssignment && (prevAssignment !== \"undated\")) {\r\n                    divider = `<h5 style=\"margin: 75px 20px 10px 20px;font-weight: bold;\">Undated Assignments</h5>`;\r\n                }\r\n\r\n                prevAssignment = \"undated\";\r\n            } else if (new Date(assignment.dueAt) < new Date()) {\r\n                if (prevAssignment && (prevAssignment !== \"old\")) {\r\n                    divider = `<h5 style=\"margin: 75px 20px 10px 20px;font-weight: bold;\">Old Assignments</h5>`;\r\n                }\r\n\r\n                prevAssignment = \"old\";\r\n            } else {\r\n                prevAssignment = \"upcoming\";\r\n            }\r\n\r\n            return divider + dtps.renderAssignment(assignment);\r\n        }).join(\"\");\r\n\r\n        //Add stream header with class info buttons and search box\r\n        streamHTML = dtps.renderStreamTools(classNum, \"stream\") + streamHTML;\r\n\r\n        if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"stream\")) {\r\n            $(\".classContent\").html(streamHTML);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Shows details for an assignment given the assignment ID and class number\r\n * \r\n * @param {string} id Assignment ID\r\n * @param {number} classNum Assignment class number\r\n * @param {boolean} [generic] True if user-specific details, such as grades, should not be displayed\r\n */\r\ndtps.assignment = function (id, classNum, generic) {\r\n    //Get assignment from the id prop\r\n    var assignmentIDs = dtps.classes[classNum].assignments.map(assignment => assignment.id);\r\n    var assignment = dtps.classes[classNum].assignments[assignmentIDs.indexOf(id)];\r\n\r\n    //The assignment body is rendered in an iFrame to keep its content and styling isolated from the rest of the page\r\n    var assignmentBodyHTML = null;\r\n    if (assignment.body) {\r\n        //Get computed background and text color to style the iFrame with\r\n        var computedBackgroundColor = getComputedStyle($(\".card.details\")[0]).getPropertyValue(\"--cards\");\r\n        var computedTextColor = getComputedStyle($(\".card.details\")[0]).getPropertyValue(\"--text\");\r\n\r\n        var body = assignment.body;\r\n        if ($(\"body\").hasClass(\"dark\")) {\r\n            body = dtps.brightenTextForDarkMode(assignment.body, computedBackgroundColor);\r\n        }\r\n\r\n        var hasKeywords = false;\r\n        if (body.toLowerCase().includes(\"deliverable\") && body.toLowerCase().includes(\"instruction\") && body.toLowerCase().includes(\"look for\")) hasKeywords = true;\r\n        if ((fluid.get('pref-formatAssignmentContent') !== \"false\") && dtpsLMS.dtech && hasKeywords && ($('<div></div>').append(body).children(\"table\").find(\"tbody tr\").length > 1)) {\r\n            var sections = [];\r\n            $('<div></div>').append(body).children(\"table\").find(\"tbody tr\").toArray().forEach((element, i) => {\r\n                var text = $(element).find(\"h4:first-child\").text().toLowerCase();\r\n                if (!text) return;\r\n\r\n                var tmpjQuery = $(element);\r\n                tmpjQuery.find(\"h4:first-child\").remove();\r\n                var innerHTML = tmpjQuery.html();\r\n                if (!innerHTML) return;\r\n\r\n                var icon = null;\r\n                if (text.includes(\"deliverable\")) { icon = \"description\"; text = \"Deliverables\"; }\r\n                if (text.includes(\"instruction\")) { icon = \"assignment\"; text = \"Instructions\"; }\r\n                if (text.includes(\"look for\")) { icon = \"find_in_page\"; text = \"Look Fors\"; }\r\n\r\n                sections.push({ text, icon, innerHTML });\r\n            });\r\n\r\n            var tmpjQuery = $('<div></div>').append(body);\r\n            tmpjQuery.children(\"table\").replaceWith(sections.map(s => {\r\n                return `\r\n                    <div class=\"dtpsFormattedAssignmentSection\" style=\"margin: 20px 0px;\">\r\n                        <h2><i style=\"vertical-align: middle; margin-right: 10px; font-size: 24px;\" class=\"fluid-icon-outlined\">${s.icon}</i><span style=\"vertical-align: middle;text-decoration: underline;\">${s.text}</span></h2>\r\n                        ${s.innerHTML}\r\n                    </div>\r\n                `;\r\n            }).join(\"\"));\r\n            var outerHTML = tmpjQuery.html();\r\n\r\n            var blob = new Blob([`\r\n                    <base target=\"_blank\" /> \r\n                    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jottocraft.com/CanvasCSS.css\" media=\"screen,projection\"/>\r\n                    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons+Outlined\" rel=\"stylesheet\">\r\n                    <style>body {background-color: ${computedBackgroundColor}; color: ${computedTextColor};} .dtpsFormattedAssignmentSection *:not(a) { color: ${computedTextColor} !important; } .dtpsFormattedAssignmentSection * { background: none !important; }</style>\r\n                    ${outerHTML}\r\n            `], { type: 'text/html' });\r\n            assignmentBodyHTML = `<iframe id=\"assignmentParts\" onload=\"dtps.iframeLoad('assignmentParts')\" style=\"margin: 10px 0px; width: 100%; border: none; outline: none;\" src=\"${window.URL.createObjectURL(blob)}\" />`;\r\n        } else {\r\n            //Generate a blob with the assignment body and get its data URL\r\n            var blob = new Blob([`\r\n                <base target=\"_blank\" /> \r\n                <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jottocraft.com/CanvasCSS.css\" media=\"screen,projection\"/>\r\n                <style>body {background-color: ${computedBackgroundColor}; color: ${computedTextColor};}</style>\r\n                ${body}\r\n            `], { type: 'text/html' });\r\n            assignmentBodyHTML = `<iframe id=\"assignmentIframe\" onload=\"dtps.iframeLoad('assignmentIframe')\" style=\"margin: 10px 0px; width: 100%; border: none; outline: none;\" src=\"${window.URL.createObjectURL(blob)}\" />`;\r\n        }\r\n    }\r\n\r\n    //Get assignment rubric HTML\r\n    var assignmentRubricHTML = \"\";\r\n    if (assignment.rubric) {\r\n        var assignmentRubricHTML = assignment.rubric.map(function (rubricItem) {\r\n            return /*html*/`\r\n                    <div class=\"dtpsAssignmentRubricItem\">\r\n                        <h5>${rubricItem.title}</h5>\r\n                        <div class=\"score\">\r\n                            <p style=\"color: ${(!generic && rubricItem.color) ? rubricItem.color : \"var(--secText)\"};\" class=\"scoreName\">\r\n                                ${generic ? \"\" : (rubricItem.score !== undefined ? rubricItem.scoreName || \"\" : \"Not assessed\")}\r\n\r\n                                <div class=\"points\">\r\n                                    <p class=\"earned\">${generic ? \"\" : rubricItem.score ?? \"-\"}</p>\r\n                                    <p class=\"possible\">${\"/\" + rubricItem.value}</p>\r\n                                </div>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                `\r\n        }).join(\"\");\r\n    }\r\n\r\n    //Get assignment feedback HTML\r\n    var assignmentFeedbackHTML = \"\";\r\n    if (assignment.feedback) {\r\n        var assignmentFeedbackHTML = assignment.feedback.map(feedback => {\r\n            return /*html*/`\r\n                    <div class=\"dtpsSubmissionComment\">\r\n                        ${feedback.author ? /*html*/`\r\n                            <img src=\"${feedback.author.photoURL}\" />\r\n                            <h5>${feedback.author.name}</h5>\r\n                        ` : ``}\r\n\r\n                        <p>${feedback.comment}</p>\r\n                    </div>\r\n                `\r\n        }).join(\"\");\r\n    }\r\n\r\n    //Get assignment score HTML\r\n    var scoreHTML = dtps.renderAssignmentScore(assignment);\r\n\r\n    //Render assignment details\r\n    $(\".card.details\").html(/*html*/`\r\n            <i onclick=\"fluid.cards.close('.card.details'); $('.card.details').html('');\" class=\"fluid-icon close\">close</i>\r\n\r\n            <h4 style=\"font-weight: bold;\">${assignment.title}</h4>\r\n\r\n            <div>\r\n                ${assignment.dueAt ? `<div class=\"assignmentChip\"><i class=\"fluid-icon\">alarm</i><span>Due ${dtps.formatDate(assignment.dueAt)}</span></div>` : \"\"}\r\n                ${assignment.turnedIn && !generic ? `<div title=\"Assignment submitted\" class=\"assignmentChip\" style=\"color: #0bb75b\"><i class=\"fluid-icon\">assignment_turned_in</i></div>` : \"\"}\r\n                ${assignment.missing && !generic ? `<div  title=\"Assignment is missing\" class=\"assignmentChip\" style=\"color: #c44848\"><i class=\"fluid-icon\">remove_circle_outline</i></div>` : \"\"}\r\n                ${assignment.late && !generic ? `<div title=\"Assignment is late\" class=\"assignmentChip\" style=\"color: #c44848\"><i class=\"fluid-icon\">assignment_late</i></div>` : \"\"}\r\n                ${assignment.locked && !generic ? `<div title=\"Assignment submissions are locked\" class=\"assignmentChip\" style=\"color: var(--secText, gray);\"><i class=\"fluid-icon\">lock_outline</i></div>` : \"\"}\r\n                ${(dtps.user.parent && !generic) ? `<div class=\"assignmentChip\"><i class=\"fluid-icon\">person</i><span>${dtps.user.children.find(c => c.id == dtps.classes[assignment.class].userID).name}</span></div>` : \"\"}\r\n                ${generic ? \"\" : scoreHTML}\r\n            </div>\r\n\r\n            <div style=\"margin-top: 20px;\" class=\"assignmentBody\">\r\n                ${assignment.body ? assignmentBodyHTML : \"\"}\r\n            </div>\r\n\r\n            ${assignment.body ? `<div style=\"margin: 5px 0px; background-color: var(--darker); height: 1px; width: 100%;\" class=\"divider\"></div>` : \"\"}\r\n\r\n            <div style=\"width: calc(40% - 2px); margin-top: 20px; display: inline-block; overflow: hidden; vertical-align: top;\">\r\n                ${assignment.publishedAt ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"fluid-icon\">add_box</i> Published: ${dtps.formatDate(assignment.publishedAt)}</p>` : \"\"}\r\n                ${assignment.dueAt ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"fluid-icon\">alarm</i> Due: ${dtps.formatDate(assignment.dueAt)}</p>` : \"\"}\r\n                ${assignment.value ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"fluid-icon\">bar_chart</i> Point value: ${assignment.value}</p>` : \"\"}\r\n                ${(assignment.grade || (assignment.grade == 0)) && !generic ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"fluid-icon\">assessment</i> Points earned: ${assignment.grade}</p>` : \"\"}\r\n                ${assignment.letter && !generic ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"fluid-icon\">font_download</i> Letter grade: ${assignment.letter}</p>` : \"\"}\r\n                ${assignment.category ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"fluid-icon\">category</i> Category: ${assignment.category}</p>` : \"\"}\r\n                ${assignment.rubric ? assignment.rubric.map(function (rubricItem) { return `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"fluid-icon\">adjust</i> ${rubricItem.title}</p>`; }).join(\"\") : \"\"}\r\n                <p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"fluid-icon\">class</i> Class: ${dtps.classes[assignment.class].subject}</p>\r\n                ${dtps.env == \"dev\" ? `<p style=\"color: var(--secText); margin: 5px 0px;\"><i style=\"vertical-align: middle;\" class=\"fluid-icon\">code</i> Assignment ID: ${assignment.id}</p>` : \"\"}\r\n\r\n                <br />\r\n                <div class=\"row\">\r\n                    ${assignment.url ? `<button class=\"btn small outline\" onclick=\"window.open('${assignment.url}')\"><i class=\"fluid-icon\">open_in_new</i> Open in ${dtpsLMS.shortName || dtpsLMS.name}</button>` : ``}\r\n                </div>\r\n            </div>\r\n\r\n            <div style=\"width: calc(60% - 7px); margin-top: 20px; margin-left: 5px; display: inline-block; overflow: hidden; vertical-align: middle;\">\r\n                ${!generic ? assignmentFeedbackHTML : \"\"}\r\n\r\n                ${assignmentRubricHTML}\r\n            </div>\r\n        `);\r\n\r\n    //Close other active cards and open the assignment details card\r\n    fluid.cards.close(\".card.focus\");\r\n    fluid.cards(\".card.details\");\r\n}\r\n\r\n/**\r\n * Shows the module stream for a class\r\n * \r\n * @param {string} classID Class number to fetch modules for\r\n */\r\ndtps.moduleStream = function (classID) {\r\n    //Get class index and set as selected class\r\n    var classNum = dtps.classes.map(course => course.id).indexOf(classID);\r\n    dtps.selectedClass = classNum;\r\n\r\n    //Set stream as the selected content\r\n    dtps.selectedContent = \"moduleStream\";\r\n    $(\"#dtpsTabBar .btn\").removeClass(\"active\");\r\n    $(\"#dtpsTabBar .btn.stream\").addClass(\"active\");\r\n\r\n    //Save coursework stream preference\r\n    window.localStorage.setItem(\"courseworkPref-\" + classID, \"moduleStream\");\r\n\r\n    //Load class color, name, etc.\r\n    dtps.presentClass(classNum);\r\n\r\n    //Ensure classes are shown in the sidebar\r\n    dtps.showClasses();\r\n\r\n    if (classNum == -1) {\r\n        //Class does not exist\r\n        dtps.error(\"The selected class doesn't exist\", \"classNum check failed @ dtps.moduleStream\");\r\n    }\r\n\r\n    //Show loading indicator\r\n    if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"moduleStream\")) {\r\n        jQuery(\".classContent\").html(dtps.renderStreamTools(classNum, \"modules\") + /*html*/`\r\n            <div class=\"module card collapsed\">\r\n                <h4>\r\n                    <i class=\"fluid-icon collapseIcon shimmer\">star</i>\r\n                    <span class=\"shimmer\">[SHIMMER] Module title (collapsed)</span>\r\n                </h4>\r\n                <div class=\"moduleContents\" style=\"padding-top: 10px;\"></div>\r\n            </div>\r\n            <div class=\"module card\">\r\n                <h4>\r\n                    <i class=\"fluid-icon collapseIcon shimmer\">star</i>\r\n                    <span class=\"shimmer\">[SHIMMER] Module title</span>\r\n                </h4>\r\n        \r\n                <div class=\"moduleContents\" style=\"padding-top: 10px;\">\r\n                    <div class=\"moduleItem shimmer\">[SHMMER] module item</div>\r\n                    <div class=\"moduleItem shimmer\">[SHMMER] module item</div>\r\n                    <div class=\"moduleItem shimmer\">[SHMMER] module item</div>\r\n                    <div class=\"moduleItem shimmer\">[SHMMER] module item</div>\r\n                    <div class=\"moduleItem shimmer\">[SHMMER] module item</div>\r\n                </div>\r\n            </div>\r\n        `);\r\n    }\r\n\r\n    new Promise(resolve => {\r\n        if (dtps.classes[classNum].modules && (dtps.classes[classNum].modules !== true)) {\r\n            resolve(dtps.classes[classNum].modules);\r\n        } else {\r\n            dtpsLMS.fetchModules(dtps.user.id, dtps.classes[classNum].lmsID).then(data => resolve(data));\r\n        }\r\n    }).then(data => {\r\n        //Save modules data in the class object for future use\r\n        dtps.classes[classNum].modules = data;\r\n\r\n        var modulesHTML = dtps.renderStreamTools(classNum, \"modules\");\r\n        var allCollapsed = true;\r\n\r\n        data.forEach(module => {\r\n            var moduleItemHTML = \"\";\r\n            if (!module.collapsed) allCollapsed = false;\r\n\r\n            //Get HTML for each module item\r\n            module.items.forEach(item => {\r\n                //Get module item icon\r\n                var icon = \"list\";\r\n                if (item.type == \"assignment\") icon = \"assignment\";\r\n                if (item.type == \"page\") icon = \"insert_drive_file\";\r\n                if (item.type == \"discussion\") icon = \"forum\";\r\n                if (item.type == \"url\") icon = \"open_in_new\";\r\n                if (item.type == \"header\") icon = \"format_size\";\r\n                if (item.type == \"embed\") icon = \"web\";\r\n\r\n                //Get module action\r\n                var action = \"\";\r\n                if (item.type == \"assignment\") action = \"dtps.assignment('\" + item.id + \"', \" + classNum + \")\";\r\n                if (item.type == \"page\") {\r\n                    action = \"fluid.screen('pages', '\" + classID + \"|\" + item.id + \"|true')\";\r\n                }\r\n                if (item.type == \"discussion\") {\r\n                    action = \"fluid.screen('discussions', '\" + classID + \"|\" + item.id + \"|true')\";\r\n                }\r\n                if (item.type == \"url\") action = \"window.open('\" + item.url + \"')\";\r\n                if (item.type == \"header\") action = \"\";\r\n                if (item.type == \"embed\") action = \"dtps.showIFrameCard('\" + item.url + \"')\";\r\n\r\n                //Get module HTML\r\n                if (item.type == \"header\") {\r\n                    moduleItemHTML += `<h5 style=\"font-size: 16px;padding: 0px 10px; text-decoration: underline;\">${item.title}</h5>`;\r\n                } else {\r\n                    moduleItemHTML += `\r\n                        <div class=\"moduleItem\" onclick=\"${action}\" style=\"margin-left: ${item.indent * 15}px;\">\r\n                            <i ${item.completed ? `style=\"color: #27ba3c\"` : \"\"} class=\"fluid-icon\">${item.completed ? \"check\" : icon}</i>\r\n                            ${item.title}\r\n                        </div>\r\n                    `;\r\n                }\r\n            });\r\n\r\n            //Add HTML for this module to the string\r\n            modulesHTML += /*html*/`\r\n                <div class=\"module card ${module.collapsed ? \"collapsed\" : \"\"}\">\r\n                    <h4>\r\n                        <i onclick=\"dtps.moduleCollapse(this, '${dtps.classes[classNum].id}', '${module.id}');\" \r\n                            class=\"fluid-icon collapseIcon\">${module.collapsed ? \"keyboard_arrow_right\" : \"keyboard_arrow_down\"}</i>\r\n                        ${module.title}\r\n                    </h4>\r\n\r\n                    <div class=\"moduleContents\" style=\"padding-top: 10px;\">\r\n                        ${moduleItemHTML}\r\n                    </div>\r\n                </div>\r\n            `;\r\n        });\r\n\r\n        if (data.length == 0) {\r\n            modulesHTML += /*html*/`\r\n                <div style=\"text-align: center;\">\r\n                    <div style=\"margin: 60px; padding: 20px 40px; display: inline-block; border: 2px solid var(--elements); border-radius: var(--elementRadius);\">\r\n                        <h5>No Modules</h5>\r\n                        <p>There aren't any modules in this class yet.</p>\r\n                    </div>\r\n                </div>\r\n            `;\r\n        }\r\n\r\n        //Render module HTML\r\n        if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"moduleStream\")) {\r\n            $(\".classContent\").html(modulesHTML);\r\n            if (dtpsLMS.collapseAllModules) {\r\n                $(\"#moduleExpandCollapse\").html(allCollapsed ? `<i class=\"fluid-icon\">unfold_more</i> Expand all` : `<i class=\"fluid-icon\">unfold_less</i> Collapse all`);\r\n                $(\"#moduleExpandCollapse\").attr(\"onclick\", allCollapsed ? `dtps.moduleCollapseAll(false)` : `dtps.moduleCollapseAll(true)`);\r\n                $(\"#moduleExpandCollapse\").show();\r\n            }\r\n        }\r\n    }).catch(err => {\r\n        dtps.error(\"Could not load modules\", \"Caught promise rejection @ dtps.moduleStream\", err);\r\n    });\r\n}\r\n\r\n/**\r\n * Collapses a module\r\n * \r\n * @param {Element} ele Element of the module collapse arrow\r\n * @param {string} classID Class ID\r\n * @param {string} modID Module ID of the module to collapse\r\n */\r\ndtps.moduleCollapse = function (ele, classID, modID) {\r\n    //Add collapsed class to module card\r\n    $(ele).parents('.card').toggleClass('collapsed');\r\n\r\n    //Update arrow icon and, if the LMS supports it, collapse the module in the LMS as well\r\n    if ($(ele).parents('.card').hasClass('collapsed')) {\r\n        if (dtpsLMS.collapseModule) dtpsLMS.collapseModule(classID, modID, true);\r\n        $(ele).html('keyboard_arrow_right');\r\n        dtps.classes[dtps.selectedClass].modules.find(m => m.id == modID).collapsed = true;\r\n    } else {\r\n        if (dtpsLMS.collapseModule) dtpsLMS.collapseModule(classID, modID, false);\r\n        $(ele).html('keyboard_arrow_down');\r\n        dtps.classes[dtps.selectedClass].modules.find(m => m.id == modID).collapsed = false;\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Collapses all module\r\n * \r\n * @param {boolean} collapse If true, modules will be collapsed, otherwise, they will all be expanded\r\n */\r\ndtps.moduleCollapseAll = function (collapse) {\r\n    if (collapse && dtpsLMS.collapseAllModules) {\r\n        dtpsLMS.collapseAllModules(dtps.classes[dtps.selectedClass].lmsID, true);\r\n        $(\".classContent .card.module h4 i\").text(\"keyboard_arrow_right\");\r\n        $(\".classContent .module.card\").addClass(\"collapsed\");\r\n        dtps.classes[dtps.selectedClass].modules.forEach(m => m.collapsed = true);\r\n        $(\"#moduleExpandCollapse\").html(`<i class=\"fluid-icon\">unfold_more</i> Expand all`);\r\n        $(\"#moduleExpandCollapse\").attr(\"onclick\", `dtps.moduleCollapseAll(false)`);\r\n    } else if (dtpsLMS.collapseAllModules) {\r\n        dtpsLMS.collapseAllModules(dtps.classes[dtps.selectedClass].lmsID, false);\r\n        $(\".classContent .card.module h4 i\").text(\"keyboard_arrow_down\");\r\n        $(\".classContent .module.card\").removeClass(\"collapsed\");\r\n        dtps.classes[dtps.selectedClass].modules.forEach(m => m.collapsed = false);\r\n        $(\"#moduleExpandCollapse\").html(`<i class=\"fluid-icon\">unfold_less</i> Collapse all`);\r\n        $(\"#moduleExpandCollapse\").attr(\"onclick\", `dtps.moduleCollapseAll(true)`);\r\n    }\r\n}\r\n\r\n/**\r\n * Gets stream tools HTML (search box, class info, and modules/assignment switcher)\r\n * \r\n * @param {number} num Class number\r\n * @param {string} type Class content these tools are for (e.g. \"stream\")\r\n * @return {string} Stream tools HTML\r\n */\r\ndtps.renderStreamTools = function (num, type) {\r\n    var modulesSelector = dtps.classes[num].modules;\r\n    return /*html*/`\r\n        ${(type == \"modules\") || (type == \"stream\") ? /*html*/`\r\n            <div style=\"text-align: right;${modulesSelector ? \"\" : \"margin-top: 20px;\"}\">\r\n                ${modulesSelector ? /*html*/`\r\n                    ${(type == \"modules\") && dtpsLMS.collapseAllModules ? `<button id=\"moduleExpandCollapse\" onclick=\"dtps.moduleCollapseAll()\" style=\"margin-right:20px;display:none;\" class=\"btn\"></button>` : \"\"}\r\n                    <div class=\"btns row small assignmentPicker\" style=\"margin: 5px 20px 5px 0px !important;\">\r\n                        <button class=\"btn ${type == \"stream\" ? \"active\" : \"\"}\" onclick=\"fluid.screen('stream', dtps.classes[dtps.selectedClass].id);\"><i class=\"fluid-icon\">assignment</i>Assignments</button>\r\n                        <button class=\"btn ${type == \"modules\" ? \"active\" : \"\"}\" onclick=\"fluid.screen('moduleStream', dtps.classes[dtps.selectedClass].id);\"><i class=\"fluid-icon\">view_module</i>Modules</button>\r\n                    </div>\r\n                ` : ``}\r\n                \r\n            </div>` : ``\r\n        }\r\n    `;\r\n}\r\n\r\n/**\r\n * Shows the generic gradebook\r\n * \r\n * @param {string} classID Class ID\r\n */\r\ndtps.gradebook = function (classID) {\r\n    //Get class index and set as selected class\r\n    var classNum = dtps.classes.map(course => course.id).indexOf(classID);\r\n    dtps.selectedClass = classNum;\r\n\r\n    //Set stream as the selected content\r\n    dtps.selectedContent = \"grades\";\r\n    $(\"#dtpsTabBar .btn\").removeClass(\"active\");\r\n    $(\"#dtpsTabBar .btn.grades\").addClass(\"active\");\r\n\r\n    //Load class color, name, etc.\r\n    dtps.presentClass(classNum);\r\n\r\n    //Ensure classes are shown in the sidebar\r\n    dtps.showClasses();\r\n\r\n    if (classNum == -1) {\r\n        //Class does not exist\r\n        dtps.error(\"The selected class doesn't exist\", \"classNum check failed @ dtps.gradebook\");\r\n    }\r\n\r\n    //Show loading indicator\r\n    if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"grades\")) {\r\n        jQuery(\".classContent\").html(`<div class=\"spinner\"></div>`);\r\n    }\r\n\r\n    //Terminate function if the class doesn't have a letter grade or assignments\r\n    if (!dtps.classes[classNum].letter || !dtps.classes[classNum].assignments) {\r\n        return;\r\n    }\r\n\r\n    //Define variables for total points and zeros\r\n    var zeros = 0;\r\n    var totalPoints = 0;\r\n    var earnedPoints = 0;\r\n    var gradedAssignments = 0;\r\n\r\n    //Define variable for assignment HTML string\r\n    var assignmentHTML = \"\";\r\n\r\n    //Calculate total points and zeros\r\n    dtps.classes[classNum].assignments.forEach(assignment => {\r\n        if (assignment.grade || (assignment.grade == 0)) {\r\n            earnedPoints += assignment.grade;\r\n            gradedAssignments++;\r\n\r\n            assignmentHTML += /*html*/`\r\n                <div onclick=\"dtps.assignment('${assignment.id}', ${classNum})\" class=\"gradebookAssignment card\">\r\n                    <h5>\r\n                        ${assignment.title}\r\n\r\n                        <div class=\"stats\">\r\n                            ${assignment.letter ? `<div class=\"gradebookLetter\">${assignment.letter}</div>` : \"\"}\r\n                            <div class=\"gradebookScore\">${assignment.grade}</div>\r\n                            <div class=\"gradebookValue\">/${assignment.value}</div>\r\n                            <div class=\"gradebookPercentage\">${Math.round((assignment.grade / assignment.value) * 100)}%</div>\r\n                        </div>\r\n                    </h5>\r\n                </div>\r\n            `;\r\n        }\r\n\r\n        if (assignment.value) {\r\n            totalPoints += assignment.value;\r\n        }\r\n\r\n        if ((assignment.grade == 0) && assignment.value) {\r\n            zeros++;\r\n        }\r\n    })\r\n\r\n    //Grade calculation summary\r\n    var gradeCalcSummary = /*html*/`\r\n        <div style=\"--classColor: ${dtps.classes[classNum].color}\" class=\"card\">\r\n            <h3 class=\"gradeTitle\">\r\n                Grade Summary\r\n                <div class=\"classGradeCircle\">\r\n                    ${dtps.classes[classNum].grade ? `<span class=\"percentage\">${dtps.classes[classNum].grade}%</span>` : ``}\r\n                    <div class=\"letter\">${dtps.classes[classNum].letter || ``}</div>\r\n                </div>\r\n            </h3>\r\n\r\n            ${zeros ? /*html*/`\r\n                <h5 style=\"color: #d63d3d;\" class=\"gradeStat\">\r\n                    Zeros\r\n                    <div style=\"color: #d63d3d;\" class=\"numFont\">${zeros}</div>\r\n                </h5>\r\n            ` : ``}\r\n\r\n            <div style=\"${dtps.gradebookExpanded ? \"\" : \"display: none;\"}\" id=\"genericClassGradeMore\">\r\n                <br />\r\n\r\n                ${dtps.classes[classNum].previousLetter ? /*html*/`\r\n                    <h5 class=\"smallStat\">\r\n                        Previous Grade\r\n                        <div class=\"numFont\">${dtps.classes[classNum].previousLetter}</div>\r\n                    </h5>\r\n                ` : ``}\r\n\r\n                <h5 class=\"smallStat\">\r\n                    Points\r\n                    <div class=\"numFont fraction\">\r\n                        <span class=\"earned\">${earnedPoints}</span>\r\n                        <span class=\"total\">/${totalPoints}</span>\r\n                    </div>\r\n                </h5>\r\n\r\n                <h5 class=\"smallStat\">\r\n                    Graded Assignments\r\n                    <div class=\"numFont\">${gradedAssignments}</div>\r\n                </h5>\r\n            </div>\r\n\r\n            <br />\r\n            <a onclick=\"$('#genericClassGradeMore').toggle(); if ($('#genericClassGradeMore').is(':visible')) {$(this).html('Show less'); dtps.gradebookExpanded = true;} else {$(this).html('Show more'); dtps.gradebookExpanded = false;}\"\r\n                style=\"color: var(--secText, gray); cursor: pointer; margin-right: 10px;\">${dtps.gradebookExpanded ? \"Show less\" : \"Show more\"}</a>\r\n        </div>\r\n\r\n        <br />\r\n    `;\r\n\r\n\r\n    //Render HTML\r\n    if ((dtps.selectedClass == classNum) && (dtps.selectedContent == \"grades\")) {\r\n        $(\".classContent\").html(gradeCalcSummary + assignmentHTML);\r\n    }\r\n}\r\n\r\n//Fluid UI screen definitions\r\nfluid.externalScreens.dashboard = () => {\r\n    dtps.mainStream();\r\n}\r\n\r\nfluid.externalScreens.stream = (courseID) => {\r\n    dtps.classStream(courseID);\r\n}\r\n\r\nfluid.externalScreens.moduleStream = (courseID) => {\r\n    dtps.moduleStream(courseID);\r\n}\r\n\r\nfluid.externalScreens.gradebook = (courseID) => {\r\n    dtps.gradebook(courseID);\r\n}\r\n\r\n//Type definitions\r\n\r\n/**\r\n* @typedef {Object} Assignment\r\n* @description Defines assignments objects in DTPS\r\n* @property {string} title Title of the assignment\r\n* @property {string} [body] HTML of the assignment's body\r\n* @property {string} id Assignment ID\r\n* @property {number} class Automatically managed by DTPS. The class number that this assignment belongs to.\r\n* @property {Date} [dueAt] Assignment due date\r\n* @property {string} [url] Assignment URL\r\n* @property {AssignmentFeedback[]} [feedback] Feedback / private comments for this assignment\r\n* @property {User} [grader] Assignment grader\r\n* @property {boolean} [turnedIn] True if the assignment is turned in\r\n* @property {boolean} [late] True if the assignment is late\r\n* @property {boolean} [missing] True if the assignment is missing\r\n* @property {boolean} [locked] True if assignment submissions are locked\r\n* @property {string} [category] Assignment category\r\n* @property {Date} [publishedAt] Date for when the assignment was published\r\n* @property {Date} [gradedAt] Date for when the assignment was graded\r\n* @property {number} [grade] Points earned on this assignment\r\n* @property {string} [letter] Letter grade on this assignment\r\n* @property {number} [value] Total amount of points possible for this assignment\r\n* @property {RubricItem[]} [rubric] Assignment rubric\r\n*/\r\n\r\n/**\r\n* @typedef {Object} Module\r\n* @description Defines module objects in DTPS\r\n* @property {string} title Title of the module\r\n* @property {string} id Module ID\r\n* @property {boolean} [collapsed] True if the module is collapsed, false otherwise. undefined or null if this module does not support collapsing.\r\n* @property {ModuleItem[]} items An array of items for this module.\r\n*/\r\n\r\n/**\r\n * @typedef {Object} ModuleItem\r\n * @description Defines module items in DTPS\r\n * @property {string} type Either \"assignment\", \"page\", \"discussion\", \"url\", \"embed\", or \"header\".\r\n * @property {string} [title] Required for URL and header items, and can be used to override the title of assignment, page, and discussion items.\r\n * @property {string} [id] Required for assignment, page, and discussion items.\r\n * @property {string} [url] Required for URL and embed items. Required for discussion and page items if the class does not support the pages or discussions feature.\r\n * @property {number} [indent] Indent level\r\n * @property {boolean} [completed] True if the module item has been completed\r\n */\r\n\r\n/**\r\n* @typedef {Object} Announcement\r\n* @description Defines announcement objects in DTPS\r\n* @property {string} title Title of the announcement\r\n* @property {Date} postedAt Date when the announcement was posted\r\n* @property {string} body Announcement content\r\n* @property {string} url Announcement URL\r\n*/\r\n\r\n/**\r\n* @typedef {Object} AssignmentFeedback\r\n* @description Defines assignment feedback objects in DTPS\r\n* @property {string} comment Feedback comment\r\n* @property {User} [author] Feedback author\r\n*/\r\n\r\n/**\r\n* @typedef {Object} RubricItem\r\n* @description Defines rubric item objects in DTPS\r\n* @property {string} title Title of the rubric item\r\n* @property {string} id Rubric item ID (only needs to be unique to this assignment)\r\n* @property {number} value Total amount of points possible\r\n* @property {string} [outcome] The ID of the outcome this rubric item is assessing. This is only used for grade calculation.\r\n* @property {string} [description] Rubric item description\r\n* @property {number} [score] Rubric assessment score in points\r\n* @property {string} [scoreName] Rubric assessment score name\r\n* @property {string} [color] Score color in a CSS color format\r\n*/\r\n\r\n/**\r\n * @typedef {Object} DashboardItem\r\n * @description Defines dashboard items in DTPS\r\n * @property {string} name Dashbord item name\r\n * @property {string} id Unique dashboard item ID\r\n * @property {string} icon Dashboard item icon\r\n * @property {boolean} supportsCompactMode True if this dashboard item supports compact mode\r\n * @property {number} size The approximate size of this dashboard item relative to other dashboard items. Should be no less than 20.\r\n * @property {string} defaultSide The default side of this dashboard item. Either \"right\" or \"left\".\r\n * @property {boolean} compact True if the user has turned on compact mode for this item.\r\n */"]}